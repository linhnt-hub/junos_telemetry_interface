// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: l2ald_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VlansL2Al struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vlan          []*VlansL2AlVlanList   `protobuf:"bytes,151,rep,name=vlan" json:"vlan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2Al) Reset() {
	*x = VlansL2Al{}
	mi := &file_l2ald_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2Al) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2Al) ProtoMessage() {}

func (x *VlansL2Al) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2Al.ProtoReflect.Descriptor instead.
func (*VlansL2Al) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0}
}

func (x *VlansL2Al) GetVlan() []*VlansL2AlVlanList {
	if x != nil {
		return x.Vlan
	}
	return nil
}

type VlansL2AlVlanList struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	VlanId        *uint32                       `protobuf:"varint,51,opt,name=vlan_id,json=vlanId" json:"vlan_id,omitempty"`
	State         *VlansL2AlVlanListStateType   `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Members       *VlansL2AlVlanListMembersType `protobuf:"bytes,152,opt,name=members" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2AlVlanList) Reset() {
	*x = VlansL2AlVlanList{}
	mi := &file_l2ald_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2AlVlanList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2AlVlanList) ProtoMessage() {}

func (x *VlansL2AlVlanList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2AlVlanList.ProtoReflect.Descriptor instead.
func (*VlansL2AlVlanList) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *VlansL2AlVlanList) GetVlanId() uint32 {
	if x != nil && x.VlanId != nil {
		return *x.VlanId
	}
	return 0
}

func (x *VlansL2AlVlanList) GetState() *VlansL2AlVlanListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *VlansL2AlVlanList) GetMembers() *VlansL2AlVlanListMembersType {
	if x != nil {
		return x.Members
	}
	return nil
}

type VlansL2AlVlanListStateType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VlanId        *uint32                `protobuf:"varint,52,opt,name=vlan_id,json=vlanId" json:"vlan_id,omitempty"`
	Name          *string                `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Status        *string                `protobuf:"bytes,53,opt,name=status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2AlVlanListStateType) Reset() {
	*x = VlansL2AlVlanListStateType{}
	mi := &file_l2ald_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2AlVlanListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2AlVlanListStateType) ProtoMessage() {}

func (x *VlansL2AlVlanListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2AlVlanListStateType.ProtoReflect.Descriptor instead.
func (*VlansL2AlVlanListStateType) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *VlansL2AlVlanListStateType) GetVlanId() uint32 {
	if x != nil && x.VlanId != nil {
		return *x.VlanId
	}
	return 0
}

func (x *VlansL2AlVlanListStateType) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VlansL2AlVlanListStateType) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type VlansL2AlVlanListMembersType struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Member        []*VlansL2AlVlanListMembersTypeMemberList `protobuf:"bytes,151,rep,name=member" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2AlVlanListMembersType) Reset() {
	*x = VlansL2AlVlanListMembersType{}
	mi := &file_l2ald_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2AlVlanListMembersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2AlVlanListMembersType) ProtoMessage() {}

func (x *VlansL2AlVlanListMembersType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2AlVlanListMembersType.ProtoReflect.Descriptor instead.
func (*VlansL2AlVlanListMembersType) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *VlansL2AlVlanListMembersType) GetMember() []*VlansL2AlVlanListMembersTypeMemberList {
	if x != nil {
		return x.Member
	}
	return nil
}

type VlansL2AlVlanListMembersTypeMemberList struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	InterfaceRef  *VlansL2AlVlanListMembersTypeMemberListInterfaceRefType `protobuf:"bytes,151,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2AlVlanListMembersTypeMemberList) Reset() {
	*x = VlansL2AlVlanListMembersTypeMemberList{}
	mi := &file_l2ald_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2AlVlanListMembersTypeMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2AlVlanListMembersTypeMemberList) ProtoMessage() {}

func (x *VlansL2AlVlanListMembersTypeMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2AlVlanListMembersTypeMemberList.ProtoReflect.Descriptor instead.
func (*VlansL2AlVlanListMembersTypeMemberList) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *VlansL2AlVlanListMembersTypeMemberList) GetInterfaceRef() *VlansL2AlVlanListMembersTypeMemberListInterfaceRefType {
	if x != nil {
		return x.InterfaceRef
	}
	return nil
}

type VlansL2AlVlanListMembersTypeMemberListInterfaceRefType struct {
	state         protoimpl.MessageState                                           `protogen:"open.v1"`
	State         *VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefType) Reset() {
	*x = VlansL2AlVlanListMembersTypeMemberListInterfaceRefType{}
	mi := &file_l2ald_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2AlVlanListMembersTypeMemberListInterfaceRefType) ProtoMessage() {}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2AlVlanListMembersTypeMemberListInterfaceRefType.ProtoReflect.Descriptor instead.
func (*VlansL2AlVlanListMembersTypeMemberListInterfaceRefType) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0, 0, 1, 0, 0}
}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefType) GetState() *VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType {
	if x != nil {
		return x.State
	}
	return nil
}

type VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *string                `protobuf:"bytes,51,opt,name=interface" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType) Reset() {
	*x = VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType{}
	mi := &file_l2ald_oc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType) ProtoMessage() {}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_oc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType.ProtoReflect.Descriptor instead.
func (*VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType) Descriptor() ([]byte, []int) {
	return file_l2ald_oc_proto_rawDescGZIP(), []int{0, 0, 1, 0, 0, 0}
}

func (x *VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType) GetInterface() string {
	if x != nil && x.Interface != nil {
		return *x.Interface
	}
	return ""
}

var file_l2ald_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*VlansL2Al)(nil),
		Field:         50,
		Name:          "jnpr_vlans_l2al_ext",
		Tag:           "bytes,50,opt,name=jnpr_vlans_l2al_ext",
		Filename:      "l2ald_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional vlans_l2al jnpr_vlans_l2al_ext = 50;
	E_JnprVlansL2AlExt = &file_l2ald_oc_proto_extTypes[0]
)

var File_l2ald_oc_proto protoreflect.FileDescriptor

var file_l2ald_oc_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x6c, 0x32, 0x61, 0x6c, 0x64, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x05, 0x0a, 0x0a, 0x76, 0x6c, 0x61, 0x6e, 0x73, 0x5f,
	0x6c, 0x32, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x97, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c,
	0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e,
	0x1a, 0xf1, 0x04, 0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c, 0x2e, 0x76, 0x6c, 0x61, 0x6e,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x6c, 0x61, 0x6e,
	0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x51, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xf8, 0x02, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x76, 0x6c,
	0x61, 0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x1a, 0x9e, 0x02, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x76, 0x6c,
	0x61, 0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x1a, 0xa5, 0x01, 0x0a,
	0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c,
	0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x2a, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x3a, 0x53, 0x0a, 0x13, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x76, 0x6c, 0x61,
	0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x6c, 0x61,
	0x6e, 0x73, 0x5f, 0x6c, 0x32, 0x61, 0x6c, 0x52, 0x10, 0x6a, 0x6e, 0x70, 0x72, 0x56, 0x6c, 0x61,
	0x6e, 0x73, 0x4c, 0x32, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a,
	0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_l2ald_oc_proto_rawDescOnce sync.Once
	file_l2ald_oc_proto_rawDescData []byte
)

func file_l2ald_oc_proto_rawDescGZIP() []byte {
	file_l2ald_oc_proto_rawDescOnce.Do(func() {
		file_l2ald_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_l2ald_oc_proto_rawDesc), len(file_l2ald_oc_proto_rawDesc)))
	})
	return file_l2ald_oc_proto_rawDescData
}

var file_l2ald_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_l2ald_oc_proto_goTypes = []any{
	(*VlansL2Al)(nil),                                                       // 0: vlans_l2al
	(*VlansL2AlVlanList)(nil),                                               // 1: vlans_l2al.vlan_list
	(*VlansL2AlVlanListStateType)(nil),                                      // 2: vlans_l2al.vlan_list.state_type
	(*VlansL2AlVlanListMembersType)(nil),                                    // 3: vlans_l2al.vlan_list.members_type
	(*VlansL2AlVlanListMembersTypeMemberList)(nil),                          // 4: vlans_l2al.vlan_list.members_type.member_list
	(*VlansL2AlVlanListMembersTypeMemberListInterfaceRefType)(nil),          // 5: vlans_l2al.vlan_list.members_type.member_list.interface_ref_type
	(*VlansL2AlVlanListMembersTypeMemberListInterfaceRefTypeStateType)(nil), // 6: vlans_l2al.vlan_list.members_type.member_list.interface_ref_type.state_type
	(*JuniperNetworksSensors)(nil),                                          // 7: JuniperNetworksSensors
}
var file_l2ald_oc_proto_depIdxs = []int32{
	1, // 0: vlans_l2al.vlan:type_name -> vlans_l2al.vlan_list
	2, // 1: vlans_l2al.vlan_list.state:type_name -> vlans_l2al.vlan_list.state_type
	3, // 2: vlans_l2al.vlan_list.members:type_name -> vlans_l2al.vlan_list.members_type
	4, // 3: vlans_l2al.vlan_list.members_type.member:type_name -> vlans_l2al.vlan_list.members_type.member_list
	5, // 4: vlans_l2al.vlan_list.members_type.member_list.interface_ref:type_name -> vlans_l2al.vlan_list.members_type.member_list.interface_ref_type
	6, // 5: vlans_l2al.vlan_list.members_type.member_list.interface_ref_type.state:type_name -> vlans_l2al.vlan_list.members_type.member_list.interface_ref_type.state_type
	7, // 6: jnpr_vlans_l2al_ext:extendee -> JuniperNetworksSensors
	0, // 7: jnpr_vlans_l2al_ext:type_name -> vlans_l2al
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	7, // [7:8] is the sub-list for extension type_name
	6, // [6:7] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_l2ald_oc_proto_init() }
func file_l2ald_oc_proto_init() {
	if File_l2ald_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_l2ald_oc_proto_rawDesc), len(file_l2ald_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_l2ald_oc_proto_goTypes,
		DependencyIndexes: file_l2ald_oc_proto_depIdxs,
		MessageInfos:      file_l2ald_oc_proto_msgTypes,
		ExtensionInfos:    file_l2ald_oc_proto_extTypes,
	}.Build()
	File_l2ald_oc_proto = out.File
	file_l2ald_oc_proto_goTypes = nil
	file_l2ald_oc_proto_depIdxs = nil
}
