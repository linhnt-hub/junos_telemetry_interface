// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: jkdsd_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemDebug struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Processes     *SystemDebugProcessesType `protobuf:"bytes,151,opt,name=processes" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemDebug) Reset() {
	*x = SystemDebug{}
	mi := &file_jkdsd_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemDebug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDebug) ProtoMessage() {}

func (x *SystemDebug) ProtoReflect() protoreflect.Message {
	mi := &file_jkdsd_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDebug.ProtoReflect.Descriptor instead.
func (*SystemDebug) Descriptor() ([]byte, []int) {
	return file_jkdsd_oc_proto_rawDescGZIP(), []int{0}
}

func (x *SystemDebug) GetProcesses() *SystemDebugProcessesType {
	if x != nil {
		return x.Processes
	}
	return nil
}

type SystemDebugProcessesType struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Process       []*SystemDebugProcessesTypeProcessList `protobuf:"bytes,151,rep,name=process" json:"process,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemDebugProcessesType) Reset() {
	*x = SystemDebugProcessesType{}
	mi := &file_jkdsd_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemDebugProcessesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDebugProcessesType) ProtoMessage() {}

func (x *SystemDebugProcessesType) ProtoReflect() protoreflect.Message {
	mi := &file_jkdsd_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDebugProcessesType.ProtoReflect.Descriptor instead.
func (*SystemDebugProcessesType) Descriptor() ([]byte, []int) {
	return file_jkdsd_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SystemDebugProcessesType) GetProcess() []*SystemDebugProcessesTypeProcessList {
	if x != nil {
		return x.Process
	}
	return nil
}

type SystemDebugProcessesTypeProcessList struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Pid           *uint64                                       `protobuf:"varint,51,opt,name=pid" json:"pid,omitempty"`
	State         *SystemDebugProcessesTypeProcessListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemDebugProcessesTypeProcessList) Reset() {
	*x = SystemDebugProcessesTypeProcessList{}
	mi := &file_jkdsd_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemDebugProcessesTypeProcessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDebugProcessesTypeProcessList) ProtoMessage() {}

func (x *SystemDebugProcessesTypeProcessList) ProtoReflect() protoreflect.Message {
	mi := &file_jkdsd_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDebugProcessesTypeProcessList.ProtoReflect.Descriptor instead.
func (*SystemDebugProcessesTypeProcessList) Descriptor() ([]byte, []int) {
	return file_jkdsd_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *SystemDebugProcessesTypeProcessList) GetPid() uint64 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessList) GetState() *SystemDebugProcessesTypeProcessListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

type SystemDebugProcessesTypeProcessListStateType struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Pid               *uint64                `protobuf:"varint,51,opt,name=pid" json:"pid,omitempty"`
	Name              *string                `protobuf:"bytes,52,opt,name=name" json:"name,omitempty"`
	StartTime         *uint64                `protobuf:"varint,53,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Uptime            *uint64                `protobuf:"varint,54,opt,name=uptime" json:"uptime,omitempty"`
	CpuUsageUser      *uint64                `protobuf:"varint,55,opt,name=cpu_usage_user,json=cpuUsageUser" json:"cpu_usage_user,omitempty"`
	CpuUsageSystem    *uint64                `protobuf:"varint,56,opt,name=cpu_usage_system,json=cpuUsageSystem" json:"cpu_usage_system,omitempty"`
	CpuUtilization    *uint32                `protobuf:"varint,57,opt,name=cpu_utilization,json=cpuUtilization" json:"cpu_utilization,omitempty"`
	MemoryUsage       *uint64                `protobuf:"varint,58,opt,name=memory_usage,json=memoryUsage" json:"memory_usage,omitempty"`
	MemoryUtilization *uint32                `protobuf:"varint,59,opt,name=memory_utilization,json=memoryUtilization" json:"memory_utilization,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SystemDebugProcessesTypeProcessListStateType) Reset() {
	*x = SystemDebugProcessesTypeProcessListStateType{}
	mi := &file_jkdsd_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemDebugProcessesTypeProcessListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDebugProcessesTypeProcessListStateType) ProtoMessage() {}

func (x *SystemDebugProcessesTypeProcessListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_jkdsd_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDebugProcessesTypeProcessListStateType.ProtoReflect.Descriptor instead.
func (*SystemDebugProcessesTypeProcessListStateType) Descriptor() ([]byte, []int) {
	return file_jkdsd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetPid() uint64 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetStartTime() uint64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetUptime() uint64 {
	if x != nil && x.Uptime != nil {
		return *x.Uptime
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetCpuUsageUser() uint64 {
	if x != nil && x.CpuUsageUser != nil {
		return *x.CpuUsageUser
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetCpuUsageSystem() uint64 {
	if x != nil && x.CpuUsageSystem != nil {
		return *x.CpuUsageSystem
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetCpuUtilization() uint32 {
	if x != nil && x.CpuUtilization != nil {
		return *x.CpuUtilization
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetMemoryUsage() uint64 {
	if x != nil && x.MemoryUsage != nil {
		return *x.MemoryUsage
	}
	return 0
}

func (x *SystemDebugProcessesTypeProcessListStateType) GetMemoryUtilization() uint32 {
	if x != nil && x.MemoryUtilization != nil {
		return *x.MemoryUtilization
	}
	return 0
}

var file_jkdsd_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*SystemDebug)(nil),
		Field:         106,
		Name:          "jnpr_system_debug_ext",
		Tag:           "bytes,106,opt,name=jnpr_system_debug_ext",
		Filename:      "jkdsd_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional system_debug jnpr_system_debug_ext = 106;
	E_JnprSystemDebugExt = &file_jkdsd_oc_proto_extTypes[0]
)

var File_jkdsd_oc_proto protoreflect.FileDescriptor

var file_jkdsd_oc_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x6a, 0x6b, 0x64, 0x73, 0x64, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x04, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x1a, 0x84, 0x04, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x1a, 0xab, 0x03, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08,
	0x01, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x1a, 0xb4, 0x02, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x70, 0x75, 0x55, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x59, 0x0a, 0x15, 0x6a, 0x6e,
	0x70, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f,
	0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x52, 0x12, 0x6a, 0x6e, 0x70, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65,
})

var (
	file_jkdsd_oc_proto_rawDescOnce sync.Once
	file_jkdsd_oc_proto_rawDescData []byte
)

func file_jkdsd_oc_proto_rawDescGZIP() []byte {
	file_jkdsd_oc_proto_rawDescOnce.Do(func() {
		file_jkdsd_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jkdsd_oc_proto_rawDesc), len(file_jkdsd_oc_proto_rawDesc)))
	})
	return file_jkdsd_oc_proto_rawDescData
}

var file_jkdsd_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_jkdsd_oc_proto_goTypes = []any{
	(*SystemDebug)(nil),                                  // 0: system_debug
	(*SystemDebugProcessesType)(nil),                     // 1: system_debug.processes_type
	(*SystemDebugProcessesTypeProcessList)(nil),          // 2: system_debug.processes_type.process_list
	(*SystemDebugProcessesTypeProcessListStateType)(nil), // 3: system_debug.processes_type.process_list.state_type
	(*JuniperNetworksSensors)(nil),                       // 4: JuniperNetworksSensors
}
var file_jkdsd_oc_proto_depIdxs = []int32{
	1, // 0: system_debug.processes:type_name -> system_debug.processes_type
	2, // 1: system_debug.processes_type.process:type_name -> system_debug.processes_type.process_list
	3, // 2: system_debug.processes_type.process_list.state:type_name -> system_debug.processes_type.process_list.state_type
	4, // 3: jnpr_system_debug_ext:extendee -> JuniperNetworksSensors
	0, // 4: jnpr_system_debug_ext:type_name -> system_debug
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_jkdsd_oc_proto_init() }
func file_jkdsd_oc_proto_init() {
	if File_jkdsd_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jkdsd_oc_proto_rawDesc), len(file_jkdsd_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_jkdsd_oc_proto_goTypes,
		DependencyIndexes: file_jkdsd_oc_proto_depIdxs,
		MessageInfos:      file_jkdsd_oc_proto_msgTypes,
		ExtensionInfos:    file_jkdsd_oc_proto_extTypes,
	}.Build()
	File_jkdsd_oc_proto = out.File
	file_jkdsd_oc_proto_goTypes = nil
	file_jkdsd_oc_proto_depIdxs = nil
}
