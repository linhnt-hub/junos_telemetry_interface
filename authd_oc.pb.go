// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: authd_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosAuthentication struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	System        *JunosAuthenticationSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthentication) Reset() {
	*x = JunosAuthentication{}
	mi := &file_authd_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthentication) ProtoMessage() {}

func (x *JunosAuthentication) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthentication.ProtoReflect.Descriptor instead.
func (*JunosAuthentication) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0}
}

func (x *JunosAuthentication) GetSystem() *JunosAuthenticationSystemType {
	if x != nil {
		return x.System
	}
	return nil
}

type JunosAuthenticationSystemType struct {
	state                protoimpl.MessageState                                 `protogen:"open.v1"`
	SubscriberManagement *JunosAuthenticationSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemType) Reset() {
	*x = JunosAuthenticationSystemType{}
	mi := &file_authd_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemType) ProtoMessage() {}

func (x *JunosAuthenticationSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosAuthenticationSystemType) GetSubscriberManagement() *JunosAuthenticationSystemTypeSubscriberManagementType {
	if x != nil {
		return x.SubscriberManagement
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementType struct {
	state         protoimpl.MessageState                                        `protogen:"open.v1"`
	Aaa           *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType `protobuf:"bytes,151,opt,name=aaa" json:"aaa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementType{}
	mi := &file_authd_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementType) ProtoMessage() {}

func (x *JunosAuthenticationSystemTypeSubscriberManagementType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementType) GetAaa() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType {
	if x != nil {
		return x.Aaa
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType struct {
	state                       protoimpl.MessageState                                                                       `protogen:"open.v1"`
	AuthenticationStatistics    *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType    `protobuf:"bytes,152,opt,name=authentication_statistics,json=authenticationStatistics" json:"authentication_statistics,omitempty"`
	AccountingStatistics        *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType        `protobuf:"bytes,153,opt,name=accounting_statistics,json=accountingStatistics" json:"accounting_statistics,omitempty"`
	DynamicRequestStatistics    *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType    `protobuf:"bytes,154,opt,name=dynamic_request_statistics,json=dynamicRequestStatistics" json:"dynamic_request_statistics,omitempty"`
	RadiusServers               *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType               `protobuf:"bytes,155,opt,name=radius_servers,json=radiusServers" json:"radius_servers,omitempty"`
	AddressAssignmentStatistics *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType `protobuf:"bytes,156,opt,name=address_assignment_statistics,json=addressAssignmentStatistics" json:"address_assignment_statistics,omitempty"`
	Diameter                    *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType                    `protobuf:"bytes,157,opt,name=diameter" json:"diameter,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType{}
	mi := &file_authd_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) ProtoMessage() {}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) GetAuthenticationStatistics() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType {
	if x != nil {
		return x.AuthenticationStatistics
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) GetAccountingStatistics() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType {
	if x != nil {
		return x.AccountingStatistics
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) GetDynamicRequestStatistics() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType {
	if x != nil {
		return x.DynamicRequestStatistics
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) GetRadiusServers() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType {
	if x != nil {
		return x.RadiusServers
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) GetAddressAssignmentStatistics() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType {
	if x != nil {
		return x.AddressAssignmentStatistics
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType) GetDiameter() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType {
	if x != nil {
		return x.Diameter
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ReqReceived               *uint64                `protobuf:"varint,51,opt,name=req_received,json=reqReceived" json:"req_received,omitempty"`
	ReqAccepted               *uint64                `protobuf:"varint,52,opt,name=req_accepted,json=reqAccepted" json:"req_accepted,omitempty"`
	ReqRejected               *uint64                `protobuf:"varint,53,opt,name=req_rejected,json=reqRejected" json:"req_rejected,omitempty"`
	ReqChallenge              *uint64                `protobuf:"varint,54,opt,name=req_challenge,json=reqChallenge" json:"req_challenge,omitempty"`
	ReqTimeout                *uint64                `protobuf:"varint,55,opt,name=req_timeout,json=reqTimeout" json:"req_timeout,omitempty"`
	PreAuthenReqReceived      *uint64                `protobuf:"varint,56,opt,name=pre_authen_req_received,json=preAuthenReqReceived" json:"pre_authen_req_received,omitempty"`
	PreAuthenReqAccepted      *uint64                `protobuf:"varint,57,opt,name=pre_authen_req_accepted,json=preAuthenReqAccepted" json:"pre_authen_req_accepted,omitempty"`
	PreAuthenReqRejected      *uint64                `protobuf:"varint,58,opt,name=pre_authen_req_rejected,json=preAuthenReqRejected" json:"pre_authen_req_rejected,omitempty"`
	PreAuthenReqChallenge     *uint64                `protobuf:"varint,59,opt,name=pre_authen_req_challenge,json=preAuthenReqChallenge" json:"pre_authen_req_challenge,omitempty"`
	PreAuthenReqTimeout       *uint64                `protobuf:"varint,60,opt,name=pre_authen_req_timeout,json=preAuthenReqTimeout" json:"pre_authen_req_timeout,omitempty"`
	ReAuthenReqReceived       *uint64                `protobuf:"varint,61,opt,name=re_authen_req_received,json=reAuthenReqReceived" json:"re_authen_req_received,omitempty"`
	ReAuthenReqAccepted       *uint64                `protobuf:"varint,62,opt,name=re_authen_req_accepted,json=reAuthenReqAccepted" json:"re_authen_req_accepted,omitempty"`
	ReAuthenReqRejected       *uint64                `protobuf:"varint,63,opt,name=re_authen_req_rejected,json=reAuthenReqRejected" json:"re_authen_req_rejected,omitempty"`
	ReAuthenReqInternalErrors *uint64                `protobuf:"varint,64,opt,name=re_authen_req_internal_errors,json=reAuthenReqInternalErrors" json:"re_authen_req_internal_errors,omitempty"`
	ReAuthenReqChallenge      *uint64                `protobuf:"varint,65,opt,name=re_authen_req_challenge,json=reAuthenReqChallenge" json:"re_authen_req_challenge,omitempty"`
	ReAuthenReqTimeout        *uint64                `protobuf:"varint,66,opt,name=re_authen_req_timeout,json=reAuthenReqTimeout" json:"re_authen_req_timeout,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType{}
	mi := &file_authd_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReqReceived() uint64 {
	if x != nil && x.ReqReceived != nil {
		return *x.ReqReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReqAccepted() uint64 {
	if x != nil && x.ReqAccepted != nil {
		return *x.ReqAccepted
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReqRejected() uint64 {
	if x != nil && x.ReqRejected != nil {
		return *x.ReqRejected
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReqChallenge() uint64 {
	if x != nil && x.ReqChallenge != nil {
		return *x.ReqChallenge
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReqTimeout() uint64 {
	if x != nil && x.ReqTimeout != nil {
		return *x.ReqTimeout
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetPreAuthenReqReceived() uint64 {
	if x != nil && x.PreAuthenReqReceived != nil {
		return *x.PreAuthenReqReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetPreAuthenReqAccepted() uint64 {
	if x != nil && x.PreAuthenReqAccepted != nil {
		return *x.PreAuthenReqAccepted
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetPreAuthenReqRejected() uint64 {
	if x != nil && x.PreAuthenReqRejected != nil {
		return *x.PreAuthenReqRejected
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetPreAuthenReqChallenge() uint64 {
	if x != nil && x.PreAuthenReqChallenge != nil {
		return *x.PreAuthenReqChallenge
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetPreAuthenReqTimeout() uint64 {
	if x != nil && x.PreAuthenReqTimeout != nil {
		return *x.PreAuthenReqTimeout
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReAuthenReqReceived() uint64 {
	if x != nil && x.ReAuthenReqReceived != nil {
		return *x.ReAuthenReqReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReAuthenReqAccepted() uint64 {
	if x != nil && x.ReAuthenReqAccepted != nil {
		return *x.ReAuthenReqAccepted
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReAuthenReqRejected() uint64 {
	if x != nil && x.ReAuthenReqRejected != nil {
		return *x.ReAuthenReqRejected
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReAuthenReqInternalErrors() uint64 {
	if x != nil && x.ReAuthenReqInternalErrors != nil {
		return *x.ReAuthenReqInternalErrors
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReAuthenReqChallenge() uint64 {
	if x != nil && x.ReAuthenReqChallenge != nil {
		return *x.ReAuthenReqChallenge
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType) GetReAuthenReqTimeout() uint64 {
	if x != nil && x.ReAuthenReqTimeout != nil {
		return *x.ReAuthenReqTimeout
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AcctReqReceived *uint64                `protobuf:"varint,51,opt,name=acct_req_received,json=acctReqReceived" json:"acct_req_received,omitempty"`
	AcctReqTimeout  *uint64                `protobuf:"varint,52,opt,name=acct_req_timeout,json=acctReqTimeout" json:"acct_req_timeout,omitempty"`
	AcctRespFailure *uint64                `protobuf:"varint,53,opt,name=acct_resp_failure,json=acctRespFailure" json:"acct_resp_failure,omitempty"`
	AcctRespSuccess *uint64                `protobuf:"varint,54,opt,name=acct_resp_success,json=acctRespSuccess" json:"acct_resp_success,omitempty"`
	AcctReqStart    *uint64                `protobuf:"varint,55,opt,name=acct_req_start,json=acctReqStart" json:"acct_req_start,omitempty"`
	AcctReqInterim  *uint64                `protobuf:"varint,56,opt,name=acct_req_interim,json=acctReqInterim" json:"acct_req_interim,omitempty"`
	AcctReqStop     *uint64                `protobuf:"varint,57,opt,name=acct_req_stop,json=acctReqStop" json:"acct_req_stop,omitempty"`
	AcctRespTotal   *uint64                `protobuf:"varint,58,opt,name=acct_resp_total,json=acctRespTotal" json:"acct_resp_total,omitempty"`
	AcctRespStart   *uint64                `protobuf:"varint,59,opt,name=acct_resp_start,json=acctRespStart" json:"acct_resp_start,omitempty"`
	AcctRespInterim *uint64                `protobuf:"varint,60,opt,name=acct_resp_interim,json=acctRespInterim" json:"acct_resp_interim,omitempty"`
	AcctRespStop    *uint64                `protobuf:"varint,61,opt,name=acct_resp_stop,json=acctRespStop" json:"acct_resp_stop,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType{}
	mi := &file_authd_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctReqReceived() uint64 {
	if x != nil && x.AcctReqReceived != nil {
		return *x.AcctReqReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctReqTimeout() uint64 {
	if x != nil && x.AcctReqTimeout != nil {
		return *x.AcctReqTimeout
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctRespFailure() uint64 {
	if x != nil && x.AcctRespFailure != nil {
		return *x.AcctRespFailure
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctRespSuccess() uint64 {
	if x != nil && x.AcctRespSuccess != nil {
		return *x.AcctRespSuccess
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctReqStart() uint64 {
	if x != nil && x.AcctReqStart != nil {
		return *x.AcctReqStart
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctReqInterim() uint64 {
	if x != nil && x.AcctReqInterim != nil {
		return *x.AcctReqInterim
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctReqStop() uint64 {
	if x != nil && x.AcctReqStop != nil {
		return *x.AcctReqStop
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctRespTotal() uint64 {
	if x != nil && x.AcctRespTotal != nil {
		return *x.AcctRespTotal
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctRespStart() uint64 {
	if x != nil && x.AcctRespStart != nil {
		return *x.AcctRespStart
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctRespInterim() uint64 {
	if x != nil && x.AcctRespInterim != nil {
		return *x.AcctRespInterim
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType) GetAcctRespStop() uint64 {
	if x != nil && x.AcctRespStop != nil {
		return *x.AcctRespStop
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	DynamicReqReceived     *uint64                `protobuf:"varint,51,opt,name=dynamic_req_received,json=dynamicReqReceived" json:"dynamic_req_received,omitempty"`
	DynamicReqSuccess      *uint64                `protobuf:"varint,52,opt,name=dynamic_req_success,json=dynamicReqSuccess" json:"dynamic_req_success,omitempty"`
	DynamicReqError        *uint64                `protobuf:"varint,53,opt,name=dynamic_req_error,json=dynamicReqError" json:"dynamic_req_error,omitempty"`
	DynamicReqSilentlyDrop *uint64                `protobuf:"varint,54,opt,name=dynamic_req_silently_drop,json=dynamicReqSilentlyDrop" json:"dynamic_req_silently_drop,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType{}
	mi := &file_authd_oc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 2}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) GetDynamicReqReceived() uint64 {
	if x != nil && x.DynamicReqReceived != nil {
		return *x.DynamicReqReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) GetDynamicReqSuccess() uint64 {
	if x != nil && x.DynamicReqSuccess != nil {
		return *x.DynamicReqSuccess
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) GetDynamicReqError() uint64 {
	if x != nil && x.DynamicReqError != nil {
		return *x.DynamicReqError
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType) GetDynamicReqSilentlyDrop() uint64 {
	if x != nil && x.DynamicReqSilentlyDrop != nil {
		return *x.DynamicReqSilentlyDrop
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType struct {
	state         protoimpl.MessageState                                                                           `protogen:"open.v1"`
	RadiusServer  []*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList `protobuf:"bytes,151,rep,name=radius_server,json=radiusServer" json:"radius_server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType{}
	mi := &file_authd_oc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 3}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType) GetRadiusServer() []*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList {
	if x != nil {
		return x.RadiusServer
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType struct {
	state                         protoimpl.MessageState                                                                                                        `protogen:"open.v1"`
	LogicalSystemRoutingInstances *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType `protobuf:"bytes,151,opt,name=logical_system_routing_instances,json=logicalSystemRoutingInstances" json:"logical_system_routing_instances,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType{}
	mi := &file_authd_oc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 4}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType) GetLogicalSystemRoutingInstances() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType {
	if x != nil {
		return x.LogicalSystemRoutingInstances
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType struct {
	state         protoimpl.MessageState                                                               `protogen:"open.v1"`
	Clients       *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType `protobuf:"bytes,151,opt,name=clients" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType{}
	mi := &file_authd_oc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType) ProtoMessage() {}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 5}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType) GetClients() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType {
	if x != nil {
		return x.Clients
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList struct {
	state         protoimpl.MessageState                                                                                         `protogen:"open.v1"`
	ServerAddress *string                                                                                                        `protobuf:"bytes,52,opt,name=server_address,json=serverAddress" json:"server_address,omitempty"`
	Statistics    *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType   `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	ResponseTime  *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType `protobuf:"bytes,152,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList{}
	mi := &file_authd_oc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 3, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) GetServerAddress() string {
	if x != nil && x.ServerAddress != nil {
		return *x.ServerAddress
	}
	return ""
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) GetStatistics() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList) GetResponseTime() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ServerLastRtt             *uint64                `protobuf:"varint,51,opt,name=server_last_rtt,json=serverLastRtt" json:"server_last_rtt,omitempty"`
	AuthAccessRequests        *uint64                `protobuf:"varint,52,opt,name=auth_access_requests,json=authAccessRequests" json:"auth_access_requests,omitempty"`
	AuthRolloverRequests      *uint64                `protobuf:"varint,53,opt,name=auth_rollover_requests,json=authRolloverRequests" json:"auth_rollover_requests,omitempty"`
	AuthRetransmissions       *uint64                `protobuf:"varint,54,opt,name=auth_retransmissions,json=authRetransmissions" json:"auth_retransmissions,omitempty"`
	AuthAccessAccepts         *uint64                `protobuf:"varint,55,opt,name=auth_access_accepts,json=authAccessAccepts" json:"auth_access_accepts,omitempty"`
	AuthAccessRejects         *uint64                `protobuf:"varint,56,opt,name=auth_access_rejects,json=authAccessRejects" json:"auth_access_rejects,omitempty"`
	AuthAccessChallenges      *uint64                `protobuf:"varint,57,opt,name=auth_access_challenges,json=authAccessChallenges" json:"auth_access_challenges,omitempty"`
	AuthMalformedResponses    *uint64                `protobuf:"varint,58,opt,name=auth_malformed_responses,json=authMalformedResponses" json:"auth_malformed_responses,omitempty"`
	AuthBadAuthenticators     *uint64                `protobuf:"varint,59,opt,name=auth_bad_authenticators,json=authBadAuthenticators" json:"auth_bad_authenticators,omitempty"`
	AuthReqPending            *uint64                `protobuf:"varint,60,opt,name=auth_req_pending,json=authReqPending" json:"auth_req_pending,omitempty"`
	AuthRequestTimeouts       *uint64                `protobuf:"varint,61,opt,name=auth_request_timeouts,json=authRequestTimeouts" json:"auth_request_timeouts,omitempty"`
	AuthUnknownResponses      *uint64                `protobuf:"varint,62,opt,name=auth_unknown_responses,json=authUnknownResponses" json:"auth_unknown_responses,omitempty"`
	AuthPacketsDropped        *uint64                `protobuf:"varint,63,opt,name=auth_packets_dropped,json=authPacketsDropped" json:"auth_packets_dropped,omitempty"`
	PreauthAccessRequests     *uint64                `protobuf:"varint,64,opt,name=preauth_access_requests,json=preauthAccessRequests" json:"preauth_access_requests,omitempty"`
	PreauthRolloverRequests   *uint64                `protobuf:"varint,65,opt,name=preauth_rollover_requests,json=preauthRolloverRequests" json:"preauth_rollover_requests,omitempty"`
	PreauthRetransmissions    *uint64                `protobuf:"varint,66,opt,name=preauth_retransmissions,json=preauthRetransmissions" json:"preauth_retransmissions,omitempty"`
	PreauthAccessAccepts      *uint64                `protobuf:"varint,67,opt,name=preauth_access_accepts,json=preauthAccessAccepts" json:"preauth_access_accepts,omitempty"`
	PreauthAccessRejects      *uint64                `protobuf:"varint,68,opt,name=preauth_access_rejects,json=preauthAccessRejects" json:"preauth_access_rejects,omitempty"`
	PreauthAccessChallenges   *uint64                `protobuf:"varint,69,opt,name=preauth_access_challenges,json=preauthAccessChallenges" json:"preauth_access_challenges,omitempty"`
	PreauthMalformedResponses *uint64                `protobuf:"varint,70,opt,name=preauth_malformed_responses,json=preauthMalformedResponses" json:"preauth_malformed_responses,omitempty"`
	PreauthBadAuthenticators  *uint64                `protobuf:"varint,71,opt,name=preauth_bad_authenticators,json=preauthBadAuthenticators" json:"preauth_bad_authenticators,omitempty"`
	PreauthReqPending         *uint64                `protobuf:"varint,72,opt,name=preauth_req_pending,json=preauthReqPending" json:"preauth_req_pending,omitempty"`
	PreauthRequestTimeouts    *uint64                `protobuf:"varint,73,opt,name=preauth_request_timeouts,json=preauthRequestTimeouts" json:"preauth_request_timeouts,omitempty"`
	PreauthUnknownResponses   *uint64                `protobuf:"varint,74,opt,name=preauth_unknown_responses,json=preauthUnknownResponses" json:"preauth_unknown_responses,omitempty"`
	PreauthPacketsDropped     *uint64                `protobuf:"varint,75,opt,name=preauth_packets_dropped,json=preauthPacketsDropped" json:"preauth_packets_dropped,omitempty"`
	AcctStartRequests         *uint64                `protobuf:"varint,76,opt,name=acct_start_requests,json=acctStartRequests" json:"acct_start_requests,omitempty"`
	AcctInterimRequests       *uint64                `protobuf:"varint,77,opt,name=acct_interim_requests,json=acctInterimRequests" json:"acct_interim_requests,omitempty"`
	AcctStopRequests          *uint64                `protobuf:"varint,78,opt,name=acct_stop_requests,json=acctStopRequests" json:"acct_stop_requests,omitempty"`
	AcctRolloverRequests      *uint64                `protobuf:"varint,79,opt,name=acct_rollover_requests,json=acctRolloverRequests" json:"acct_rollover_requests,omitempty"`
	AcctRetransmissions       *uint64                `protobuf:"varint,80,opt,name=acct_retransmissions,json=acctRetransmissions" json:"acct_retransmissions,omitempty"`
	AcctStartResponses        *uint64                `protobuf:"varint,81,opt,name=acct_start_responses,json=acctStartResponses" json:"acct_start_responses,omitempty"`
	AcctInterimResponses      *uint64                `protobuf:"varint,82,opt,name=acct_interim_responses,json=acctInterimResponses" json:"acct_interim_responses,omitempty"`
	AcctStopResponses         *uint64                `protobuf:"varint,83,opt,name=acct_stop_responses,json=acctStopResponses" json:"acct_stop_responses,omitempty"`
	AcctMalformedResponses    *uint64                `protobuf:"varint,84,opt,name=acct_malformed_responses,json=acctMalformedResponses" json:"acct_malformed_responses,omitempty"`
	AcctBadAuthenticators     *uint64                `protobuf:"varint,85,opt,name=acct_bad_authenticators,json=acctBadAuthenticators" json:"acct_bad_authenticators,omitempty"`
	AcctReqPending            *uint64                `protobuf:"varint,86,opt,name=acct_req_pending,json=acctReqPending" json:"acct_req_pending,omitempty"`
	AcctRequestTimeouts       *uint64                `protobuf:"varint,87,opt,name=acct_request_timeouts,json=acctRequestTimeouts" json:"acct_request_timeouts,omitempty"`
	AcctUnknownResponses      *uint64                `protobuf:"varint,88,opt,name=acct_unknown_responses,json=acctUnknownResponses" json:"acct_unknown_responses,omitempty"`
	AcctPacketsDropped        *uint64                `protobuf:"varint,89,opt,name=acct_packets_dropped,json=acctPacketsDropped" json:"acct_packets_dropped,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType{}
	mi := &file_authd_oc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 3, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetServerLastRtt() uint64 {
	if x != nil && x.ServerLastRtt != nil {
		return *x.ServerLastRtt
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthAccessRequests() uint64 {
	if x != nil && x.AuthAccessRequests != nil {
		return *x.AuthAccessRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthRolloverRequests() uint64 {
	if x != nil && x.AuthRolloverRequests != nil {
		return *x.AuthRolloverRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthRetransmissions() uint64 {
	if x != nil && x.AuthRetransmissions != nil {
		return *x.AuthRetransmissions
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthAccessAccepts() uint64 {
	if x != nil && x.AuthAccessAccepts != nil {
		return *x.AuthAccessAccepts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthAccessRejects() uint64 {
	if x != nil && x.AuthAccessRejects != nil {
		return *x.AuthAccessRejects
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthAccessChallenges() uint64 {
	if x != nil && x.AuthAccessChallenges != nil {
		return *x.AuthAccessChallenges
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthMalformedResponses() uint64 {
	if x != nil && x.AuthMalformedResponses != nil {
		return *x.AuthMalformedResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthBadAuthenticators() uint64 {
	if x != nil && x.AuthBadAuthenticators != nil {
		return *x.AuthBadAuthenticators
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthReqPending() uint64 {
	if x != nil && x.AuthReqPending != nil {
		return *x.AuthReqPending
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthRequestTimeouts() uint64 {
	if x != nil && x.AuthRequestTimeouts != nil {
		return *x.AuthRequestTimeouts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthUnknownResponses() uint64 {
	if x != nil && x.AuthUnknownResponses != nil {
		return *x.AuthUnknownResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAuthPacketsDropped() uint64 {
	if x != nil && x.AuthPacketsDropped != nil {
		return *x.AuthPacketsDropped
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthAccessRequests() uint64 {
	if x != nil && x.PreauthAccessRequests != nil {
		return *x.PreauthAccessRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthRolloverRequests() uint64 {
	if x != nil && x.PreauthRolloverRequests != nil {
		return *x.PreauthRolloverRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthRetransmissions() uint64 {
	if x != nil && x.PreauthRetransmissions != nil {
		return *x.PreauthRetransmissions
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthAccessAccepts() uint64 {
	if x != nil && x.PreauthAccessAccepts != nil {
		return *x.PreauthAccessAccepts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthAccessRejects() uint64 {
	if x != nil && x.PreauthAccessRejects != nil {
		return *x.PreauthAccessRejects
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthAccessChallenges() uint64 {
	if x != nil && x.PreauthAccessChallenges != nil {
		return *x.PreauthAccessChallenges
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthMalformedResponses() uint64 {
	if x != nil && x.PreauthMalformedResponses != nil {
		return *x.PreauthMalformedResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthBadAuthenticators() uint64 {
	if x != nil && x.PreauthBadAuthenticators != nil {
		return *x.PreauthBadAuthenticators
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthReqPending() uint64 {
	if x != nil && x.PreauthReqPending != nil {
		return *x.PreauthReqPending
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthRequestTimeouts() uint64 {
	if x != nil && x.PreauthRequestTimeouts != nil {
		return *x.PreauthRequestTimeouts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthUnknownResponses() uint64 {
	if x != nil && x.PreauthUnknownResponses != nil {
		return *x.PreauthUnknownResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetPreauthPacketsDropped() uint64 {
	if x != nil && x.PreauthPacketsDropped != nil {
		return *x.PreauthPacketsDropped
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctStartRequests() uint64 {
	if x != nil && x.AcctStartRequests != nil {
		return *x.AcctStartRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctInterimRequests() uint64 {
	if x != nil && x.AcctInterimRequests != nil {
		return *x.AcctInterimRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctStopRequests() uint64 {
	if x != nil && x.AcctStopRequests != nil {
		return *x.AcctStopRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctRolloverRequests() uint64 {
	if x != nil && x.AcctRolloverRequests != nil {
		return *x.AcctRolloverRequests
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctRetransmissions() uint64 {
	if x != nil && x.AcctRetransmissions != nil {
		return *x.AcctRetransmissions
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctStartResponses() uint64 {
	if x != nil && x.AcctStartResponses != nil {
		return *x.AcctStartResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctInterimResponses() uint64 {
	if x != nil && x.AcctInterimResponses != nil {
		return *x.AcctInterimResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctStopResponses() uint64 {
	if x != nil && x.AcctStopResponses != nil {
		return *x.AcctStopResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctMalformedResponses() uint64 {
	if x != nil && x.AcctMalformedResponses != nil {
		return *x.AcctMalformedResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctBadAuthenticators() uint64 {
	if x != nil && x.AcctBadAuthenticators != nil {
		return *x.AcctBadAuthenticators
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctReqPending() uint64 {
	if x != nil && x.AcctReqPending != nil {
		return *x.AcctReqPending
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctRequestTimeouts() uint64 {
	if x != nil && x.AcctRequestTimeouts != nil {
		return *x.AcctRequestTimeouts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctUnknownResponses() uint64 {
	if x != nil && x.AcctUnknownResponses != nil {
		return *x.AcctUnknownResponses
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType) GetAcctPacketsDropped() uint64 {
	if x != nil && x.AcctPacketsDropped != nil {
		return *x.AcctPacketsDropped
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	OneMinuteMinimumResponseTime *uint64                `protobuf:"varint,51,opt,name=one_minute_minimum_response_time,json=oneMinuteMinimumResponseTime" json:"one_minute_minimum_response_time,omitempty"`
	OneMinuteAverageResponseTime *uint64                `protobuf:"varint,52,opt,name=one_minute_average_response_time,json=oneMinuteAverageResponseTime" json:"one_minute_average_response_time,omitempty"`
	OneMinuteMaximumResponseTime *uint64                `protobuf:"varint,53,opt,name=one_minute_maximum_response_time,json=oneMinuteMaximumResponseTime" json:"one_minute_maximum_response_time,omitempty"`
	OneMinuteMessagesSent        *uint64                `protobuf:"varint,54,opt,name=one_minute_messages_sent,json=oneMinuteMessagesSent" json:"one_minute_messages_sent,omitempty"`
	OneMinuteMessagesReceived    *uint64                `protobuf:"varint,55,opt,name=one_minute_messages_received,json=oneMinuteMessagesReceived" json:"one_minute_messages_received,omitempty"`
	OneMinuteMessagesNoResponse  *uint64                `protobuf:"varint,56,opt,name=one_minute_messages_no_response,json=oneMinuteMessagesNoResponse" json:"one_minute_messages_no_response,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType{}
	mi := &file_authd_oc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 3, 0, 1}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) GetOneMinuteMinimumResponseTime() uint64 {
	if x != nil && x.OneMinuteMinimumResponseTime != nil {
		return *x.OneMinuteMinimumResponseTime
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) GetOneMinuteAverageResponseTime() uint64 {
	if x != nil && x.OneMinuteAverageResponseTime != nil {
		return *x.OneMinuteAverageResponseTime
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) GetOneMinuteMaximumResponseTime() uint64 {
	if x != nil && x.OneMinuteMaximumResponseTime != nil {
		return *x.OneMinuteMaximumResponseTime
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) GetOneMinuteMessagesSent() uint64 {
	if x != nil && x.OneMinuteMessagesSent != nil {
		return *x.OneMinuteMessagesSent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) GetOneMinuteMessagesReceived() uint64 {
	if x != nil && x.OneMinuteMessagesReceived != nil {
		return *x.OneMinuteMessagesReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType) GetOneMinuteMessagesNoResponse() uint64 {
	if x != nil && x.OneMinuteMessagesNoResponse != nil {
		return *x.OneMinuteMessagesNoResponse
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType struct {
	state                        protoimpl.MessageState                                                                                                                                          `protogen:"open.v1"`
	LogicalSystemRoutingInstance []*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList `protobuf:"bytes,151,rep,name=logical_system_routing_instance,json=logicalSystemRoutingInstance" json:"logical_system_routing_instance,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType{}
	mi := &file_authd_oc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 4, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType) GetLogicalSystemRoutingInstance() []*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList {
	if x != nil {
		return x.LogicalSystemRoutingInstance
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList struct {
	state         protoimpl.MessageState                                                                                                                                                 `protogen:"open.v1"`
	Name          *string                                                                                                                                                                `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Pools         *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType `protobuf:"bytes,151,opt,name=pools" json:"pools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList{}
	mi := &file_authd_oc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 4, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList) GetPools() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType {
	if x != nil {
		return x.Pools
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType struct {
	state         protoimpl.MessageState                                                                                                                                                           `protogen:"open.v1"`
	Pool          []*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList `protobuf:"bytes,151,rep,name=pool" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType{}
	mi := &file_authd_oc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 4, 0, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType) GetPool() []*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList {
	if x != nil {
		return x.Pool
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PoolName            *string                `protobuf:"bytes,51,opt,name=pool_name,json=poolName" json:"pool_name,omitempty"`
	OutOfMemory         *uint64                `protobuf:"varint,52,opt,name=out_of_memory,json=outOfMemory" json:"out_of_memory,omitempty"`
	OutOfAddress        *uint64                `protobuf:"varint,53,opt,name=out_of_address,json=outOfAddress" json:"out_of_address,omitempty"`
	AddressTotal        *uint64                `protobuf:"varint,54,opt,name=address_total,json=addressTotal" json:"address_total,omitempty"`
	AddressInUse        *uint64                `protobuf:"varint,55,opt,name=address_in_use,json=addressInUse" json:"address_in_use,omitempty"`
	AddressUsagePercent *uint64                `protobuf:"varint,56,opt,name=address_usage_percent,json=addressUsagePercent" json:"address_usage_percent,omitempty"`
	LinkedPoolName      *string                `protobuf:"bytes,57,opt,name=linked_pool_name,json=linkedPoolName" json:"linked_pool_name,omitempty"`
	LinkedPoolHead      *string                `protobuf:"bytes,58,opt,name=linked_pool_head,json=linkedPoolHead" json:"linked_pool_head,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList{}
	mi := &file_authd_oc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 4, 0, 0, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetPoolName() string {
	if x != nil && x.PoolName != nil {
		return *x.PoolName
	}
	return ""
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetOutOfMemory() uint64 {
	if x != nil && x.OutOfMemory != nil {
		return *x.OutOfMemory
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetOutOfAddress() uint64 {
	if x != nil && x.OutOfAddress != nil {
		return *x.OutOfAddress
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetAddressTotal() uint64 {
	if x != nil && x.AddressTotal != nil {
		return *x.AddressTotal
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetAddressInUse() uint64 {
	if x != nil && x.AddressInUse != nil {
		return *x.AddressInUse
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetAddressUsagePercent() uint64 {
	if x != nil && x.AddressUsagePercent != nil {
		return *x.AddressUsagePercent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetLinkedPoolName() string {
	if x != nil && x.LinkedPoolName != nil {
		return *x.LinkedPoolName
	}
	return ""
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList) GetLinkedPoolHead() string {
	if x != nil && x.LinkedPoolHead != nil {
		return *x.LinkedPoolHead
	}
	return ""
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType struct {
	state         protoimpl.MessageState                                                                         `protogen:"open.v1"`
	Nasreq        *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType `protobuf:"bytes,151,opt,name=nasreq" json:"nasreq,omitempty"`
	Gx            *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType     `protobuf:"bytes,152,opt,name=gx" json:"gx,omitempty"`
	Gy            *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType     `protobuf:"bytes,153,opt,name=gy" json:"gy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType{}
	mi := &file_authd_oc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 5, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) GetNasreq() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType {
	if x != nil {
		return x.Nasreq
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) GetGx() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType {
	if x != nil {
		return x.Gx
	}
	return nil
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType) GetGy() *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType {
	if x != nil {
		return x.Gy
	}
	return nil
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType struct {
	state                                    protoimpl.MessageState `protogen:"open.v1"`
	AuthenticationRequestMessagesSent        *uint64                `protobuf:"varint,51,opt,name=authentication_request_messages_sent,json=authenticationRequestMessagesSent" json:"authentication_request_messages_sent,omitempty"`
	AuthenticationRequestMessageFailures     *uint64                `protobuf:"varint,52,opt,name=authentication_request_message_failures,json=authenticationRequestMessageFailures" json:"authentication_request_message_failures,omitempty"`
	AuthenticationRequestMessagesTimeouts    *uint64                `protobuf:"varint,53,opt,name=authentication_request_messages_timeouts,json=authenticationRequestMessagesTimeouts" json:"authentication_request_messages_timeouts,omitempty"`
	AuthenticationDeniesFailures             *uint64                `protobuf:"varint,54,opt,name=authentication_denies_failures,json=authenticationDeniesFailures" json:"authentication_denies_failures,omitempty"`
	AuthenticationGrantsReceived             *uint64                `protobuf:"varint,55,opt,name=authentication_grants_received,json=authenticationGrantsReceived" json:"authentication_grants_received,omitempty"`
	AuthorizationRequestMessagesSent         *uint64                `protobuf:"varint,56,opt,name=authorization_request_messages_sent,json=authorizationRequestMessagesSent" json:"authorization_request_messages_sent,omitempty"`
	AuthorizationRequestMessageFailures      *uint64                `protobuf:"varint,57,opt,name=authorization_request_message_failures,json=authorizationRequestMessageFailures" json:"authorization_request_message_failures,omitempty"`
	AuthorizationRequestMessagesTimeouts     *uint64                `protobuf:"varint,58,opt,name=authorization_request_messages_timeouts,json=authorizationRequestMessagesTimeouts" json:"authorization_request_messages_timeouts,omitempty"`
	AuthorizationDeniesFailures              *uint64                `protobuf:"varint,59,opt,name=authorization_denies_failures,json=authorizationDeniesFailures" json:"authorization_denies_failures,omitempty"`
	AuthorizationGrantsReceived              *uint64                `protobuf:"varint,60,opt,name=authorization_grants_received,json=authorizationGrantsReceived" json:"authorization_grants_received,omitempty"`
	SessionTerminateRequestMessagesSent      *uint64                `protobuf:"varint,61,opt,name=session_terminate_request_messages_sent,json=sessionTerminateRequestMessagesSent" json:"session_terminate_request_messages_sent,omitempty"`
	SessionTerminateRequestMessageFailures   *uint64                `protobuf:"varint,62,opt,name=session_terminate_request_message_failures,json=sessionTerminateRequestMessageFailures" json:"session_terminate_request_message_failures,omitempty"`
	SessionTerminateRequestMessagesTimeouts  *uint64                `protobuf:"varint,63,opt,name=session_terminate_request_messages_timeouts,json=sessionTerminateRequestMessagesTimeouts" json:"session_terminate_request_messages_timeouts,omitempty"`
	SessionTerminateResponseMessagesFailures *uint64                `protobuf:"varint,64,opt,name=session_terminate_response_messages_failures,json=sessionTerminateResponseMessagesFailures" json:"session_terminate_response_messages_failures,omitempty"`
	SessionTerminateResponseMessagesReceived *uint64                `protobuf:"varint,65,opt,name=session_terminate_response_messages_received,json=sessionTerminateResponseMessagesReceived" json:"session_terminate_response_messages_received,omitempty"`
	AbortSessionRequestsReceived             *uint64                `protobuf:"varint,66,opt,name=abort_session_requests_received,json=abortSessionRequestsReceived" json:"abort_session_requests_received,omitempty"`
	AbortSessionResponseAckMessagesSent      *uint64                `protobuf:"varint,67,opt,name=abort_session_response_ack_messages_sent,json=abortSessionResponseAckMessagesSent" json:"abort_session_response_ack_messages_sent,omitempty"`
	AbortSessionResponseNackMessagesSent     *uint64                `protobuf:"varint,68,opt,name=abort_session_response_nack_messages_sent,json=abortSessionResponseNackMessagesSent" json:"abort_session_response_nack_messages_sent,omitempty"`
	AbortSessionResponseMessageFailures      *uint64                `protobuf:"varint,69,opt,name=abort_session_response_message_failures,json=abortSessionResponseMessageFailures" json:"abort_session_response_message_failures,omitempty"`
	TransmitQueueTimeOuts                    *uint64                `protobuf:"varint,70,opt,name=transmit_queue_time_outs,json=transmitQueueTimeOuts" json:"transmit_queue_time_outs,omitempty"`
	ResponseParseErrors                      *uint64                `protobuf:"varint,71,opt,name=response_parse_errors,json=responseParseErrors" json:"response_parse_errors,omitempty"`
	ResponsesDropped                         *uint64                `protobuf:"varint,72,opt,name=responses_dropped,json=responsesDropped" json:"responses_dropped,omitempty"`
	OutstandingRequests                      *uint64                `protobuf:"varint,73,opt,name=outstanding_requests,json=outstandingRequests" json:"outstanding_requests,omitempty"`
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType{}
	mi := &file_authd_oc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 5, 0, 0}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthenticationRequestMessagesSent() uint64 {
	if x != nil && x.AuthenticationRequestMessagesSent != nil {
		return *x.AuthenticationRequestMessagesSent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthenticationRequestMessageFailures() uint64 {
	if x != nil && x.AuthenticationRequestMessageFailures != nil {
		return *x.AuthenticationRequestMessageFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthenticationRequestMessagesTimeouts() uint64 {
	if x != nil && x.AuthenticationRequestMessagesTimeouts != nil {
		return *x.AuthenticationRequestMessagesTimeouts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthenticationDeniesFailures() uint64 {
	if x != nil && x.AuthenticationDeniesFailures != nil {
		return *x.AuthenticationDeniesFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthenticationGrantsReceived() uint64 {
	if x != nil && x.AuthenticationGrantsReceived != nil {
		return *x.AuthenticationGrantsReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthorizationRequestMessagesSent() uint64 {
	if x != nil && x.AuthorizationRequestMessagesSent != nil {
		return *x.AuthorizationRequestMessagesSent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthorizationRequestMessageFailures() uint64 {
	if x != nil && x.AuthorizationRequestMessageFailures != nil {
		return *x.AuthorizationRequestMessageFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthorizationRequestMessagesTimeouts() uint64 {
	if x != nil && x.AuthorizationRequestMessagesTimeouts != nil {
		return *x.AuthorizationRequestMessagesTimeouts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthorizationDeniesFailures() uint64 {
	if x != nil && x.AuthorizationDeniesFailures != nil {
		return *x.AuthorizationDeniesFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAuthorizationGrantsReceived() uint64 {
	if x != nil && x.AuthorizationGrantsReceived != nil {
		return *x.AuthorizationGrantsReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetSessionTerminateRequestMessagesSent() uint64 {
	if x != nil && x.SessionTerminateRequestMessagesSent != nil {
		return *x.SessionTerminateRequestMessagesSent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetSessionTerminateRequestMessageFailures() uint64 {
	if x != nil && x.SessionTerminateRequestMessageFailures != nil {
		return *x.SessionTerminateRequestMessageFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetSessionTerminateRequestMessagesTimeouts() uint64 {
	if x != nil && x.SessionTerminateRequestMessagesTimeouts != nil {
		return *x.SessionTerminateRequestMessagesTimeouts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetSessionTerminateResponseMessagesFailures() uint64 {
	if x != nil && x.SessionTerminateResponseMessagesFailures != nil {
		return *x.SessionTerminateResponseMessagesFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetSessionTerminateResponseMessagesReceived() uint64 {
	if x != nil && x.SessionTerminateResponseMessagesReceived != nil {
		return *x.SessionTerminateResponseMessagesReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAbortSessionRequestsReceived() uint64 {
	if x != nil && x.AbortSessionRequestsReceived != nil {
		return *x.AbortSessionRequestsReceived
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAbortSessionResponseAckMessagesSent() uint64 {
	if x != nil && x.AbortSessionResponseAckMessagesSent != nil {
		return *x.AbortSessionResponseAckMessagesSent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAbortSessionResponseNackMessagesSent() uint64 {
	if x != nil && x.AbortSessionResponseNackMessagesSent != nil {
		return *x.AbortSessionResponseNackMessagesSent
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetAbortSessionResponseMessageFailures() uint64 {
	if x != nil && x.AbortSessionResponseMessageFailures != nil {
		return *x.AbortSessionResponseMessageFailures
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetTransmitQueueTimeOuts() uint64 {
	if x != nil && x.TransmitQueueTimeOuts != nil {
		return *x.TransmitQueueTimeOuts
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetResponseParseErrors() uint64 {
	if x != nil && x.ResponseParseErrors != nil {
		return *x.ResponseParseErrors
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetResponsesDropped() uint64 {
	if x != nil && x.ResponsesDropped != nil {
		return *x.ResponsesDropped
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType) GetOutstandingRequests() uint64 {
	if x != nil && x.OutstandingRequests != nil {
		return *x.OutstandingRequests
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	CcrInitial              *uint64                `protobuf:"varint,51,opt,name=ccr_initial,json=ccrInitial" json:"ccr_initial,omitempty"`
	CcrInitialRetry         *uint64                `protobuf:"varint,52,opt,name=ccr_initial_retry,json=ccrInitialRetry" json:"ccr_initial_retry,omitempty"`
	CcaInitial              *uint64                `protobuf:"varint,53,opt,name=cca_initial,json=ccaInitial" json:"cca_initial,omitempty"`
	CcaInitialGrant         *uint64                `protobuf:"varint,54,opt,name=cca_initial_grant,json=ccaInitialGrant" json:"cca_initial_grant,omitempty"`
	CcaInitialDeny          *uint64                `protobuf:"varint,55,opt,name=cca_initial_deny,json=ccaInitialDeny" json:"cca_initial_deny,omitempty"`
	CcaInitialFailure       *uint64                `protobuf:"varint,56,opt,name=cca_initial_failure,json=ccaInitialFailure" json:"cca_initial_failure,omitempty"`
	CcrUpdate               *uint64                `protobuf:"varint,57,opt,name=ccr_update,json=ccrUpdate" json:"ccr_update,omitempty"`
	CcrUpdateRetry          *uint64                `protobuf:"varint,58,opt,name=ccr_update_retry,json=ccrUpdateRetry" json:"ccr_update_retry,omitempty"`
	CcaUpdate               *uint64                `protobuf:"varint,59,opt,name=cca_update,json=ccaUpdate" json:"cca_update,omitempty"`
	CcaUpdateTimeout        *uint64                `protobuf:"varint,60,opt,name=cca_update_timeout,json=ccaUpdateTimeout" json:"cca_update_timeout,omitempty"`
	CcrTerminate            *uint64                `protobuf:"varint,61,opt,name=ccr_terminate,json=ccrTerminate" json:"ccr_terminate,omitempty"`
	CcrTerminateRetry       *uint64                `protobuf:"varint,62,opt,name=ccr_terminate_retry,json=ccrTerminateRetry" json:"ccr_terminate_retry,omitempty"`
	CcaTerminate            *uint64                `protobuf:"varint,63,opt,name=cca_terminate,json=ccaTerminate" json:"cca_terminate,omitempty"`
	CcaTerminateTimeout     *uint64                `protobuf:"varint,64,opt,name=cca_terminate_timeout,json=ccaTerminateTimeout" json:"cca_terminate_timeout,omitempty"`
	CcaParseError           *uint64                `protobuf:"varint,65,opt,name=cca_parse_error,json=ccaParseError" json:"cca_parse_error,omitempty"`
	CcaDropped              *uint64                `protobuf:"varint,66,opt,name=cca_dropped,json=ccaDropped" json:"cca_dropped,omitempty"`
	CcaInitialBadResultCode *uint64                `protobuf:"varint,67,opt,name=cca_initial_bad_result_code,json=ccaInitialBadResultCode" json:"cca_initial_bad_result_code,omitempty"`
	CcaInitialBadData       *uint64                `protobuf:"varint,68,opt,name=cca_initial_bad_data,json=ccaInitialBadData" json:"cca_initial_bad_data,omitempty"`
	RarUpdate               *uint64                `protobuf:"varint,69,opt,name=rar_update,json=rarUpdate" json:"rar_update,omitempty"`
	RarUpdateRetry          *uint64                `protobuf:"varint,70,opt,name=rar_update_retry,json=rarUpdateRetry" json:"rar_update_retry,omitempty"`
	RarUpdateDrop           *uint64                `protobuf:"varint,71,opt,name=rar_update_drop,json=rarUpdateDrop" json:"rar_update_drop,omitempty"`
	RaaUpdateAck            *uint64                `protobuf:"varint,72,opt,name=raa_update_ack,json=raaUpdateAck" json:"raa_update_ack,omitempty"`
	RaaUpdateNak            *uint64                `protobuf:"varint,73,opt,name=raa_update_nak,json=raaUpdateNak" json:"raa_update_nak,omitempty"`
	RarDisconnect           *uint64                `protobuf:"varint,74,opt,name=rar_disconnect,json=rarDisconnect" json:"rar_disconnect,omitempty"`
	RarDisconnectRetry      *uint64                `protobuf:"varint,75,opt,name=rar_disconnect_retry,json=rarDisconnectRetry" json:"rar_disconnect_retry,omitempty"`
	RarDisconnectDrop       *uint64                `protobuf:"varint,76,opt,name=rar_disconnect_drop,json=rarDisconnectDrop" json:"rar_disconnect_drop,omitempty"`
	RaaDisconnectAck        *uint64                `protobuf:"varint,77,opt,name=raa_disconnect_ack,json=raaDisconnectAck" json:"raa_disconnect_ack,omitempty"`
	RaaDisconnectNak        *uint64                `protobuf:"varint,78,opt,name=raa_disconnect_nak,json=raaDisconnectNak" json:"raa_disconnect_nak,omitempty"`
	RarAudit                *uint64                `protobuf:"varint,79,opt,name=rar_audit,json=rarAudit" json:"rar_audit,omitempty"`
	RarAuditRetry           *uint64                `protobuf:"varint,80,opt,name=rar_audit_retry,json=rarAuditRetry" json:"rar_audit_retry,omitempty"`
	RarAuditDrop            *uint64                `protobuf:"varint,81,opt,name=rar_audit_drop,json=rarAuditDrop" json:"rar_audit_drop,omitempty"`
	RaaAuditAck             *uint64                `protobuf:"varint,82,opt,name=raa_audit_ack,json=raaAuditAck" json:"raa_audit_ack,omitempty"`
	RaaAuditNak             *uint64                `protobuf:"varint,83,opt,name=raa_audit_nak,json=raaAuditNak" json:"raa_audit_nak,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType{}
	mi := &file_authd_oc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 5, 0, 1}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcrInitial() uint64 {
	if x != nil && x.CcrInitial != nil {
		return *x.CcrInitial
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcrInitialRetry() uint64 {
	if x != nil && x.CcrInitialRetry != nil {
		return *x.CcrInitialRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaInitial() uint64 {
	if x != nil && x.CcaInitial != nil {
		return *x.CcaInitial
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaInitialGrant() uint64 {
	if x != nil && x.CcaInitialGrant != nil {
		return *x.CcaInitialGrant
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaInitialDeny() uint64 {
	if x != nil && x.CcaInitialDeny != nil {
		return *x.CcaInitialDeny
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaInitialFailure() uint64 {
	if x != nil && x.CcaInitialFailure != nil {
		return *x.CcaInitialFailure
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcrUpdate() uint64 {
	if x != nil && x.CcrUpdate != nil {
		return *x.CcrUpdate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcrUpdateRetry() uint64 {
	if x != nil && x.CcrUpdateRetry != nil {
		return *x.CcrUpdateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaUpdate() uint64 {
	if x != nil && x.CcaUpdate != nil {
		return *x.CcaUpdate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaUpdateTimeout() uint64 {
	if x != nil && x.CcaUpdateTimeout != nil {
		return *x.CcaUpdateTimeout
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcrTerminate() uint64 {
	if x != nil && x.CcrTerminate != nil {
		return *x.CcrTerminate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcrTerminateRetry() uint64 {
	if x != nil && x.CcrTerminateRetry != nil {
		return *x.CcrTerminateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaTerminate() uint64 {
	if x != nil && x.CcaTerminate != nil {
		return *x.CcaTerminate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaTerminateTimeout() uint64 {
	if x != nil && x.CcaTerminateTimeout != nil {
		return *x.CcaTerminateTimeout
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaParseError() uint64 {
	if x != nil && x.CcaParseError != nil {
		return *x.CcaParseError
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaDropped() uint64 {
	if x != nil && x.CcaDropped != nil {
		return *x.CcaDropped
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaInitialBadResultCode() uint64 {
	if x != nil && x.CcaInitialBadResultCode != nil {
		return *x.CcaInitialBadResultCode
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetCcaInitialBadData() uint64 {
	if x != nil && x.CcaInitialBadData != nil {
		return *x.CcaInitialBadData
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarUpdate() uint64 {
	if x != nil && x.RarUpdate != nil {
		return *x.RarUpdate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarUpdateRetry() uint64 {
	if x != nil && x.RarUpdateRetry != nil {
		return *x.RarUpdateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarUpdateDrop() uint64 {
	if x != nil && x.RarUpdateDrop != nil {
		return *x.RarUpdateDrop
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRaaUpdateAck() uint64 {
	if x != nil && x.RaaUpdateAck != nil {
		return *x.RaaUpdateAck
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRaaUpdateNak() uint64 {
	if x != nil && x.RaaUpdateNak != nil {
		return *x.RaaUpdateNak
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarDisconnect() uint64 {
	if x != nil && x.RarDisconnect != nil {
		return *x.RarDisconnect
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarDisconnectRetry() uint64 {
	if x != nil && x.RarDisconnectRetry != nil {
		return *x.RarDisconnectRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarDisconnectDrop() uint64 {
	if x != nil && x.RarDisconnectDrop != nil {
		return *x.RarDisconnectDrop
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRaaDisconnectAck() uint64 {
	if x != nil && x.RaaDisconnectAck != nil {
		return *x.RaaDisconnectAck
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRaaDisconnectNak() uint64 {
	if x != nil && x.RaaDisconnectNak != nil {
		return *x.RaaDisconnectNak
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarAudit() uint64 {
	if x != nil && x.RarAudit != nil {
		return *x.RarAudit
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarAuditRetry() uint64 {
	if x != nil && x.RarAuditRetry != nil {
		return *x.RarAuditRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRarAuditDrop() uint64 {
	if x != nil && x.RarAuditDrop != nil {
		return *x.RarAuditDrop
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRaaAuditAck() uint64 {
	if x != nil && x.RaaAuditAck != nil {
		return *x.RaaAuditAck
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType) GetRaaAuditNak() uint64 {
	if x != nil && x.RaaAuditNak != nil {
		return *x.RaaAuditNak
	}
	return 0
}

type JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	CcrInitial                 *uint64                `protobuf:"varint,51,opt,name=ccr_initial,json=ccrInitial" json:"ccr_initial,omitempty"`
	CcrInitialRetry            *uint64                `protobuf:"varint,52,opt,name=ccr_initial_retry,json=ccrInitialRetry" json:"ccr_initial_retry,omitempty"`
	CcrInitialAlternateRetry   *uint64                `protobuf:"varint,53,opt,name=ccr_initial_alternate_retry,json=ccrInitialAlternateRetry" json:"ccr_initial_alternate_retry,omitempty"`
	CcaInitial                 *uint64                `protobuf:"varint,54,opt,name=cca_initial,json=ccaInitial" json:"cca_initial,omitempty"`
	CcaInitialAlternate        *uint64                `protobuf:"varint,55,opt,name=cca_initial_alternate,json=ccaInitialAlternate" json:"cca_initial_alternate,omitempty"`
	CcrUpdate                  *uint64                `protobuf:"varint,56,opt,name=ccr_update,json=ccrUpdate" json:"ccr_update,omitempty"`
	CcrUpdateRetry             *uint64                `protobuf:"varint,57,opt,name=ccr_update_retry,json=ccrUpdateRetry" json:"ccr_update_retry,omitempty"`
	CcrUpdateAlternateRetry    *uint64                `protobuf:"varint,58,opt,name=ccr_update_alternate_retry,json=ccrUpdateAlternateRetry" json:"ccr_update_alternate_retry,omitempty"`
	CcaUpdate                  *uint64                `protobuf:"varint,59,opt,name=cca_update,json=ccaUpdate" json:"cca_update,omitempty"`
	CcaUpdateAlternate         *uint64                `protobuf:"varint,60,opt,name=cca_update_alternate,json=ccaUpdateAlternate" json:"cca_update_alternate,omitempty"`
	CcrTerminate               *uint64                `protobuf:"varint,61,opt,name=ccr_terminate,json=ccrTerminate" json:"ccr_terminate,omitempty"`
	CcrTerminateRetry          *uint64                `protobuf:"varint,62,opt,name=ccr_terminate_retry,json=ccrTerminateRetry" json:"ccr_terminate_retry,omitempty"`
	CcrTerminateAlternateRetry *uint64                `protobuf:"varint,63,opt,name=ccr_terminate_alternate_retry,json=ccrTerminateAlternateRetry" json:"ccr_terminate_alternate_retry,omitempty"`
	CcaTerminate               *uint64                `protobuf:"varint,64,opt,name=cca_terminate,json=ccaTerminate" json:"cca_terminate,omitempty"`
	CcaTerminateAlternate      *uint64                `protobuf:"varint,65,opt,name=cca_terminate_alternate,json=ccaTerminateAlternate" json:"cca_terminate_alternate,omitempty"`
	CcaTerminateTimeout        *uint64                `protobuf:"varint,66,opt,name=cca_terminate_timeout,json=ccaTerminateTimeout" json:"cca_terminate_timeout,omitempty"`
	CcaParseError              *uint64                `protobuf:"varint,67,opt,name=cca_parse_error,json=ccaParseError" json:"cca_parse_error,omitempty"`
	CcaDropped                 *uint64                `protobuf:"varint,68,opt,name=cca_dropped,json=ccaDropped" json:"cca_dropped,omitempty"`
	CcaInitialBadResultCode    *uint64                `protobuf:"varint,69,opt,name=cca_initial_bad_result_code,json=ccaInitialBadResultCode" json:"cca_initial_bad_result_code,omitempty"`
	CcaInitialBadData          *uint64                `protobuf:"varint,70,opt,name=cca_initial_bad_data,json=ccaInitialBadData" json:"cca_initial_bad_data,omitempty"`
	Asr                        *uint64                `protobuf:"varint,71,opt,name=asr" json:"asr,omitempty"`
	AsrRetry                   *uint64                `protobuf:"varint,72,opt,name=asr_retry,json=asrRetry" json:"asr_retry,omitempty"`
	AsrParseError              *uint64                `protobuf:"varint,73,opt,name=asr_parse_error,json=asrParseError" json:"asr_parse_error,omitempty"`
	AsrUpdateDrop              *uint64                `protobuf:"varint,74,opt,name=asr_update_drop,json=asrUpdateDrop" json:"asr_update_drop,omitempty"`
	AsaAck                     *uint64                `protobuf:"varint,75,opt,name=asa_ack,json=asaAck" json:"asa_ack,omitempty"`
	AsaNak                     *uint64                `protobuf:"varint,76,opt,name=asa_nak,json=asaNak" json:"asa_nak,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) Reset() {
	*x = JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType{}
	mi := &file_authd_oc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) ProtoMessage() {
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) ProtoReflect() protoreflect.Message {
	mi := &file_authd_oc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType.ProtoReflect.Descriptor instead.
func (*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) Descriptor() ([]byte, []int) {
	return file_authd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 5, 0, 2}
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrInitial() uint64 {
	if x != nil && x.CcrInitial != nil {
		return *x.CcrInitial
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrInitialRetry() uint64 {
	if x != nil && x.CcrInitialRetry != nil {
		return *x.CcrInitialRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrInitialAlternateRetry() uint64 {
	if x != nil && x.CcrInitialAlternateRetry != nil {
		return *x.CcrInitialAlternateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaInitial() uint64 {
	if x != nil && x.CcaInitial != nil {
		return *x.CcaInitial
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaInitialAlternate() uint64 {
	if x != nil && x.CcaInitialAlternate != nil {
		return *x.CcaInitialAlternate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrUpdate() uint64 {
	if x != nil && x.CcrUpdate != nil {
		return *x.CcrUpdate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrUpdateRetry() uint64 {
	if x != nil && x.CcrUpdateRetry != nil {
		return *x.CcrUpdateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrUpdateAlternateRetry() uint64 {
	if x != nil && x.CcrUpdateAlternateRetry != nil {
		return *x.CcrUpdateAlternateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaUpdate() uint64 {
	if x != nil && x.CcaUpdate != nil {
		return *x.CcaUpdate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaUpdateAlternate() uint64 {
	if x != nil && x.CcaUpdateAlternate != nil {
		return *x.CcaUpdateAlternate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrTerminate() uint64 {
	if x != nil && x.CcrTerminate != nil {
		return *x.CcrTerminate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrTerminateRetry() uint64 {
	if x != nil && x.CcrTerminateRetry != nil {
		return *x.CcrTerminateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcrTerminateAlternateRetry() uint64 {
	if x != nil && x.CcrTerminateAlternateRetry != nil {
		return *x.CcrTerminateAlternateRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaTerminate() uint64 {
	if x != nil && x.CcaTerminate != nil {
		return *x.CcaTerminate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaTerminateAlternate() uint64 {
	if x != nil && x.CcaTerminateAlternate != nil {
		return *x.CcaTerminateAlternate
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaTerminateTimeout() uint64 {
	if x != nil && x.CcaTerminateTimeout != nil {
		return *x.CcaTerminateTimeout
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaParseError() uint64 {
	if x != nil && x.CcaParseError != nil {
		return *x.CcaParseError
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaDropped() uint64 {
	if x != nil && x.CcaDropped != nil {
		return *x.CcaDropped
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaInitialBadResultCode() uint64 {
	if x != nil && x.CcaInitialBadResultCode != nil {
		return *x.CcaInitialBadResultCode
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetCcaInitialBadData() uint64 {
	if x != nil && x.CcaInitialBadData != nil {
		return *x.CcaInitialBadData
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetAsr() uint64 {
	if x != nil && x.Asr != nil {
		return *x.Asr
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetAsrRetry() uint64 {
	if x != nil && x.AsrRetry != nil {
		return *x.AsrRetry
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetAsrParseError() uint64 {
	if x != nil && x.AsrParseError != nil {
		return *x.AsrParseError
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetAsrUpdateDrop() uint64 {
	if x != nil && x.AsrUpdateDrop != nil {
		return *x.AsrUpdateDrop
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetAsaAck() uint64 {
	if x != nil && x.AsaAck != nil {
		return *x.AsaAck
	}
	return 0
}

func (x *JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType) GetAsaNak() uint64 {
	if x != nil && x.AsaNak != nil {
		return *x.AsaNak
	}
	return 0
}

var file_authd_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosAuthentication)(nil),
		Field:         33,
		Name:          "jnpr_junos_authentication_ext",
		Tag:           "bytes,33,opt,name=jnpr_junos_authentication_ext",
		Filename:      "authd_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_authentication jnpr_junos_authentication_ext = 33;
	E_JnprJunosAuthenticationExt = &file_authd_oc_proto_extTypes[0]
)

var File_authd_oc_proto protoreflect.FileDescriptor

var file_authd_oc_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x5e, 0x0a, 0x14, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0xf3, 0x5d, 0x0a, 0x0b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6a, 0x75, 0x6e,
	0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xef,
	0x5c, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a,
	0x03, 0x61, 0x61, 0x61, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x03, 0x61, 0x61, 0x61, 0x1a, 0xf6, 0x5b, 0x0a, 0x08, 0x61, 0x61, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x64, 0x2e, 0x6a, 0x75, 0x6e, 0x6f,
	0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x18, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x6a, 0x75, 0x6e,
	0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x14, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x1a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x9a, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x65, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x18, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x9b, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0xad, 0x01,
	0x0a, 0x1d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x1b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x70, 0x0a,
	0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x53, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a,
	0xad, 0x06, 0x0a, 0x1e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x38, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x70, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x70, 0x72, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12,
	0x35, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x70, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x70, 0x72, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x33, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x70, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x33,
	0x0a, 0x16, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1d, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x72, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x15,
	0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x72, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a,
	0xe0, 0x03, 0x0a, 0x1a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x63, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x63,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x12, 0x22, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x69, 0x6d, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x63, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x3d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74,
	0x6f, 0x70, 0x1a, 0xea, 0x01, 0x0a, 0x1f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x19, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x71, 0x5f, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x72, 0x6f, 0x70, 0x1a,
	0x87, 0x18, 0x0a, 0x13, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x0d, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x6c, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0c,
	0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0xda, 0x16, 0x0a,
	0x12, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x9d, 0x01, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7c, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0xa5, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7f, 0x2e, 0x6a, 0x75, 0x6e,
	0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x9e, 0x10, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x74, 0x74,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x61,
	0x73, 0x74, 0x52, 0x74, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c,
	0x6c, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x31, 0x0a,
	0x14, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x61, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d,
	0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x61,
	0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x62, 0x61, 0x64, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x42, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x36,
	0x0a, 0x17, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x15, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x70, 0x72, 0x65, 0x61, 0x75,
	0x74, 0x68, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x37, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x42, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x16, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x73, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x72, 0x65, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x70, 0x72, 0x65, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d,
	0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74,
	0x68, 0x4d, 0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x62,
	0x61, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68,
	0x42, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x48, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11,
	0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x49, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x16, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x70,
	0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17,
	0x70, 0x72, 0x65, 0x61, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x70, 0x72, 0x65, 0x61, 0x75, 0x74,
	0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x61, 0x63,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x61, 0x63, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x61, 0x63, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x4f, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x61, 0x63, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x74, 0x5f,
	0x72, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x50, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63,
	0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x51, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x61, 0x63, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16,
	0x61, 0x63, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x52, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x63,
	0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x53, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x61, 0x63, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6c, 0x66, 0x6f,
	0x72, 0x6d, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x54,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x61, 0x63, 0x63, 0x74, 0x4d, 0x61, 0x6c, 0x66, 0x6f, 0x72,
	0x6d, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17,
	0x61, 0x63, 0x63, 0x74, 0x5f, 0x62, 0x61, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x55, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x61,
	0x63, 0x63, 0x74, 0x42, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x56, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32,
	0x0a, 0x15, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x57, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x61,
	0x63, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x58, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x61, 0x63, 0x63, 0x74, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x74,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x18, 0x59, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x61, 0x63, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x1a, 0xac, 0x03, 0x0a, 0x12, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x6f, 0x6e, 0x65,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65,
	0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x6f, 0x6e, 0x65,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x6e, 0x65,
	0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x6f, 0x6e, 0x65,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65,
	0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x6f, 0x6e,
	0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x4e,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x85, 0x0b, 0x0a, 0x22, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0xd9, 0x01, 0x0a, 0x20, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x8e, 0x01, 0x2e,
	0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x1d, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x82, 0x09, 0x0a,
	0x25, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xfc, 0x01, 0x0a, 0x1f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0xb3, 0x01, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x1c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0xd9, 0x06, 0x0a, 0x24, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40,
	0x02, 0x08, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xd6, 0x01, 0x0a, 0x05, 0x70, 0x6f,
	0x6f, 0x6c, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0xbe, 0x01, 0x2e, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x1a, 0xbc, 0x04, 0x0a, 0x0a, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0xde, 0x01, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0xc8, 0x01, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f,
	0x6f, 0x6c, 0x1a, 0xcc, 0x02, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x75, 0x74,
	0x4f, 0x66, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x5f,
	0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50,
	0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x48, 0x65, 0x61,
	0x64, 0x1a, 0xcc, 0x25, 0x0a, 0x0d, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x97,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0xbd, 0x24, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x85, 0x01, 0x0a, 0x06, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x6c, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x12, 0x79, 0x0a, 0x02, 0x67, 0x78, 0x18,
	0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x67, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x02, 0x67, 0x78, 0x12, 0x79, 0x0a, 0x02, 0x67, 0x79, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x68, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x02, 0x67, 0x79, 0x1a,
	0x87, 0x0e, 0x0a, 0x0b, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x4f, 0x0a, 0x24, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x21, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74,
	0x12, 0x55, 0x0a, 0x27, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x24, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x28, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x25, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x1e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x73, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x1e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x23,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x26, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52, 0x23, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x55, 0x0a, 0x27, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x24, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x73, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6e,
	0x69, 0x65, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x1b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x54, 0x0a, 0x27, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x23, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x2a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x26, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x5c, 0x0a, 0x2b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x27, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12,
	0x5e, 0x0a, 0x2c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x28, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x5e, 0x0a, 0x2c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x28, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x45, 0x0a, 0x1f, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x28, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x6e, 0x74, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x23, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a,
	0x29, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x44, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x24, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x27, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x52, 0x23, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x18,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x48,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x49,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0xce, 0x0a, 0x0a, 0x07, 0x67, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x63, 0x72, 0x5f, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x63, 0x72, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x63, 0x72, 0x5f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x63, 0x63, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x6e, 0x79, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x63, 0x61, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6e, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x63, 0x61,
	0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x63, 0x72,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x63, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x63, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x63, 0x63, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x63, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x63, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x63, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63,
	0x63, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x63, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x63, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x63, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x3e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x63, 0x63, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x63, 0x61, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x63, 0x61,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x63, 0x61,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x63, 0x63, 0x61, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x63, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x63, 0x61, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x63, 0x61, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x63, 0x61, 0x44,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x63, 0x63, 0x61,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x44, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x72, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x61, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x61, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x72, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x61, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x61, 0x61, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x48, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x72, 0x61, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x61, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6b, 0x18, 0x49,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x61, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x61, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x61, 0x72, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x61, 0x72,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x72, 0x61, 0x72, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x61, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x72, 0x61, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x61, 0x61, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63,
	0x6b, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x61, 0x61, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x61, 0x61,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6b, 0x18,
	0x4e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x61, 0x61, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x72, 0x5f, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x61, 0x72, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x50, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72,
	0x61, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x61, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x51,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x61, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x44, 0x72,
	0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x61, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x61, 0x63, 0x6b, 0x18, 0x52, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x61, 0x61, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x61, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6b, 0x18, 0x53, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72,
	0x61, 0x61, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4e, 0x61, 0x6b, 0x1a, 0xd3, 0x08, 0x0a, 0x07, 0x67,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x63, 0x72, 0x5f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x63, 0x72,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x63, 0x72, 0x5f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x34, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x63, 0x63, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x63, 0x72, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x63, 0x63, 0x72, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x63, 0x72, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x63, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x63, 0x72, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x63, 0x63, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x63, 0x63, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x63, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x63, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x63, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x63, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x63, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18,
	0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x63, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x63, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x63, 0x63, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x63, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x63, 0x63, 0x72, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x63, 0x61, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63,
	0x63, 0x61, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63,
	0x63, 0x61, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x63, 0x63,
	0x61, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x63, 0x61, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x42, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x63, 0x63, 0x61, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x63, 0x61, 0x5f, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x63, 0x63, 0x61, 0x50, 0x61, 0x72, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x63, 0x61, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x44,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x63, 0x61, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x62, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x45, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x63, 0x63, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x42, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f,
	0x0a, 0x14, 0x63, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x61,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x63,
	0x61, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x73, 0x72, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x73,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x48,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x73, 0x72, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x61, 0x73, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x49, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x73, 0x72, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x73, 0x72, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x61, 0x73, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x73, 0x61, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x73, 0x61, 0x41, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x61, 0x5f, 0x6e,
	0x61, 0x6b, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x73, 0x61, 0x4e, 0x61, 0x6b,
	0x3a, 0x71, 0x0a, 0x1d, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78,
	0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x6a, 0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e,
	0x6f, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65,
})

var (
	file_authd_oc_proto_rawDescOnce sync.Once
	file_authd_oc_proto_rawDescData []byte
)

func file_authd_oc_proto_rawDescGZIP() []byte {
	file_authd_oc_proto_rawDescOnce.Do(func() {
		file_authd_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_authd_oc_proto_rawDesc), len(file_authd_oc_proto_rawDesc)))
	})
	return file_authd_oc_proto_rawDescData
}

var file_authd_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_authd_oc_proto_goTypes = []any{
	(*JunosAuthentication)(nil),                                                                                                                                                           // 0: junos_authentication
	(*JunosAuthenticationSystemType)(nil),                                                                                                                                                 // 1: junos_authentication.system_type
	(*JunosAuthenticationSystemTypeSubscriberManagementType)(nil),                                                                                                                         // 2: junos_authentication.system_type.subscriber_management_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaType)(nil),                                                                                                                  // 3: junos_authentication.system_type.subscriber_management_type.aaa_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAuthenticationStatisticsType)(nil),                                                                                      // 4: junos_authentication.system_type.subscriber_management_type.aaa_type.authentication_statistics_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAccountingStatisticsType)(nil),                                                                                          // 5: junos_authentication.system_type.subscriber_management_type.aaa_type.accounting_statistics_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDynamicRequestStatisticsType)(nil),                                                                                      // 6: junos_authentication.system_type.subscriber_management_type.aaa_type.dynamic_request_statistics_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersType)(nil),                                                                                                 // 7: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsType)(nil),                                                                                   // 8: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterType)(nil),                                                                                                      // 9: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerList)(nil),                                                                                 // 10: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListStatisticsType)(nil),                                                                   // 11: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list.statistics_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeRadiusServersTypeRadiusServerListResponseTimeType)(nil),                                                                 // 12: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list.response_time_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesType)(nil),                                                  // 13: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceList)(nil),                  // 14: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsType)(nil),         // 15: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list.pools_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeAddressAssignmentStatisticsTypeLogicalSystemRoutingInstancesTypeLogicalSystemRoutingInstanceListPoolsTypePoolList)(nil), // 16: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list.pools_type.pool_list
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsType)(nil),                                                                                           // 17: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeNasreqType)(nil),                                                                                 // 18: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.nasreq_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGxType)(nil),                                                                                     // 19: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.gx_type
	(*JunosAuthenticationSystemTypeSubscriberManagementTypeAaaTypeDiameterTypeClientsTypeGyType)(nil),                                                                                     // 20: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.gy_type
	(*JuniperNetworksSensors)(nil), // 21: JuniperNetworksSensors
}
var file_authd_oc_proto_depIdxs = []int32{
	1,  // 0: junos_authentication.system:type_name -> junos_authentication.system_type
	2,  // 1: junos_authentication.system_type.subscriber_management:type_name -> junos_authentication.system_type.subscriber_management_type
	3,  // 2: junos_authentication.system_type.subscriber_management_type.aaa:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type
	4,  // 3: junos_authentication.system_type.subscriber_management_type.aaa_type.authentication_statistics:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.authentication_statistics_type
	5,  // 4: junos_authentication.system_type.subscriber_management_type.aaa_type.accounting_statistics:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.accounting_statistics_type
	6,  // 5: junos_authentication.system_type.subscriber_management_type.aaa_type.dynamic_request_statistics:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.dynamic_request_statistics_type
	7,  // 6: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type
	8,  // 7: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type
	9,  // 8: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type
	10, // 9: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list
	13, // 10: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type
	17, // 11: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type
	11, // 12: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list.statistics:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list.statistics_type
	12, // 13: junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list.response_time:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.radius_servers_type.radius_server_list.response_time_type
	14, // 14: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list
	15, // 15: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list.pools:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list.pools_type
	16, // 16: junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list.pools_type.pool:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.address_assignment_statistics_type.logical_system_routing_instances_type.logical_system_routing_instance_list.pools_type.pool_list
	18, // 17: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.nasreq:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.nasreq_type
	19, // 18: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.gx:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.gx_type
	20, // 19: junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.gy:type_name -> junos_authentication.system_type.subscriber_management_type.aaa_type.diameter_type.clients_type.gy_type
	21, // 20: jnpr_junos_authentication_ext:extendee -> JuniperNetworksSensors
	0,  // 21: jnpr_junos_authentication_ext:type_name -> junos_authentication
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	21, // [21:22] is the sub-list for extension type_name
	20, // [20:21] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_authd_oc_proto_init() }
func file_authd_oc_proto_init() {
	if File_authd_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_authd_oc_proto_rawDesc), len(file_authd_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_authd_oc_proto_goTypes,
		DependencyIndexes: file_authd_oc_proto_depIdxs,
		MessageInfos:      file_authd_oc_proto_msgTypes,
		ExtensionInfos:    file_authd_oc_proto_extTypes,
	}.Build()
	File_authd_oc_proto = out.File
	file_authd_oc_proto_goTypes = nil
	file_authd_oc_proto_depIdxs = nil
}
