// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: pfed_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosPfe struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	NpuMemory     []*JunosPfeNpuMemoryList `protobuf:"bytes,151,rep,name=npu_memory,json=npuMemory" json:"npu_memory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPfe) Reset() {
	*x = JunosPfe{}
	mi := &file_pfed_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPfe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPfe) ProtoMessage() {}

func (x *JunosPfe) ProtoReflect() protoreflect.Message {
	mi := &file_pfed_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPfe.ProtoReflect.Descriptor instead.
func (*JunosPfe) Descriptor() ([]byte, []int) {
	return file_pfed_oc_proto_rawDescGZIP(), []int{0}
}

func (x *JunosPfe) GetNpuMemory() []*JunosPfeNpuMemoryList {
	if x != nil {
		return x.NpuMemory
	}
	return nil
}

type JunosPfeNpuMemoryList struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PfeName             *string                `protobuf:"bytes,51,opt,name=pfe_name,json=pfeName" json:"pfe_name,omitempty"`
	CombinedPoolName    *string                `protobuf:"bytes,52,opt,name=combined_pool_name,json=combinedPoolName" json:"combined_pool_name,omitempty"`
	CombinedSize        *uint32                `protobuf:"varint,53,opt,name=combined_size,json=combinedSize" json:"combined_size,omitempty"`
	CombinedUsageCount  *uint32                `protobuf:"varint,54,opt,name=combined_usage_count,json=combinedUsageCount" json:"combined_usage_count,omitempty"`
	CombinedUtilization *uint32                `protobuf:"varint,55,opt,name=combined_utilization,json=combinedUtilization" json:"combined_utilization,omitempty"`
	GlobalPoolName      *string                `protobuf:"bytes,56,opt,name=global_pool_name,json=globalPoolName" json:"global_pool_name,omitempty"`
	GlobalUsageCount    *uint32                `protobuf:"varint,57,opt,name=global_usage_count,json=globalUsageCount" json:"global_usage_count,omitempty"`
	GlobalAllocCount    *uint32                `protobuf:"varint,58,opt,name=global_alloc_count,json=globalAllocCount" json:"global_alloc_count,omitempty"`
	GlobalFreeCount     *uint32                `protobuf:"varint,59,opt,name=global_free_count,json=globalFreeCount" json:"global_free_count,omitempty"`
	LocalPoolName       *string                `protobuf:"bytes,60,opt,name=local_pool_name,json=localPoolName" json:"local_pool_name,omitempty"`
	LocalUsageCount     *uint32                `protobuf:"varint,61,opt,name=local_usage_count,json=localUsageCount" json:"local_usage_count,omitempty"`
	LocalAllocCount     *uint32                `protobuf:"varint,62,opt,name=local_alloc_count,json=localAllocCount" json:"local_alloc_count,omitempty"`
	LocalFreeCount      *uint32                `protobuf:"varint,63,opt,name=local_free_count,json=localFreeCount" json:"local_free_count,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *JunosPfeNpuMemoryList) Reset() {
	*x = JunosPfeNpuMemoryList{}
	mi := &file_pfed_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPfeNpuMemoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPfeNpuMemoryList) ProtoMessage() {}

func (x *JunosPfeNpuMemoryList) ProtoReflect() protoreflect.Message {
	mi := &file_pfed_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPfeNpuMemoryList.ProtoReflect.Descriptor instead.
func (*JunosPfeNpuMemoryList) Descriptor() ([]byte, []int) {
	return file_pfed_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosPfeNpuMemoryList) GetPfeName() string {
	if x != nil && x.PfeName != nil {
		return *x.PfeName
	}
	return ""
}

func (x *JunosPfeNpuMemoryList) GetCombinedPoolName() string {
	if x != nil && x.CombinedPoolName != nil {
		return *x.CombinedPoolName
	}
	return ""
}

func (x *JunosPfeNpuMemoryList) GetCombinedSize() uint32 {
	if x != nil && x.CombinedSize != nil {
		return *x.CombinedSize
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetCombinedUsageCount() uint32 {
	if x != nil && x.CombinedUsageCount != nil {
		return *x.CombinedUsageCount
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetCombinedUtilization() uint32 {
	if x != nil && x.CombinedUtilization != nil {
		return *x.CombinedUtilization
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetGlobalPoolName() string {
	if x != nil && x.GlobalPoolName != nil {
		return *x.GlobalPoolName
	}
	return ""
}

func (x *JunosPfeNpuMemoryList) GetGlobalUsageCount() uint32 {
	if x != nil && x.GlobalUsageCount != nil {
		return *x.GlobalUsageCount
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetGlobalAllocCount() uint32 {
	if x != nil && x.GlobalAllocCount != nil {
		return *x.GlobalAllocCount
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetGlobalFreeCount() uint32 {
	if x != nil && x.GlobalFreeCount != nil {
		return *x.GlobalFreeCount
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetLocalPoolName() string {
	if x != nil && x.LocalPoolName != nil {
		return *x.LocalPoolName
	}
	return ""
}

func (x *JunosPfeNpuMemoryList) GetLocalUsageCount() uint32 {
	if x != nil && x.LocalUsageCount != nil {
		return *x.LocalUsageCount
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetLocalAllocCount() uint32 {
	if x != nil && x.LocalAllocCount != nil {
		return *x.LocalAllocCount
	}
	return 0
}

func (x *JunosPfeNpuMemoryList) GetLocalFreeCount() uint32 {
	if x != nil && x.LocalFreeCount != nil {
		return *x.LocalFreeCount
	}
	return 0
}

var file_pfed_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosPfe)(nil),
		Field:         57,
		Name:          "jnpr_junos_pfe_ext",
		Tag:           "bytes,57,opt,name=jnpr_junos_pfe_ext",
		Filename:      "pfed_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_pfe jnpr_junos_pfe_ext = 57;
	E_JnprJunosPfeExt = &file_pfed_oc_proto_extTypes[0]
)

var File_pfed_oc_proto protoreflect.FileDescriptor

var file_pfed_oc_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x70, 0x66, 0x65, 0x64, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x05, 0x0a, 0x09, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70,
	0x66, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x70, 0x66, 0x65, 0x2e, 0x6e, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x09, 0x6e, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x1a, 0xc7,
	0x04, 0x0a, 0x0f, 0x6e, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x08, 0x70, 0x66, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x07, 0x70, 0x66, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x64, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f,
	0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x39, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f,
	0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x46,
	0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x50, 0x0a, 0x12, 0x6a, 0x6e, 0x70, 0x72,
	0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17,
	0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x52, 0x0f, 0x6a, 0x6e, 0x70, 0x72, 0x4a,
	0x75, 0x6e, 0x6f, 0x73, 0x50, 0x66, 0x65, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f,
	0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_pfed_oc_proto_rawDescOnce sync.Once
	file_pfed_oc_proto_rawDescData []byte
)

func file_pfed_oc_proto_rawDescGZIP() []byte {
	file_pfed_oc_proto_rawDescOnce.Do(func() {
		file_pfed_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pfed_oc_proto_rawDesc), len(file_pfed_oc_proto_rawDesc)))
	})
	return file_pfed_oc_proto_rawDescData
}

var file_pfed_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pfed_oc_proto_goTypes = []any{
	(*JunosPfe)(nil),               // 0: junos_pfe
	(*JunosPfeNpuMemoryList)(nil),  // 1: junos_pfe.npu_memory_list
	(*JuniperNetworksSensors)(nil), // 2: JuniperNetworksSensors
}
var file_pfed_oc_proto_depIdxs = []int32{
	1, // 0: junos_pfe.npu_memory:type_name -> junos_pfe.npu_memory_list
	2, // 1: jnpr_junos_pfe_ext:extendee -> JuniperNetworksSensors
	0, // 2: jnpr_junos_pfe_ext:type_name -> junos_pfe
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	2, // [2:3] is the sub-list for extension type_name
	1, // [1:2] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pfed_oc_proto_init() }
func file_pfed_oc_proto_init() {
	if File_pfed_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pfed_oc_proto_rawDesc), len(file_pfed_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_pfed_oc_proto_goTypes,
		DependencyIndexes: file_pfed_oc_proto_depIdxs,
		MessageInfos:      file_pfed_oc_proto_msgTypes,
		ExtensionInfos:    file_pfed_oc_proto_extTypes,
	}.Build()
	File_pfed_oc_proto = out.File
	file_pfed_oc_proto_goTypes = nil
	file_pfed_oc_proto_depIdxs = nil
}
