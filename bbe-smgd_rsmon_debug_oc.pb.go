// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: bbe-smgd_rsmon_debug_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebugRsmonDebug struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	System        *DebugRsmonDebugSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugRsmonDebug) Reset() {
	*x = DebugRsmonDebug{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebug) ProtoMessage() {}

func (x *DebugRsmonDebug) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebug.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebug) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0}
}

func (x *DebugRsmonDebug) GetSystem() *DebugRsmonDebugSystemType {
	if x != nil {
		return x.System
	}
	return nil
}

type DebugRsmonDebugSystemType struct {
	state                protoimpl.MessageState                             `protogen:"open.v1"`
	SubscriberManagement *DebugRsmonDebugSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemType) Reset() {
	*x = DebugRsmonDebugSystemType{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemType) ProtoMessage() {}

func (x *DebugRsmonDebugSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemType.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DebugRsmonDebugSystemType) GetSubscriberManagement() *DebugRsmonDebugSystemTypeSubscriberManagementType {
	if x != nil {
		return x.SubscriberManagement
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementType struct {
	state         protoimpl.MessageState                                      `protogen:"open.v1"`
	Infra         *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType `protobuf:"bytes,151,opt,name=infra" json:"infra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementType) Reset() {
	*x = DebugRsmonDebugSystemTypeSubscriberManagementType{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemTypeSubscriberManagementType) ProtoMessage() {}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemTypeSubscriberManagementType.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementType) GetInfra() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType {
	if x != nil {
		return x.Infra
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType struct {
	state           protoimpl.MessageState                                                         `protogen:"open.v1"`
	ResourceMonitor *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType `protobuf:"bytes,151,opt,name=resource_monitor,json=resourceMonitor" json:"resource_monitor,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Reset() {
	*x = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) ProtoMessage() {}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) GetResourceMonitor() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType {
	if x != nil {
		return x.ResourceMonitor
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType struct {
	state         protoimpl.MessageState                                                                 `protogen:"open.v1"`
	Fpcs          *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType `protobuf:"bytes,151,opt,name=fpcs" json:"fpcs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Reset() {
	*x = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) ProtoMessage() {
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) GetFpcs() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType {
	if x != nil {
		return x.Fpcs
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType struct {
	state         protoimpl.MessageState                                                                          `protogen:"open.v1"`
	Fpc           []*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList `protobuf:"bytes,151,rep,name=fpc" json:"fpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Reset() {
	*x = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) ProtoMessage() {
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0}
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) GetFpc() []*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList {
	if x != nil {
		return x.Fpc
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList struct {
	state         protoimpl.MessageState                                                                                      `protogen:"open.v1"`
	Slot          *uint32                                                                                                     `protobuf:"varint,61,opt,name=slot" json:"slot,omitempty"`
	Statistics    *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Reset() {
	*x = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) ProtoMessage() {
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0}
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetSlot() uint32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetStatistics() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AverageRtt    *uint32                `protobuf:"varint,61,opt,name=average_rtt,json=averageRtt" json:"average_rtt,omitempty"`
	CurrentRtt    *uint32                `protobuf:"varint,62,opt,name=current_rtt,json=currentRtt" json:"current_rtt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Reset() {
	*x = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType{}
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) ProtoMessage() {
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_rsmon_debug_oc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.ProtoReflect.Descriptor instead.
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 0}
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetAverageRtt() uint32 {
	if x != nil && x.AverageRtt != nil {
		return *x.AverageRtt
	}
	return 0
}

func (x *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetCurrentRtt() uint32 {
	if x != nil && x.CurrentRtt != nil {
		return *x.CurrentRtt
	}
	return 0
}

var file_bbe_smgd_rsmon_debug_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*DebugRsmonDebug)(nil),
		Field:         36,
		Name:          "jnpr_debug_rsmon_debug_ext",
		Tag:           "bytes,36,opt,name=jnpr_debug_rsmon_debug_ext",
		Filename:      "bbe-smgd_rsmon_debug_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional debug_rsmon_debug jnpr_debug_rsmon_debug_ext = 36;
	E_JnprDebugRsmonDebugExt = &file_bbe_smgd_rsmon_debug_oc_proto_extTypes[0]
)

var File_bbe_smgd_rsmon_debug_oc_proto protoreflect.FileDescriptor

var file_bbe_smgd_rsmon_debug_oc_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x62, 0x62, 0x65, 0x2d, 0x73, 0x6d, 0x67, 0x64, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x08, 0x0a, 0x11, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x72,
	0x73, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x1a, 0xd6, 0x07, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x6f, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x14,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xd5, 0x06, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x5b, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x1a, 0xd9, 0x05, 0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x86, 0x01, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0xc1, 0x04, 0x0a, 0x15, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x79, 0x0a, 0x04, 0x66, 0x70, 0x63, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x64, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x66, 0x70,
	0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x66, 0x70, 0x63, 0x73, 0x1a, 0xac, 0x03,
	0x0a, 0x09, 0x66, 0x70, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x03,
	0x66, 0x70, 0x63, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6d, 0x2e, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x66, 0x70, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x66, 0x70, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x03, 0x66, 0x70, 0x63, 0x1a, 0x9b,
	0x02, 0x0a, 0x08, 0x66, 0x70, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x9e, 0x01, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7d, 0x2e, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x66, 0x70, 0x63, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x66, 0x70, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x53, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x74, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x74, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x74, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x74, 0x74, 0x3a, 0x67, 0x0a, 0x1a,
	0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x5f, 0x72, 0x73, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x52, 0x16, 0x6a,
	0x6e, 0x70, 0x72, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x73, 0x6d, 0x6f, 0x6e, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65,
})

var (
	file_bbe_smgd_rsmon_debug_oc_proto_rawDescOnce sync.Once
	file_bbe_smgd_rsmon_debug_oc_proto_rawDescData []byte
)

func file_bbe_smgd_rsmon_debug_oc_proto_rawDescGZIP() []byte {
	file_bbe_smgd_rsmon_debug_oc_proto_rawDescOnce.Do(func() {
		file_bbe_smgd_rsmon_debug_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bbe_smgd_rsmon_debug_oc_proto_rawDesc), len(file_bbe_smgd_rsmon_debug_oc_proto_rawDesc)))
	})
	return file_bbe_smgd_rsmon_debug_oc_proto_rawDescData
}

var file_bbe_smgd_rsmon_debug_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bbe_smgd_rsmon_debug_oc_proto_goTypes = []any{
	(*DebugRsmonDebug)(nil),                                                                                            // 0: debug_rsmon_debug
	(*DebugRsmonDebugSystemType)(nil),                                                                                  // 1: debug_rsmon_debug.system_type
	(*DebugRsmonDebugSystemTypeSubscriberManagementType)(nil),                                                          // 2: debug_rsmon_debug.system_type.subscriber_management_type
	(*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType)(nil),                                                 // 3: debug_rsmon_debug.system_type.subscriber_management_type.infra_type
	(*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType)(nil),                              // 4: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type
	(*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType)(nil),                      // 5: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type
	(*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList)(nil),               // 6: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list
	(*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType)(nil), // 7: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type
	(*JuniperNetworksSensors)(nil),                                                                                     // 8: JuniperNetworksSensors
}
var file_bbe_smgd_rsmon_debug_oc_proto_depIdxs = []int32{
	1, // 0: debug_rsmon_debug.system:type_name -> debug_rsmon_debug.system_type
	2, // 1: debug_rsmon_debug.system_type.subscriber_management:type_name -> debug_rsmon_debug.system_type.subscriber_management_type
	3, // 2: debug_rsmon_debug.system_type.subscriber_management_type.infra:type_name -> debug_rsmon_debug.system_type.subscriber_management_type.infra_type
	4, // 3: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor:type_name -> debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type
	5, // 4: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs:type_name -> debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type
	6, // 5: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc:type_name -> debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list
	7, // 6: debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics:type_name -> debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type
	8, // 7: jnpr_debug_rsmon_debug_ext:extendee -> JuniperNetworksSensors
	0, // 8: jnpr_debug_rsmon_debug_ext:type_name -> debug_rsmon_debug
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	8, // [8:9] is the sub-list for extension type_name
	7, // [7:8] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_bbe_smgd_rsmon_debug_oc_proto_init() }
func file_bbe_smgd_rsmon_debug_oc_proto_init() {
	if File_bbe_smgd_rsmon_debug_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bbe_smgd_rsmon_debug_oc_proto_rawDesc), len(file_bbe_smgd_rsmon_debug_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_bbe_smgd_rsmon_debug_oc_proto_goTypes,
		DependencyIndexes: file_bbe_smgd_rsmon_debug_oc_proto_depIdxs,
		MessageInfos:      file_bbe_smgd_rsmon_debug_oc_proto_msgTypes,
		ExtensionInfos:    file_bbe_smgd_rsmon_debug_oc_proto_extTypes,
	}.Build()
	File_bbe_smgd_rsmon_debug_oc_proto = out.File
	file_bbe_smgd_rsmon_debug_oc_proto_goTypes = nil
	file_bbe_smgd_rsmon_debug_oc_proto_depIdxs = nil
}
