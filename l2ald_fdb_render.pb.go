// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: l2ald_fdb_render.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkInstancesFdb struct {
	state           protoimpl.MessageState                    `protogen:"open.v1"`
	NetworkInstance []*NetworkInstancesFdbNetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkInstancesFdb) Reset() {
	*x = NetworkInstancesFdb{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdb) ProtoMessage() {}

func (x *NetworkInstancesFdb) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdb.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdb) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInstancesFdb) GetNetworkInstance() []*NetworkInstancesFdbNetworkInstanceList {
	if x != nil {
		return x.NetworkInstance
	}
	return nil
}

type NetworkInstancesFdbNetworkInstanceList struct {
	state          protoimpl.MessageState                                    `protogen:"open.v1"`
	Name           *string                                                   `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	MacTableInfo   *NetworkInstancesFdbNetworkInstanceListMacTableInfoType   `protobuf:"bytes,171,opt,name=mac_table_info,json=macTableInfo" json:"mac_table_info,omitempty"`
	MacTable       *NetworkInstancesFdbNetworkInstanceListMacTableType       `protobuf:"bytes,151,opt,name=mac_table,json=macTable" json:"mac_table,omitempty"`
	MacipTableInfo *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType `protobuf:"bytes,181,opt,name=macip_table_info,json=macipTableInfo" json:"macip_table_info,omitempty"`
	MacipTable     *NetworkInstancesFdbNetworkInstanceListMacipTableType     `protobuf:"bytes,161,opt,name=macip_table,json=macipTable" json:"macip_table,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceList) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceList{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceList) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceList.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceList) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NetworkInstancesFdbNetworkInstanceList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceList) GetMacTableInfo() *NetworkInstancesFdbNetworkInstanceListMacTableInfoType {
	if x != nil {
		return x.MacTableInfo
	}
	return nil
}

func (x *NetworkInstancesFdbNetworkInstanceList) GetMacTable() *NetworkInstancesFdbNetworkInstanceListMacTableType {
	if x != nil {
		return x.MacTable
	}
	return nil
}

func (x *NetworkInstancesFdbNetworkInstanceList) GetMacipTableInfo() *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType {
	if x != nil {
		return x.MacipTableInfo
	}
	return nil
}

func (x *NetworkInstancesFdbNetworkInstanceList) GetMacipTable() *NetworkInstancesFdbNetworkInstanceListMacipTableType {
	if x != nil {
		return x.MacipTable
	}
	return nil
}

type NetworkInstancesFdbNetworkInstanceListMacTableInfoType struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Learning        *bool                  `protobuf:"varint,71,opt,name=learning" json:"learning,omitempty"`
	AgingTime       *uint32                `protobuf:"varint,72,opt,name=aging_time,json=agingTime" json:"aging_time,omitempty"`
	TableSize       *uint32                `protobuf:"varint,73,opt,name=table_size,json=tableSize" json:"table_size,omitempty"`
	NumLocalEntries *uint32                `protobuf:"varint,74,opt,name=num_local_entries,json=numLocalEntries" json:"num_local_entries,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacTableInfoType{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacTableInfoType) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacTableInfoType.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacTableInfoType) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) GetLearning() bool {
	if x != nil && x.Learning != nil {
		return *x.Learning
	}
	return false
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) GetAgingTime() uint32 {
	if x != nil && x.AgingTime != nil {
		return *x.AgingTime
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) GetTableSize() uint32 {
	if x != nil && x.TableSize != nil {
		return *x.TableSize
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableInfoType) GetNumLocalEntries() uint32 {
	if x != nil && x.NumLocalEntries != nil {
		return *x.NumLocalEntries
	}
	return 0
}

type NetworkInstancesFdbNetworkInstanceListMacTableType struct {
	state         protoimpl.MessageState                                         `protogen:"open.v1"`
	Entries       *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType `protobuf:"bytes,151,opt,name=entries" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableType) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacTableType{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacTableType) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacTableType.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacTableType) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableType) GetEntries() *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType {
	if x != nil {
		return x.Entries
	}
	return nil
}

type NetworkInstancesFdbNetworkInstanceListMacipTableInfoType struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Learning        *bool                  `protobuf:"varint,81,opt,name=learning" json:"learning,omitempty"`
	AgingTime       *uint32                `protobuf:"varint,82,opt,name=aging_time,json=agingTime" json:"aging_time,omitempty"`
	TableSize       *uint32                `protobuf:"varint,83,opt,name=table_size,json=tableSize" json:"table_size,omitempty"`
	ProxyMacip      *bool                  `protobuf:"varint,84,opt,name=proxy_macip,json=proxyMacip" json:"proxy_macip,omitempty"`
	NumLocalEntries *uint32                `protobuf:"varint,85,opt,name=num_local_entries,json=numLocalEntries" json:"num_local_entries,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacipTableInfoType{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacipTableInfoType.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) GetLearning() bool {
	if x != nil && x.Learning != nil {
		return *x.Learning
	}
	return false
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) GetAgingTime() uint32 {
	if x != nil && x.AgingTime != nil {
		return *x.AgingTime
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) GetTableSize() uint32 {
	if x != nil && x.TableSize != nil {
		return *x.TableSize
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) GetProxyMacip() bool {
	if x != nil && x.ProxyMacip != nil {
		return *x.ProxyMacip
	}
	return false
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableInfoType) GetNumLocalEntries() uint32 {
	if x != nil && x.NumLocalEntries != nil {
		return *x.NumLocalEntries
	}
	return 0
}

type NetworkInstancesFdbNetworkInstanceListMacipTableType struct {
	state         protoimpl.MessageState                                           `protogen:"open.v1"`
	Entries       *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType `protobuf:"bytes,161,opt,name=entries" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableType) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacipTableType{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacipTableType) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacipTableType.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacipTableType) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableType) GetEntries() *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType {
	if x != nil {
		return x.Entries
	}
	return nil
}

type NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType struct {
	state         protoimpl.MessageState                                                    `protogen:"open.v1"`
	Entry         []*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList `protobuf:"bytes,151,rep,name=entry" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType) GetEntry() []*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList {
	if x != nil {
		return x.Entry
	}
	return nil
}

type NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MacAddress    *string                `protobuf:"bytes,51,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	VlanId        *uint32                `protobuf:"varint,52,opt,name=vlan_id,json=vlanId" json:"vlan_id,omitempty"`
	Vni           *uint32                `protobuf:"varint,53,opt,name=vni" json:"vni,omitempty"`
	VlanName      *string                `protobuf:"bytes,54,opt,name=vlan_name,json=vlanName" json:"vlan_name,omitempty"`
	Interface     *string                `protobuf:"bytes,55,opt,name=interface" json:"interface,omitempty"`
	EntryType     *string                `protobuf:"bytes,56,opt,name=entry_type,json=entryType" json:"entry_type,omitempty"`
	EventType     *string                `protobuf:"bytes,57,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EthernetTagId *uint32                `protobuf:"varint,58,opt,name=ethernet_tag_id,json=ethernetTagId" json:"ethernet_tag_id,omitempty"`
	ActiveSource  *string                `protobuf:"bytes,59,opt,name=active_source,json=activeSource" json:"active_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 1, 0, 0}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetMacAddress() string {
	if x != nil && x.MacAddress != nil {
		return *x.MacAddress
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetVlanId() uint32 {
	if x != nil && x.VlanId != nil {
		return *x.VlanId
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetVni() uint32 {
	if x != nil && x.Vni != nil {
		return *x.Vni
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetVlanName() string {
	if x != nil && x.VlanName != nil {
		return *x.VlanName
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetInterface() string {
	if x != nil && x.Interface != nil {
		return *x.Interface
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetEntryType() string {
	if x != nil && x.EntryType != nil {
		return *x.EntryType
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetEventType() string {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetEthernetTagId() uint32 {
	if x != nil && x.EthernetTagId != nil {
		return *x.EthernetTagId
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList) GetActiveSource() string {
	if x != nil && x.ActiveSource != nil {
		return *x.ActiveSource
	}
	return ""
}

type NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType struct {
	state         protoimpl.MessageState                                                      `protogen:"open.v1"`
	Entry         []*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList `protobuf:"bytes,161,rep,name=entry" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 3, 0}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType) GetEntry() []*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList {
	if x != nil {
		return x.Entry
	}
	return nil
}

type NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddress     *string                `protobuf:"bytes,51,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	MacAddress    *string                `protobuf:"bytes,52,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	VlanId        *uint32                `protobuf:"varint,53,opt,name=vlan_id,json=vlanId" json:"vlan_id,omitempty"`
	Vni           *uint32                `protobuf:"varint,54,opt,name=vni" json:"vni,omitempty"`
	VlanName      *string                `protobuf:"bytes,55,opt,name=vlan_name,json=vlanName" json:"vlan_name,omitempty"`
	Interface     *string                `protobuf:"bytes,56,opt,name=interface" json:"interface,omitempty"`
	L3Interface   *string                `protobuf:"bytes,57,opt,name=l3_interface,json=l3Interface" json:"l3_interface,omitempty"`
	EntryType     *string                `protobuf:"bytes,58,opt,name=entry_type,json=entryType" json:"entry_type,omitempty"`
	EventType     *string                `protobuf:"bytes,59,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EthernetTagId *uint32                `protobuf:"varint,60,opt,name=ethernet_tag_id,json=ethernetTagId" json:"ethernet_tag_id,omitempty"`
	ActiveSource  *string                `protobuf:"bytes,61,opt,name=active_source,json=activeSource" json:"active_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) Reset() {
	*x = NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList{}
	mi := &file_l2ald_fdb_render_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) ProtoMessage() {}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_fdb_render_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList.ProtoReflect.Descriptor instead.
func (*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) Descriptor() ([]byte, []int) {
	return file_l2ald_fdb_render_proto_rawDescGZIP(), []int{0, 0, 3, 0, 0}
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetMacAddress() string {
	if x != nil && x.MacAddress != nil {
		return *x.MacAddress
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetVlanId() uint32 {
	if x != nil && x.VlanId != nil {
		return *x.VlanId
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetVni() uint32 {
	if x != nil && x.Vni != nil {
		return *x.Vni
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetVlanName() string {
	if x != nil && x.VlanName != nil {
		return *x.VlanName
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetInterface() string {
	if x != nil && x.Interface != nil {
		return *x.Interface
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetL3Interface() string {
	if x != nil && x.L3Interface != nil {
		return *x.L3Interface
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetEntryType() string {
	if x != nil && x.EntryType != nil {
		return *x.EntryType
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetEventType() string {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return ""
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetEthernetTagId() uint32 {
	if x != nil && x.EthernetTagId != nil {
		return *x.EthernetTagId
	}
	return 0
}

func (x *NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList) GetActiveSource() string {
	if x != nil && x.ActiveSource != nil {
		return *x.ActiveSource
	}
	return ""
}

var file_l2ald_fdb_render_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*NetworkInstancesFdb)(nil),
		Field:         114,
		Name:          "jnpr_network_instances_fdb_ext",
		Tag:           "bytes,114,opt,name=jnpr_network_instances_fdb_ext",
		Filename:      "l2ald_fdb_render.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional network_instances_fdb jnpr_network_instances_fdb_ext = 114;
	E_JnprNetworkInstancesFdbExt = &file_l2ald_fdb_render_proto_extTypes[0]
)

var File_l2ald_fdb_render_proto protoreflect.FileDescriptor

var file_l2ald_fdb_render_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6c, 0x32, 0x61, 0x6c, 0x64, 0x5f, 0x66, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x10,
	0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x12, 0x58, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x1a, 0xa7, 0x0f, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x0e, 0x6d, 0x61, 0x63, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xab, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6d, 0x61,
	0x63, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x6d, 0x61, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x59, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x6d, 0x61, 0x63, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x6d, 0x61, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6d, 0x0a, 0x10, 0x6d, 0x61,
	0x63, 0x69, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb5,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x69, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x63, 0x69, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5f, 0x0a, 0x0b, 0x6d, 0x61, 0x63,
	0x69, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6d, 0x61,
	0x63, 0x69, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x6d, 0x61, 0x63, 0x69, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x9b, 0x01, 0x0a, 0x13, 0x6d,
	0x61, 0x63, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x49, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x9a, 0x04, 0x0a, 0x0e, 0x6d, 0x61, 0x63,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0xa2, 0x03, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x6a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x53, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x6d, 0x61, 0x63, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0xa5, 0x02,
	0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x22, 0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x54, 0x61, 0x67, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xbe, 0x01, 0x0a, 0x15, 0x6d, 0x61, 0x63, 0x69, 0x70, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x51, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x5f, 0x6d, 0x61, 0x63, 0x69, 0x70, 0x18, 0x54, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x4d, 0x61, 0x63, 0x69, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75,
	0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x55, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xe2, 0x04, 0x0a, 0x10, 0x6d, 0x61, 0x63, 0x69, 0x70,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x65, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6d, 0x61, 0x63, 0x69,
	0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0xe6, 0x03, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x6c, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0xa1, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x6d, 0x61, 0x63, 0x69, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x1a, 0xe7, 0x02, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x22, 0x0a, 0x09, 0x76,
	0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x38, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x33, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x73, 0x0a, 0x1e, 0x6a,
	0x6e, 0x70, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x66, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e,
	0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x5f, 0x66, 0x64, 0x62, 0x52, 0x1a, 0x6a, 0x6e, 0x70, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x64, 0x62, 0x45, 0x78, 0x74,
	0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_l2ald_fdb_render_proto_rawDescOnce sync.Once
	file_l2ald_fdb_render_proto_rawDescData []byte
)

func file_l2ald_fdb_render_proto_rawDescGZIP() []byte {
	file_l2ald_fdb_render_proto_rawDescOnce.Do(func() {
		file_l2ald_fdb_render_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_l2ald_fdb_render_proto_rawDesc), len(file_l2ald_fdb_render_proto_rawDesc)))
	})
	return file_l2ald_fdb_render_proto_rawDescData
}

var file_l2ald_fdb_render_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_l2ald_fdb_render_proto_goTypes = []any{
	(*NetworkInstancesFdb)(nil),                                                      // 0: network_instances_fdb
	(*NetworkInstancesFdbNetworkInstanceList)(nil),                                   // 1: network_instances_fdb.network_instance_list
	(*NetworkInstancesFdbNetworkInstanceListMacTableInfoType)(nil),                   // 2: network_instances_fdb.network_instance_list.mac_table_info_type
	(*NetworkInstancesFdbNetworkInstanceListMacTableType)(nil),                       // 3: network_instances_fdb.network_instance_list.mac_table_type
	(*NetworkInstancesFdbNetworkInstanceListMacipTableInfoType)(nil),                 // 4: network_instances_fdb.network_instance_list.macip_table_info_type
	(*NetworkInstancesFdbNetworkInstanceListMacipTableType)(nil),                     // 5: network_instances_fdb.network_instance_list.macip_table_type
	(*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesType)(nil),            // 6: network_instances_fdb.network_instance_list.mac_table_type.entries_type
	(*NetworkInstancesFdbNetworkInstanceListMacTableTypeEntriesTypeEntryList)(nil),   // 7: network_instances_fdb.network_instance_list.mac_table_type.entries_type.entry_list
	(*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesType)(nil),          // 8: network_instances_fdb.network_instance_list.macip_table_type.entries_type
	(*NetworkInstancesFdbNetworkInstanceListMacipTableTypeEntriesTypeEntryList)(nil), // 9: network_instances_fdb.network_instance_list.macip_table_type.entries_type.entry_list
	(*JuniperNetworksSensors)(nil),                                                   // 10: JuniperNetworksSensors
}
var file_l2ald_fdb_render_proto_depIdxs = []int32{
	1,  // 0: network_instances_fdb.network_instance:type_name -> network_instances_fdb.network_instance_list
	2,  // 1: network_instances_fdb.network_instance_list.mac_table_info:type_name -> network_instances_fdb.network_instance_list.mac_table_info_type
	3,  // 2: network_instances_fdb.network_instance_list.mac_table:type_name -> network_instances_fdb.network_instance_list.mac_table_type
	4,  // 3: network_instances_fdb.network_instance_list.macip_table_info:type_name -> network_instances_fdb.network_instance_list.macip_table_info_type
	5,  // 4: network_instances_fdb.network_instance_list.macip_table:type_name -> network_instances_fdb.network_instance_list.macip_table_type
	6,  // 5: network_instances_fdb.network_instance_list.mac_table_type.entries:type_name -> network_instances_fdb.network_instance_list.mac_table_type.entries_type
	8,  // 6: network_instances_fdb.network_instance_list.macip_table_type.entries:type_name -> network_instances_fdb.network_instance_list.macip_table_type.entries_type
	7,  // 7: network_instances_fdb.network_instance_list.mac_table_type.entries_type.entry:type_name -> network_instances_fdb.network_instance_list.mac_table_type.entries_type.entry_list
	9,  // 8: network_instances_fdb.network_instance_list.macip_table_type.entries_type.entry:type_name -> network_instances_fdb.network_instance_list.macip_table_type.entries_type.entry_list
	10, // 9: jnpr_network_instances_fdb_ext:extendee -> JuniperNetworksSensors
	0,  // 10: jnpr_network_instances_fdb_ext:type_name -> network_instances_fdb
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	10, // [10:11] is the sub-list for extension type_name
	9,  // [9:10] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_l2ald_fdb_render_proto_init() }
func file_l2ald_fdb_render_proto_init() {
	if File_l2ald_fdb_render_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_l2ald_fdb_render_proto_rawDesc), len(file_l2ald_fdb_render_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_l2ald_fdb_render_proto_goTypes,
		DependencyIndexes: file_l2ald_fdb_render_proto_depIdxs,
		MessageInfos:      file_l2ald_fdb_render_proto_msgTypes,
		ExtensionInfos:    file_l2ald_fdb_render_proto_extTypes,
	}.Build()
	File_l2ald_fdb_render_proto = out.File
	file_l2ald_fdb_render_proto_goTypes = nil
	file_l2ald_fdb_render_proto_depIdxs = nil
}
