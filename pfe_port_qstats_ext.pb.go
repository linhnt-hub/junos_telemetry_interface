// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: pfe_port_qstats_ext.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InterfacesPfePortQstats struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Interface     []*InterfacesPfePortQstatsInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfacesPfePortQstats) Reset() {
	*x = InterfacesPfePortQstats{}
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfacesPfePortQstats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfacesPfePortQstats) ProtoMessage() {}

func (x *InterfacesPfePortQstats) ProtoReflect() protoreflect.Message {
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfacesPfePortQstats.ProtoReflect.Descriptor instead.
func (*InterfacesPfePortQstats) Descriptor() ([]byte, []int) {
	return file_pfe_port_qstats_ext_proto_rawDescGZIP(), []int{0}
}

func (x *InterfacesPfePortQstats) GetInterface() []*InterfacesPfePortQstatsInterfaceList {
	if x != nil {
		return x.Interface
	}
	return nil
}

type InterfacesPfePortQstatsInterfaceList struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Name          *string                                        `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	State         *InterfacesPfePortQstatsInterfaceListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfacesPfePortQstatsInterfaceList) Reset() {
	*x = InterfacesPfePortQstatsInterfaceList{}
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfacesPfePortQstatsInterfaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfacesPfePortQstatsInterfaceList) ProtoMessage() {}

func (x *InterfacesPfePortQstatsInterfaceList) ProtoReflect() protoreflect.Message {
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfacesPfePortQstatsInterfaceList.ProtoReflect.Descriptor instead.
func (*InterfacesPfePortQstatsInterfaceList) Descriptor() ([]byte, []int) {
	return file_pfe_port_qstats_ext_proto_rawDescGZIP(), []int{0, 0}
}

func (x *InterfacesPfePortQstatsInterfaceList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *InterfacesPfePortQstatsInterfaceList) GetState() *InterfacesPfePortQstatsInterfaceListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

type InterfacesPfePortQstatsInterfaceListStateType struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Counters      *InterfacesPfePortQstatsInterfaceListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfacesPfePortQstatsInterfaceListStateType) Reset() {
	*x = InterfacesPfePortQstatsInterfaceListStateType{}
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfacesPfePortQstatsInterfaceListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfacesPfePortQstatsInterfaceListStateType) ProtoMessage() {}

func (x *InterfacesPfePortQstatsInterfaceListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfacesPfePortQstatsInterfaceListStateType.ProtoReflect.Descriptor instead.
func (*InterfacesPfePortQstatsInterfaceListStateType) Descriptor() ([]byte, []int) {
	return file_pfe_port_qstats_ext_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *InterfacesPfePortQstatsInterfaceListStateType) GetCounters() *InterfacesPfePortQstatsInterfaceListStateTypeCountersType {
	if x != nil {
		return x.Counters
	}
	return nil
}

type InterfacesPfePortQstatsInterfaceListStateTypeCountersType struct {
	state         protoimpl.MessageState                                                   `protogen:"open.v1"`
	OutQueue      []*InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList `protobuf:"bytes,151,rep,name=out_queue,json=outQueue" json:"out_queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersType) Reset() {
	*x = InterfacesPfePortQstatsInterfaceListStateTypeCountersType{}
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfacesPfePortQstatsInterfaceListStateTypeCountersType) ProtoMessage() {}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersType) ProtoReflect() protoreflect.Message {
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfacesPfePortQstatsInterfaceListStateTypeCountersType.ProtoReflect.Descriptor instead.
func (*InterfacesPfePortQstatsInterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return file_pfe_port_qstats_ext_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersType) GetOutQueue() []*InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList {
	if x != nil {
		return x.OutQueue
	}
	return nil
}

type InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueNumber   *uint32                `protobuf:"varint,51,opt,name=queue_number,json=queueNumber" json:"queue_number,omitempty"`
	QueuedPkts    *uint64                `protobuf:"varint,52,opt,name=queued_pkts,json=queuedPkts" json:"queued_pkts,omitempty"`
	QueuedBytes   *uint64                `protobuf:"varint,53,opt,name=queued_bytes,json=queuedBytes" json:"queued_bytes,omitempty"`
	LpRedDropPkts *uint64                `protobuf:"varint,54,opt,name=lp_red_drop_pkts,json=lpRedDropPkts" json:"lp_red_drop_pkts,omitempty"`
	HpRedDropPkts *uint64                `protobuf:"varint,55,opt,name=hp_red_drop_pkts,json=hpRedDropPkts" json:"hp_red_drop_pkts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) Reset() {
	*x = InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList{}
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) ProtoMessage() {}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) ProtoReflect() protoreflect.Message {
	mi := &file_pfe_port_qstats_ext_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList.ProtoReflect.Descriptor instead.
func (*InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) Descriptor() ([]byte, []int) {
	return file_pfe_port_qstats_ext_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) GetQueueNumber() uint32 {
	if x != nil && x.QueueNumber != nil {
		return *x.QueueNumber
	}
	return 0
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) GetQueuedPkts() uint64 {
	if x != nil && x.QueuedPkts != nil {
		return *x.QueuedPkts
	}
	return 0
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) GetQueuedBytes() uint64 {
	if x != nil && x.QueuedBytes != nil {
		return *x.QueuedBytes
	}
	return 0
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) GetLpRedDropPkts() uint64 {
	if x != nil && x.LpRedDropPkts != nil {
		return *x.LpRedDropPkts
	}
	return 0
}

func (x *InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList) GetHpRedDropPkts() uint64 {
	if x != nil && x.HpRedDropPkts != nil {
		return *x.HpRedDropPkts
	}
	return 0
}

var file_pfe_port_qstats_ext_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*InterfacesPfePortQstats)(nil),
		Field:         133,
		Name:          "jnpr_interfaces_pfe_port_qstats_ext",
		Tag:           "bytes,133,opt,name=jnpr_interfaces_pfe_port_qstats_ext",
		Filename:      "pfe_port_qstats_ext.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional interfaces_pfe_port_qstats jnpr_interfaces_pfe_port_qstats_ext = 133;
	E_JnprInterfacesPfePortQstatsExt = &file_pfe_port_qstats_ext_proto_extTypes[0]
)

var File_pfe_port_qstats_ext_proto protoreflect.FileDescriptor

var file_pfe_port_qstats_ext_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x5f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xab, 0x05, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f,
	0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x49, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x5f, 0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0xc1, 0x04, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xc5, 0x03, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x60, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xd4, 0x02, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x70, 0x0a, 0x09, 0x6f, 0x75, 0x74,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x71, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6f, 0x75, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xd0, 0x01, 0x0a, 0x0e,
	0x6f, 0x75, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x64, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x10,
	0x6c, 0x70, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x6b, 0x74, 0x73,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6c, 0x70, 0x52, 0x65, 0x64, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x68, 0x70, 0x5f, 0x72, 0x65, 0x64, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x68, 0x70, 0x52, 0x65, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x3a, 0x82,
	0x01, 0x0a, 0x23, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18,
	0x85, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x1e, 0x6a, 0x6e, 0x70, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x50, 0x66, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65,
})

var (
	file_pfe_port_qstats_ext_proto_rawDescOnce sync.Once
	file_pfe_port_qstats_ext_proto_rawDescData []byte
)

func file_pfe_port_qstats_ext_proto_rawDescGZIP() []byte {
	file_pfe_port_qstats_ext_proto_rawDescOnce.Do(func() {
		file_pfe_port_qstats_ext_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pfe_port_qstats_ext_proto_rawDesc), len(file_pfe_port_qstats_ext_proto_rawDesc)))
	})
	return file_pfe_port_qstats_ext_proto_rawDescData
}

var file_pfe_port_qstats_ext_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pfe_port_qstats_ext_proto_goTypes = []any{
	(*InterfacesPfePortQstats)(nil),                                               // 0: interfaces_pfe_port_qstats
	(*InterfacesPfePortQstatsInterfaceList)(nil),                                  // 1: interfaces_pfe_port_qstats.interface_list
	(*InterfacesPfePortQstatsInterfaceListStateType)(nil),                         // 2: interfaces_pfe_port_qstats.interface_list.state_type
	(*InterfacesPfePortQstatsInterfaceListStateTypeCountersType)(nil),             // 3: interfaces_pfe_port_qstats.interface_list.state_type.counters_type
	(*InterfacesPfePortQstatsInterfaceListStateTypeCountersTypeOutQueueList)(nil), // 4: interfaces_pfe_port_qstats.interface_list.state_type.counters_type.out_queue_list
	(*JuniperNetworksSensors)(nil),                                                // 5: JuniperNetworksSensors
}
var file_pfe_port_qstats_ext_proto_depIdxs = []int32{
	1, // 0: interfaces_pfe_port_qstats.interface:type_name -> interfaces_pfe_port_qstats.interface_list
	2, // 1: interfaces_pfe_port_qstats.interface_list.state:type_name -> interfaces_pfe_port_qstats.interface_list.state_type
	3, // 2: interfaces_pfe_port_qstats.interface_list.state_type.counters:type_name -> interfaces_pfe_port_qstats.interface_list.state_type.counters_type
	4, // 3: interfaces_pfe_port_qstats.interface_list.state_type.counters_type.out_queue:type_name -> interfaces_pfe_port_qstats.interface_list.state_type.counters_type.out_queue_list
	5, // 4: jnpr_interfaces_pfe_port_qstats_ext:extendee -> JuniperNetworksSensors
	0, // 5: jnpr_interfaces_pfe_port_qstats_ext:type_name -> interfaces_pfe_port_qstats
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pfe_port_qstats_ext_proto_init() }
func file_pfe_port_qstats_ext_proto_init() {
	if File_pfe_port_qstats_ext_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pfe_port_qstats_ext_proto_rawDesc), len(file_pfe_port_qstats_ext_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_pfe_port_qstats_ext_proto_goTypes,
		DependencyIndexes: file_pfe_port_qstats_ext_proto_depIdxs,
		MessageInfos:      file_pfe_port_qstats_ext_proto_msgTypes,
		ExtensionInfos:    file_pfe_port_qstats_ext_proto_extTypes,
	}.Build()
	File_pfe_port_qstats_ext_proto = out.File
	file_pfe_port_qstats_ext_proto_goTypes = nil
	file_pfe_port_qstats_ext_proto_depIdxs = nil
}
