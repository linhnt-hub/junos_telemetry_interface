// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: rpd_bgp_rib_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BgpRibBgpRib struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	AfiSafis      *BgpRibBgpRibAfiSafisType `protobuf:"bytes,151,opt,name=afi_safis,json=afiSafis" json:"afi_safis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRib) Reset() {
	*x = BgpRibBgpRib{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRib) ProtoMessage() {}

func (x *BgpRibBgpRib) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRib.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRib) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0}
}

func (x *BgpRibBgpRib) GetAfiSafis() *BgpRibBgpRibAfiSafisType {
	if x != nil {
		return x.AfiSafis
	}
	return nil
}

type BgpRibBgpRibAfiSafisType struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	AfiSafi       []*BgpRibBgpRibAfiSafisTypeAfiSafiList `protobuf:"bytes,151,rep,name=afi_safi,json=afiSafi" json:"afi_safi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisType) Reset() {
	*x = BgpRibBgpRibAfiSafisType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BgpRibBgpRibAfiSafisType) GetAfiSafi() []*BgpRibBgpRibAfiSafisTypeAfiSafiList {
	if x != nil {
		return x.AfiSafi
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiList struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	AfiSafiName   *string                                             `protobuf:"bytes,52,opt,name=afi_safi_name,json=afiSafiName" json:"afi_safi_name,omitempty"`
	Ipv4Unicast   *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType `protobuf:"bytes,151,opt,name=ipv4_unicast,json=ipv4Unicast" json:"ipv4_unicast,omitempty"`
	Ipv6Unicast   *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType `protobuf:"bytes,153,opt,name=ipv6_unicast,json=ipv6Unicast" json:"ipv6_unicast,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiList) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiList) GetAfiSafiName() string {
	if x != nil && x.AfiSafiName != nil {
		return *x.AfiSafiName
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiList) GetIpv4Unicast() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType {
	if x != nil {
		return x.Ipv4Unicast
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiList) GetIpv6Unicast() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType {
	if x != nil {
		return x.Ipv6Unicast
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType struct {
	state         protoimpl.MessageState                                           `protogen:"open.v1"`
	LocRib        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType    `protobuf:"bytes,151,opt,name=loc_rib,json=locRib" json:"loc_rib,omitempty"`
	Neighbors     *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType `protobuf:"bytes,152,opt,name=neighbors" json:"neighbors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) GetLocRib() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType {
	if x != nil {
		return x.LocRib
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType) GetNeighbors() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType struct {
	state         protoimpl.MessageState                                           `protogen:"open.v1"`
	LocRib        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType    `protobuf:"bytes,151,opt,name=loc_rib,json=locRib" json:"loc_rib,omitempty"`
	Neighbors     *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType `protobuf:"bytes,152,opt,name=neighbors" json:"neighbors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) GetLocRib() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType {
	if x != nil {
		return x.LocRib
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType) GetNeighbors() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType struct {
	state         protoimpl.MessageState                                                  `protogen:"open.v1"`
	NumRoutes     *uint64                                                                 `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType struct {
	state         protoimpl.MessageState                                                         `protogen:"open.v1"`
	Neighbor      []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList `protobuf:"bytes,151,rep,name=neighbor" json:"neighbor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType) GetNeighbor() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType struct {
	state         protoimpl.MessageState                                                             `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                            `protogen:"open.v1"`
	Prefix             *string                                                                                           `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                           `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                           `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                             `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                           `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                             `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                       `protogen:"open.v1"`
	Origin        *string                                                                                                      `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                      `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                      `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                      `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                      `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                      `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                        `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                     `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                  `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                 `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                 `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                 `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList struct {
	state           protoimpl.MessageState                                                                        `protogen:"open.v1"`
	NeighborAddress *string                                                                                       `protobuf:"bytes,52,opt,name=neighbor_address,json=neighborAddress" json:"neighbor_address,omitempty"`
	AdjRibInPre     *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType   `protobuf:"bytes,151,opt,name=adj_rib_in_pre,json=adjRibInPre" json:"adj_rib_in_pre,omitempty"`
	AdjRibInPost    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType  `protobuf:"bytes,152,opt,name=adj_rib_in_post,json=adjRibInPost" json:"adj_rib_in_post,omitempty"`
	AdjRibOutPre    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType  `protobuf:"bytes,153,opt,name=adj_rib_out_pre,json=adjRibOutPre" json:"adj_rib_out_pre,omitempty"`
	AdjRibOutPost   *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType `protobuf:"bytes,154,opt,name=adj_rib_out_post,json=adjRibOutPost" json:"adj_rib_out_post,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) GetNeighborAddress() string {
	if x != nil && x.NeighborAddress != nil {
		return *x.NeighborAddress
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) GetAdjRibInPre() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType {
	if x != nil {
		return x.AdjRibInPre
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) GetAdjRibInPost() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType {
	if x != nil {
		return x.AdjRibInPost
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) GetAdjRibOutPre() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType {
	if x != nil {
		return x.AdjRibOutPre
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList) GetAdjRibOutPost() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType {
	if x != nil {
		return x.AdjRibOutPost
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType struct {
	state         protoimpl.MessageState                                                                                `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                               `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType struct {
	state         protoimpl.MessageState                                                                                 `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                                `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType struct {
	state         protoimpl.MessageState                                                                                 `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                                `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType struct {
	state         protoimpl.MessageState                                                                                  `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                                 `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                           `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                          `protogen:"open.v1"`
	Prefix             *string                                                                                                                         `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                         `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                         `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                           `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                         `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                           `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                     `protogen:"open.v1"`
	Origin        *string                                                                                                                                    `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                    `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                    `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                    `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                    `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                    `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                      `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                   `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                               `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                              `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                              `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                               `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                               `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                            `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                           `protogen:"open.v1"`
	Prefix             *string                                                                                                                          `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                          `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                          `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                            `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                          `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                            `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                      `protogen:"open.v1"`
	Origin        *string                                                                                                                                     `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                     `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                     `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                     `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                     `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                     `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                       `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                    `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                 `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                                `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                               `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                               `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                                `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                                `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                            `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                           `protogen:"open.v1"`
	Prefix             *string                                                                                                                          `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                          `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                          `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                            `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                          `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                            `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                      `protogen:"open.v1"`
	Origin        *string                                                                                                                                     `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                     `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                     `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                     `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                     `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                     `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                       `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                    `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                 `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                                `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                               `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                               `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                                `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                                `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                             `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                            `protogen:"open.v1"`
	Prefix             *string                                                                                                                           `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                           `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                           `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                             `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                           `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                             `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                       `protogen:"open.v1"`
	Origin        *string                                                                                                                                      `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                      `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                      `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                      `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                      `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                      `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                        `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                     `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                  `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                                 `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                                `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                                `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                                 `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                                 `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 1, 0, 3, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType struct {
	state         protoimpl.MessageState                                                  `protogen:"open.v1"`
	NumRoutes     *uint64                                                                 `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType struct {
	state         protoimpl.MessageState                                                         `protogen:"open.v1"`
	Neighbor      []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList `protobuf:"bytes,152,rep,name=neighbor" json:"neighbor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType) GetNeighbor() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType struct {
	state         protoimpl.MessageState                                                             `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                            `protogen:"open.v1"`
	Prefix             *string                                                                                           `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                           `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                           `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                             `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                           `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                             `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                       `protogen:"open.v1"`
	Origin        *string                                                                                                      `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                      `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                      `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                      `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                      `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                      `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                        `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                     `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                  `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                 `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                 `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                 `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList struct {
	state           protoimpl.MessageState                                                                        `protogen:"open.v1"`
	NeighborAddress *string                                                                                       `protobuf:"bytes,52,opt,name=neighbor_address,json=neighborAddress" json:"neighbor_address,omitempty"`
	AdjRibInPre     *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType   `protobuf:"bytes,151,opt,name=adj_rib_in_pre,json=adjRibInPre" json:"adj_rib_in_pre,omitempty"`
	AdjRibInPost    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType  `protobuf:"bytes,152,opt,name=adj_rib_in_post,json=adjRibInPost" json:"adj_rib_in_post,omitempty"`
	AdjRibOutPre    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType  `protobuf:"bytes,153,opt,name=adj_rib_out_pre,json=adjRibOutPre" json:"adj_rib_out_pre,omitempty"`
	AdjRibOutPost   *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType `protobuf:"bytes,154,opt,name=adj_rib_out_post,json=adjRibOutPost" json:"adj_rib_out_post,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) ProtoMessage() {}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) GetNeighborAddress() string {
	if x != nil && x.NeighborAddress != nil {
		return *x.NeighborAddress
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) GetAdjRibInPre() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType {
	if x != nil {
		return x.AdjRibInPre
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) GetAdjRibInPost() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType {
	if x != nil {
		return x.AdjRibInPost
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) GetAdjRibOutPre() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType {
	if x != nil {
		return x.AdjRibOutPre
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList) GetAdjRibOutPost() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType {
	if x != nil {
		return x.AdjRibOutPost
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType struct {
	state         protoimpl.MessageState                                                                                `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                               `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType struct {
	state         protoimpl.MessageState                                                                                 `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                                `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType struct {
	state         protoimpl.MessageState                                                                                 `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                                `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType struct {
	state         protoimpl.MessageState                                                                                  `protogen:"open.v1"`
	NumRoutes     *uint64                                                                                                 `protobuf:"varint,51,opt,name=num_routes,json=numRoutes" json:"num_routes,omitempty"`
	Routes        *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType `protobuf:"bytes,151,opt,name=routes" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) GetNumRoutes() uint64 {
	if x != nil && x.NumRoutes != nil {
		return *x.NumRoutes
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType) GetRoutes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType {
	if x != nil {
		return x.Routes
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                           `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                          `protogen:"open.v1"`
	Prefix             *string                                                                                                                         `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                         `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                         `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                           `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                         `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                           `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                     `protogen:"open.v1"`
	Origin        *string                                                                                                                                    `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                    `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                    `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                    `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                    `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                    `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                      `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                   `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                               `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                              `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                              `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                               `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                               `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                            `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                           `protogen:"open.v1"`
	Prefix             *string                                                                                                                          `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                          `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                          `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                            `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                          `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                            `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                      `protogen:"open.v1"`
	Origin        *string                                                                                                                                     `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                     `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                     `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                     `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                     `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                     `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                       `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                    `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                 `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                                `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                               `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                               `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                                `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                                `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                            `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                           `protogen:"open.v1"`
	Prefix             *string                                                                                                                          `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                          `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                          `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                            `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                          `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                            `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                      `protogen:"open.v1"`
	Origin        *string                                                                                                                                     `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                     `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                     `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                     `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                     `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                     `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                       `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                    `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                 `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                                `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                               `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                               `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                                `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                                `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 2, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType struct {
	state         protoimpl.MessageState                                                                                             `protogen:"open.v1"`
	Route         []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList `protobuf:"bytes,151,rep,name=route" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType) GetRoute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList {
	if x != nil {
		return x.Route
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList struct {
	state              protoimpl.MessageState                                                                                                            `protogen:"open.v1"`
	Prefix             *string                                                                                                                           `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Attributes         *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType    `protobuf:"bytes,152,opt,name=attributes" json:"attributes,omitempty"`
	ExtAttributes      *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType `protobuf:"bytes,151,opt,name=ext_attributes,json=extAttributes" json:"ext_attributes,omitempty"`
	LastModifiedDate   *string                                                                                                                           `protobuf:"bytes,61,opt,name=last_modified_date,json=lastModifiedDate" json:"last_modified_date,omitempty"`
	LastUpdateReceived *string                                                                                                                           `protobuf:"bytes,62,opt,name=last_update_received,json=lastUpdateReceived" json:"last_update_received,omitempty"`
	ValidRoute         *bool                                                                                                                             `protobuf:"varint,63,opt,name=valid_route,json=validRoute" json:"valid_route,omitempty"`
	InvalidReason      *string                                                                                                                           `protobuf:"bytes,64,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	BestPath           *bool                                                                                                                             `protobuf:"varint,65,opt,name=best_path,json=bestPath" json:"best_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetExtAttributes() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType {
	if x != nil {
		return x.ExtAttributes
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetLastModifiedDate() string {
	if x != nil && x.LastModifiedDate != nil {
		return *x.LastModifiedDate
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetLastUpdateReceived() string {
	if x != nil && x.LastUpdateReceived != nil {
		return *x.LastUpdateReceived
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetValidRoute() bool {
	if x != nil && x.ValidRoute != nil {
		return *x.ValidRoute
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetInvalidReason() string {
	if x != nil && x.InvalidReason != nil {
		return *x.InvalidReason
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList) GetBestPath() bool {
	if x != nil && x.BestPath != nil {
		return *x.BestPath
	}
	return false
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType struct {
	state         protoimpl.MessageState                                                                                                                       `protogen:"open.v1"`
	Origin        *string                                                                                                                                      `protobuf:"bytes,51,opt,name=origin" json:"origin,omitempty"`
	AsPath        *string                                                                                                                                      `protobuf:"bytes,52,opt,name=as_path,json=asPath" json:"as_path,omitempty"`
	As4Path       *string                                                                                                                                      `protobuf:"bytes,53,opt,name=as4_path,json=as4Path" json:"as4_path,omitempty"`
	NextHop       *string                                                                                                                                      `protobuf:"bytes,54,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	Med           *uint32                                                                                                                                      `protobuf:"varint,55,opt,name=med" json:"med,omitempty"`
	LocalPref     *uint32                                                                                                                                      `protobuf:"varint,56,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	AtomicAggr    *bool                                                                                                                                        `protobuf:"varint,57,opt,name=atomic_aggr,json=atomicAggr" json:"atomic_aggr,omitempty"`
	Aggregator    *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType `protobuf:"bytes,151,opt,name=aggregator" json:"aggregator,omitempty"`
	Community     []string                                                                                                                                     `protobuf:"bytes,152,rep,name=community" json:"community,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAsPath() string {
	if x != nil && x.AsPath != nil {
		return *x.AsPath
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAs4Path() string {
	if x != nil && x.As4Path != nil {
		return *x.As4Path
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetNextHop() string {
	if x != nil && x.NextHop != nil {
		return *x.NextHop
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetMed() uint32 {
	if x != nil && x.Med != nil {
		return *x.Med
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetLocalPref() uint32 {
	if x != nil && x.LocalPref != nil {
		return *x.LocalPref
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAtomicAggr() bool {
	if x != nil && x.AtomicAggr != nil {
		return *x.AtomicAggr
	}
	return false
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetAggregator() *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType {
	if x != nil {
		return x.Aggregator
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType) GetCommunity() []string {
	if x != nil {
		return x.Community
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType struct {
	state            protoimpl.MessageState                                                                                                                                  `protogen:"open.v1"`
	OriginatorId     *string                                                                                                                                                 `protobuf:"bytes,51,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList      []string                                                                                                                                                `protobuf:"bytes,52,rep,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	ExtCommunity     []string                                                                                                                                                `protobuf:"bytes,53,rep,name=ext_community,json=extCommunity" json:"ext_community,omitempty"`
	Aigp             *uint64                                                                                                                                                 `protobuf:"varint,54,opt,name=aigp" json:"aigp,omitempty"`
	PathId           *uint32                                                                                                                                                 `protobuf:"varint,55,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	UnknownAttribute []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList `protobuf:"bytes,151,rep,name=unknown_attribute,json=unknownAttribute" json:"unknown_attribute,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3, 0, 0, 1}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetOriginatorId() string {
	if x != nil && x.OriginatorId != nil {
		return *x.OriginatorId
	}
	return ""
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetClusterList() []string {
	if x != nil {
		return x.ClusterList
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetExtCommunity() []string {
	if x != nil {
		return x.ExtCommunity
	}
	return nil
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetAigp() uint64 {
	if x != nil && x.Aigp != nil {
		return *x.Aigp
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType) GetUnknownAttribute() []*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList {
	if x != nil {
		return x.UnknownAttribute
	}
	return nil
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	As            *uint32                `protobuf:"varint,58,opt,name=as" json:"as,omitempty"`
	As4           *uint32                `protobuf:"varint,59,opt,name=as4" json:"as4,omitempty"`
	Address       *string                `protobuf:"bytes,60,opt,name=address" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3, 0, 0, 0, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs() uint32 {
	if x != nil && x.As != nil {
		return *x.As
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAs4() uint32 {
	if x != nil && x.As4 != nil {
		return *x.As4
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttrType      *uint32                `protobuf:"varint,57,opt,name=attr_type,json=attrType" json:"attr_type,omitempty"`
	AttrLen       *uint32                `protobuf:"varint,58,opt,name=attr_len,json=attrLen" json:"attr_len,omitempty"`
	AttrValue     *string                `protobuf:"bytes,59,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Reset() {
	*x = BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList{}
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoMessage() {
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) ProtoReflect() protoreflect.Message {
	mi := &file_rpd_bgp_rib_oc_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList.ProtoReflect.Descriptor instead.
func (*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) Descriptor() ([]byte, []int) {
	return file_rpd_bgp_rib_oc_proto_rawDescGZIP(), []int{0, 0, 0, 1, 1, 0, 3, 0, 0, 1, 0}
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrType() uint32 {
	if x != nil && x.AttrType != nil {
		return *x.AttrType
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrLen() uint32 {
	if x != nil && x.AttrLen != nil {
		return *x.AttrLen
	}
	return 0
}

func (x *BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList) GetAttrValue() string {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return ""
}

var file_rpd_bgp_rib_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*BgpRibBgpRib)(nil),
		Field:         63,
		Name:          "jnpr_bgp_rib_bgp_rib_ext",
		Tag:           "bytes,63,opt,name=jnpr_bgp_rib_bgp_rib_ext",
		Filename:      "rpd_bgp_rib_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional bgp_rib_bgp_rib jnpr_bgp_rib_bgp_rib_ext = 63;
	E_JnprBgpRibBgpRibExt = &file_rpd_bgp_rib_oc_proto_extTypes[0]
)

var File_rpd_bgp_rib_oc_proto protoreflect.FileDescriptor

var file_rpd_bgp_rib_oc_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x72, 0x70, 0x64, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0xb1, 0x01, 0x0a,
	0x0f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x12, 0x3d, 0x0a, 0x09, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x61, 0x66, 0x69, 0x53, 0x61, 0x66, 0x69, 0x73, 0x1a,
	0xe3, 0xb0, 0x01, 0x0a, 0x0e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x18,
	0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x66, 0x69, 0x53, 0x61, 0x66, 0x69, 0x1a, 0x84,
	0xb0, 0x01, 0x0a, 0x0d, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x0d, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52,
	0x0b, 0x61, 0x66, 0x69, 0x53, 0x61, 0x66, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x63, 0x0a, 0x0c,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x63, 0x0a, 0x0c, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x55,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x1a, 0xfd, 0x56, 0x0a, 0x11, 0x69, 0x70, 0x76, 0x34, 0x5f,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x07,
	0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x52, 0x69, 0x62, 0x12, 0x6d, 0x0a, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x1a, 0x9e, 0x0e, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x71, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xfb, 0x0c, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x7a, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18,
	0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x1a, 0xef, 0x0b, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x94, 0x01, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x73, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69,
	0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69,
	0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x9f, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x77, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0xe0, 0x03, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48,
	0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50,
	0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63,
	0x41, 0x67, 0x67, 0x72, 0x12, 0xa5, 0x01, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x83, 0x01, 0x2e, 0x62, 0x67,
	0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66,
	0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x61, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x73, 0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xe7, 0x03, 0x0a, 0x13, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61,
	0x69, 0x67, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xbd, 0x01, 0x0a,
	0x11, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x8e, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x76, 0x0a, 0x16,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01,
	0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74,
	0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74,
	0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xef, 0x46, 0x0a, 0x0e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x1a, 0xe1, 0x45, 0x0a, 0x0d, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x10, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x0e, 0x61, 0x64, 0x6a, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x70, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x52, 0x69, 0x62, 0x49, 0x6e, 0x50, 0x72, 0x65, 0x12,
	0x99, 0x01, 0x0a, 0x0f, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x71, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61,
	0x64, 0x6a, 0x52, 0x69, 0x62, 0x49, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x0f,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x18,
	0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x71, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x52, 0x69,
	0x62, 0x4f, 0x75, 0x74, 0x50, 0x72, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x10, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x9a, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x64, 0x6a, 0x52, 0x69, 0x62, 0x4f,
	0x75, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x82, 0x10, 0x0a, 0x13, 0x61, 0x64, 0x6a, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x95, 0x01,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x7c, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69,
	0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69,
	0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64,
	0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xb3, 0x0e, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18,
	0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x87, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69,
	0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x81, 0x0d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0xb9,
	0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x98, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x97, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0xc4, 0x01, 0x0a, 0x0e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x9b, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x84, 0x04, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68,
	0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72,
	0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67, 0x67,
	0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x12, 0xc9, 0x01, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0xa7, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d,
	0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x61, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8b, 0x04,
	0x0a, 0x13, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x61, 0x69, 0x67, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12,
	0xe1, 0x01, 0x0a, 0x11, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb2, 0x01, 0x2e,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x1a, 0x76, 0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x89, 0x10, 0x0a, 0x14,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7d, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xb8, 0x0e, 0x0a,
	0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa0, 0x01, 0x0a,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x88, 0x01,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a,
	0x85, 0x0d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0xba, 0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x98, 0x01, 0x2e,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0xc5, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9c, 0x01,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x1a, 0x85, 0x04, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x12, 0xca, 0x01,
	0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0xa8, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x61, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x73, 0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8c, 0x04, 0x0a, 0x13, 0x65, 0x78, 0x74,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x69, 0x67,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xe2, 0x01, 0x0a, 0x11, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb3, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69,
	0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a,
	0x76, 0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40,
	0x02, 0x08, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x74, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x89, 0x10, 0x0a, 0x14, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x96, 0x01, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x7d, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xb8, 0x0e, 0x0a, 0x0b, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x88, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x85, 0x0d, 0x0a, 0x0a,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0xba, 0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x98, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0xc5, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9c, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x85, 0x04, 0x0a,
	0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d,
	0x69, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x12, 0xca, 0x01, 0x0a, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0xa8, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x34, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x8c, 0x04, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x69, 0x67,
	0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x69, 0x67, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xe2, 0x01, 0x0a, 0x11, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0xb3, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x76, 0x0a, 0x16, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52,
	0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x90, 0x10, 0x0a, 0x15, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x97, 0x01, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xbd, 0x0e, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x89, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x89, 0x0d, 0x0a, 0x0a, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0xbb, 0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x99, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0xc6, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9d, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x86, 0x04,
	0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x12, 0xcb, 0x01, 0x0a, 0x0a, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0xa9, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73,
	0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73,
	0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8d, 0x04, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x69, 0x67, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xe3, 0x01, 0x0a, 0x11, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x97,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb4, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x34, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x76,
	0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x74, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xfd, 0x56, 0x0a, 0x11, 0x69, 0x70, 0x76, 0x36, 0x5f,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x07,
	0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x52, 0x69, 0x62, 0x12, 0x6d, 0x0a, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x1a, 0x9e, 0x0e, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x71, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xfb, 0x0c, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x7a, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18,
	0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x1a, 0xef, 0x0b, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x94, 0x01, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x73, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69,
	0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6c, 0x6f, 0x63, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x9f, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x77, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0xe0, 0x03, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48,
	0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50,
	0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63,
	0x41, 0x67, 0x67, 0x72, 0x12, 0xa5, 0x01, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x83, 0x01, 0x2e, 0x62, 0x67,
	0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66,
	0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x61, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x73, 0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xe7, 0x03, 0x0a, 0x13, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61,
	0x69, 0x67, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xbd, 0x01, 0x0a,
	0x11, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x8e, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x76, 0x0a, 0x16,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01,
	0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74,
	0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74,
	0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xef, 0x46, 0x0a, 0x0e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x1a, 0xe1, 0x45, 0x0a, 0x0d, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x10, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x0e, 0x61, 0x64, 0x6a, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x70, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x52, 0x69, 0x62, 0x49, 0x6e, 0x50, 0x72, 0x65, 0x12,
	0x99, 0x01, 0x0a, 0x0f, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x71, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61,
	0x64, 0x6a, 0x52, 0x69, 0x62, 0x49, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x0f,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x18,
	0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x71, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x52, 0x69,
	0x62, 0x4f, 0x75, 0x74, 0x50, 0x72, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x10, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x9a, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x72, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67,
	0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x64, 0x6a, 0x52, 0x69, 0x62, 0x4f,
	0x75, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x82, 0x10, 0x0a, 0x13, 0x61, 0x64, 0x6a, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x95, 0x01,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x7c, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69,
	0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64,
	0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xb3, 0x0e, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18,
	0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x87, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69,
	0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x81, 0x0d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0xb9,
	0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x98, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x97, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0xc4, 0x01, 0x0a, 0x0e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x9b, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x84, 0x04, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68,
	0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72,
	0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67, 0x67,
	0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x12, 0xc9, 0x01, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0xa7, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d,
	0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x61, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8b, 0x04,
	0x0a, 0x13, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x61, 0x69, 0x67, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12,
	0xe1, 0x01, 0x0a, 0x11, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb2, 0x01, 0x2e,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76,
	0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x1a, 0x76, 0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x89, 0x10, 0x0a, 0x14,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7d, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xb8, 0x0e, 0x0a,
	0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa0, 0x01, 0x0a,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x88, 0x01,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a,
	0x85, 0x0d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0xba, 0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x98, 0x01, 0x2e,
	0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76,
	0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0xc5, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9c, 0x01,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x1a, 0x85, 0x04, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x12, 0xca, 0x01,
	0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0xa8, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x61, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x73, 0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8c, 0x04, 0x0a, 0x13, 0x65, 0x78, 0x74,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x69, 0x67,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xe2, 0x01, 0x0a, 0x11, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb3, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x69,
	0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a,
	0x76, 0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40,
	0x02, 0x08, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x74, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x89, 0x10, 0x0a, 0x14, 0x61, 0x64, 0x6a, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x96, 0x01, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x7d, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xb8, 0x0e, 0x0a, 0x0b, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x88, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x85, 0x0d, 0x0a, 0x0a,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0xba, 0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x98, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0xc5, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9c, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x85, 0x04, 0x0a,
	0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f, 0x6d,
	0x69, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x12, 0xca, 0x01, 0x0a, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0xa8, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61,
	0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x34, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x8c, 0x04, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x69, 0x67,
	0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x69, 0x67, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xe2, 0x01, 0x0a, 0x11, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0xb3, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x76, 0x0a, 0x16, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52,
	0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x90, 0x10, 0x0a, 0x15, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x97, 0x01, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7e,
	0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70,
	0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xbd, 0x0e, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x89, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x89, 0x0d, 0x0a, 0x0a, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0xbb, 0x01, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x99, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72,
	0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73,
	0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61,
	0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0xc6, 0x01, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x9d, 0x01, 0x2e, 0x62, 0x67, 0x70,
	0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69,
	0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f,
	0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x3d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x41, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x86, 0x04,
	0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x34, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x34, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x64, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x41, 0x67, 0x67, 0x72, 0x12, 0xcb, 0x01, 0x0a, 0x0a, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0xa9, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x98, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x4d, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x73,
	0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73,
	0x34, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x73, 0x34, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x8d, 0x04, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x35, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x69, 0x67, 0x70, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x69, 0x67, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0xe3, 0x01, 0x0a, 0x11, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x97,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb4, 0x01, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62,
	0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66,
	0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x66, 0x69, 0x5f, 0x73, 0x61, 0x66, 0x69,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x61, 0x64, 0x6a, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x76,
	0x0a, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x74, 0x74, 0x72, 0x4c, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x60, 0x0a, 0x18, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x62,
	0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x65,
	0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x3f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x67, 0x70, 0x5f, 0x72, 0x69, 0x62, 0x5f, 0x62, 0x67, 0x70, 0x5f,
	0x72, 0x69, 0x62, 0x52, 0x13, 0x6a, 0x6e, 0x70, 0x72, 0x42, 0x67, 0x70, 0x52, 0x69, 0x62, 0x42,
	0x67, 0x70, 0x52, 0x69, 0x62, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_rpd_bgp_rib_oc_proto_rawDescOnce sync.Once
	file_rpd_bgp_rib_oc_proto_rawDescData []byte
)

func file_rpd_bgp_rib_oc_proto_rawDescGZIP() []byte {
	file_rpd_bgp_rib_oc_proto_rawDescOnce.Do(func() {
		file_rpd_bgp_rib_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpd_bgp_rib_oc_proto_rawDesc), len(file_rpd_bgp_rib_oc_proto_rawDesc)))
	})
	return file_rpd_bgp_rib_oc_proto_rawDescData
}

var file_rpd_bgp_rib_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 79)
var file_rpd_bgp_rib_oc_proto_goTypes = []any{
	(*BgpRibBgpRib)(nil),                                                                                                                                         // 0: bgp_rib_bgp_rib
	(*BgpRibBgpRibAfiSafisType)(nil),                                                                                                                             // 1: bgp_rib_bgp_rib.afi_safis_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiList)(nil),                                                                                                                  // 2: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastType)(nil),                                                                                                   // 3: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastType)(nil),                                                                                                   // 4: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibType)(nil),                                                                                         // 5: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsType)(nil),                                                                                      // 6: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesType)(nil),                                                                               // 7: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteList)(nil),                                                                      // 8: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType)(nil),                                                        // 9: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType)(nil),                                                     // 10: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),                                          // 11: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),                                 // 12: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborList)(nil),                                                                          // 13: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreType)(nil),                                                           // 14: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostType)(nil),                                                          // 15: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType)(nil),                                                          // 16: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType)(nil),                                                         // 17: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType)(nil),                                                 // 18: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList)(nil),                                        // 19: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType)(nil),                          // 20: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType)(nil),                       // 21: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),            // 22: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),   // 23: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType)(nil),                                                // 24: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList)(nil),                                       // 25: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType)(nil),                         // 26: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType)(nil),                      // 27: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),           // 28: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),  // 29: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType)(nil),                                                // 30: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList)(nil),                                       // 31: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType)(nil),                         // 32: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType)(nil),                      // 33: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),           // 34: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),  // 35: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType)(nil),                                               // 36: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList)(nil),                                      // 37: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType)(nil),                        // 38: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType)(nil),                     // 39: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),          // 40: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv4UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil), // 41: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibType)(nil),                                                                                         // 42: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsType)(nil),                                                                                      // 43: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesType)(nil),                                                                               // 44: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteList)(nil),                                                                      // 45: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesType)(nil),                                                        // 46: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesType)(nil),                                                     // 47: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),                                          // 48: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeLocRibTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),                                 // 49: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborList)(nil),                                                                          // 50: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreType)(nil),                                                           // 51: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostType)(nil),                                                          // 52: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreType)(nil),                                                          // 53: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostType)(nil),                                                         // 54: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesType)(nil),                                                 // 55: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteList)(nil),                                        // 56: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesType)(nil),                          // 57: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesType)(nil),                       // 58: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),            // 59: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),   // 60: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesType)(nil),                                                // 61: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteList)(nil),                                       // 62: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesType)(nil),                         // 63: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesType)(nil),                      // 64: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),           // 65: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibInPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),  // 66: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesType)(nil),                                                // 67: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteList)(nil),                                       // 68: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesType)(nil),                         // 69: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesType)(nil),                      // 70: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),           // 71: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPreTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil),  // 72: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesType)(nil),                                               // 73: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteList)(nil),                                      // 74: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesType)(nil),                        // 75: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesType)(nil),                     // 76: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListAttributesTypeAggregatorType)(nil),          // 77: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type.aggregator_type
	(*BgpRibBgpRibAfiSafisTypeAfiSafiListIpv6UnicastTypeNeighborsTypeNeighborListAdjRibOutPostTypeRoutesTypeRouteListExtAttributesTypeUnknownAttributeList)(nil), // 78: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	(*JuniperNetworksSensors)(nil), // 79: JuniperNetworksSensors
}
var file_rpd_bgp_rib_oc_proto_depIdxs = []int32{
	1,  // 0: bgp_rib_bgp_rib.afi_safis:type_name -> bgp_rib_bgp_rib.afi_safis_type
	2,  // 1: bgp_rib_bgp_rib.afi_safis_type.afi_safi:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list
	3,  // 2: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type
	4,  // 3: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type
	5,  // 4: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type
	6,  // 5: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type
	42, // 6: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type
	43, // 7: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type
	7,  // 8: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type
	13, // 9: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list
	8,  // 10: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list
	9,  // 11: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.attributes_type
	10, // 12: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type
	11, // 13: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.attributes_type.aggregator_type
	12, // 14: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	14, // 15: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type
	15, // 16: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type
	16, // 17: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type
	17, // 18: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type
	18, // 19: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type
	24, // 20: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type
	30, // 21: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type
	36, // 22: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type
	19, // 23: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list
	20, // 24: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type
	21, // 25: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type
	22, // 26: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type.aggregator_type
	23, // 27: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	25, // 28: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list
	26, // 29: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type
	27, // 30: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type
	28, // 31: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type.aggregator_type
	29, // 32: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	31, // 33: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list
	32, // 34: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type
	33, // 35: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type
	34, // 36: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type.aggregator_type
	35, // 37: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	37, // 38: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list
	38, // 39: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type
	39, // 40: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type
	40, // 41: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type.aggregator_type
	41, // 42: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv4_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	44, // 43: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type
	50, // 44: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list
	45, // 45: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list
	46, // 46: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.attributes_type
	47, // 47: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type
	48, // 48: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.attributes_type.aggregator_type
	49, // 49: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.loc_rib_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	51, // 50: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type
	52, // 51: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type
	53, // 52: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type
	54, // 53: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type
	55, // 54: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type
	61, // 55: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type
	67, // 56: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type
	73, // 57: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type
	56, // 58: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list
	57, // 59: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type
	58, // 60: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type
	59, // 61: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.attributes_type.aggregator_type
	60, // 62: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	62, // 63: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list
	63, // 64: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type
	64, // 65: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type
	65, // 66: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.attributes_type.aggregator_type
	66, // 67: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_in_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	68, // 68: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list
	69, // 69: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type
	70, // 70: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type
	71, // 71: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.attributes_type.aggregator_type
	72, // 72: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_pre_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	74, // 73: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list
	75, // 74: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type
	76, // 75: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type
	77, // 76: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type.aggregator:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.attributes_type.aggregator_type
	78, // 77: bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute:type_name -> bgp_rib_bgp_rib.afi_safis_type.afi_safi_list.ipv6_unicast_type.neighbors_type.neighbor_list.adj_rib_out_post_type.routes_type.route_list.ext_attributes_type.unknown_attribute_list
	79, // 78: jnpr_bgp_rib_bgp_rib_ext:extendee -> JuniperNetworksSensors
	0,  // 79: jnpr_bgp_rib_bgp_rib_ext:type_name -> bgp_rib_bgp_rib
	80, // [80:80] is the sub-list for method output_type
	80, // [80:80] is the sub-list for method input_type
	79, // [79:80] is the sub-list for extension type_name
	78, // [78:79] is the sub-list for extension extendee
	0,  // [0:78] is the sub-list for field type_name
}

func init() { file_rpd_bgp_rib_oc_proto_init() }
func file_rpd_bgp_rib_oc_proto_init() {
	if File_rpd_bgp_rib_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpd_bgp_rib_oc_proto_rawDesc), len(file_rpd_bgp_rib_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   79,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_rpd_bgp_rib_oc_proto_goTypes,
		DependencyIndexes: file_rpd_bgp_rib_oc_proto_depIdxs,
		MessageInfos:      file_rpd_bgp_rib_oc_proto_msgTypes,
		ExtensionInfos:    file_rpd_bgp_rib_oc_proto_extTypes,
	}.Build()
	File_rpd_bgp_rib_oc_proto = out.File
	file_rpd_bgp_rib_oc_proto_goTypes = nil
	file_rpd_bgp_rib_oc_proto_depIdxs = nil
}
