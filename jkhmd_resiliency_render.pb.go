// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: jkhmd_resiliency_render.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosKernel struct {
	state             protoimpl.MessageState            `protogen:"open.v1"`
	ExceptionProfiles *JunosKernelExceptionProfilesType `protobuf:"bytes,151,opt,name=exception_profiles,json=exceptionProfiles" json:"exception_profiles,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *JunosKernel) Reset() {
	*x = JunosKernel{}
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosKernel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosKernel) ProtoMessage() {}

func (x *JunosKernel) ProtoReflect() protoreflect.Message {
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosKernel.ProtoReflect.Descriptor instead.
func (*JunosKernel) Descriptor() ([]byte, []int) {
	return file_jkhmd_resiliency_render_proto_rawDescGZIP(), []int{0}
}

func (x *JunosKernel) GetExceptionProfiles() *JunosKernelExceptionProfilesType {
	if x != nil {
		return x.ExceptionProfiles
	}
	return nil
}

type JunosKernelExceptionProfilesType struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	OsProfile     *JunosKernelExceptionProfilesTypeOsProfileType `protobuf:"bytes,152,opt,name=os_profile,json=osProfile" json:"os_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosKernelExceptionProfilesType) Reset() {
	*x = JunosKernelExceptionProfilesType{}
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosKernelExceptionProfilesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosKernelExceptionProfilesType) ProtoMessage() {}

func (x *JunosKernelExceptionProfilesType) ProtoReflect() protoreflect.Message {
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosKernelExceptionProfilesType.ProtoReflect.Descriptor instead.
func (*JunosKernelExceptionProfilesType) Descriptor() ([]byte, []int) {
	return file_jkhmd_resiliency_render_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosKernelExceptionProfilesType) GetOsProfile() *JunosKernelExceptionProfilesTypeOsProfileType {
	if x != nil {
		return x.OsProfile
	}
	return nil
}

type JunosKernelExceptionProfilesTypeOsProfileType struct {
	state              protoimpl.MessageState                                               `protogen:"open.v1"`
	IncidentDescriptor *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType `protobuf:"bytes,151,opt,name=incident_descriptor,json=incidentDescriptor" json:"incident_descriptor,omitempty"`
	ExceptionType      *string                                                              `protobuf:"bytes,52,opt,name=exception_type,json=exceptionType" json:"exception_type,omitempty"`
	ExceptionOwner     *string                                                              `protobuf:"bytes,53,opt,name=exception_owner,json=exceptionOwner" json:"exception_owner,omitempty"`
	OsCounters         *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType         `protobuf:"bytes,152,opt,name=os_counters,json=osCounters" json:"os_counters,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) Reset() {
	*x = JunosKernelExceptionProfilesTypeOsProfileType{}
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosKernelExceptionProfilesTypeOsProfileType) ProtoMessage() {}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) ProtoReflect() protoreflect.Message {
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosKernelExceptionProfilesTypeOsProfileType.ProtoReflect.Descriptor instead.
func (*JunosKernelExceptionProfilesTypeOsProfileType) Descriptor() ([]byte, []int) {
	return file_jkhmd_resiliency_render_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) GetIncidentDescriptor() *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType {
	if x != nil {
		return x.IncidentDescriptor
	}
	return nil
}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) GetExceptionType() string {
	if x != nil && x.ExceptionType != nil {
		return *x.ExceptionType
	}
	return ""
}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) GetExceptionOwner() string {
	if x != nil && x.ExceptionOwner != nil {
		return *x.ExceptionOwner
	}
	return ""
}

func (x *JunosKernelExceptionProfilesTypeOsProfileType) GetOsCounters() *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType {
	if x != nil {
		return x.OsCounters
	}
	return nil
}

type JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExceptionCode *string                `protobuf:"bytes,52,opt,name=exception_code,json=exceptionCode" json:"exception_code,omitempty"`
	Description   *string                `protobuf:"bytes,53,opt,name=description" json:"description,omitempty"`
	HostId        *string                `protobuf:"bytes,54,opt,name=host_id,json=hostId" json:"host_id,omitempty"`
	ResourceId    *string                `protobuf:"bytes,55,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Timestamp     *uint64                `protobuf:"varint,56,opt,name=timestamp" json:"timestamp,omitempty"`
	Id            *uint64                `protobuf:"varint,51,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) Reset() {
	*x = JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType{}
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) ProtoMessage() {}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) ProtoReflect() protoreflect.Message {
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType.ProtoReflect.Descriptor instead.
func (*JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) Descriptor() ([]byte, []int) {
	return file_jkhmd_resiliency_render_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) GetExceptionCode() string {
	if x != nil && x.ExceptionCode != nil {
		return *x.ExceptionCode
	}
	return ""
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) GetHostId() string {
	if x != nil && x.HostId != nil {
		return *x.HostId
	}
	return ""
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	IsrsLowOnMbufClusters        *uint32                `protobuf:"varint,51,opt,name=isrs_low_on_mbuf_clusters,json=isrsLowOnMbufClusters" json:"isrs_low_on_mbuf_clusters,omitempty"`
	IsrsMbufAllocFailures        *uint64                `protobuf:"varint,52,opt,name=isrs_mbuf_alloc_failures,json=isrsMbufAllocFailures" json:"isrs_mbuf_alloc_failures,omitempty"`
	IsrsMbufClusterAllocFailures *uint64                `protobuf:"varint,53,opt,name=isrs_mbuf_cluster_alloc_failures,json=isrsMbufClusterAllocFailures" json:"isrs_mbuf_cluster_alloc_failures,omitempty"`
	NwQueueDropsEther            *uint32                `protobuf:"varint,54,opt,name=nw_queue_drops_ether,json=nwQueueDropsEther" json:"nw_queue_drops_ether,omitempty"`
	NwQueueDropsIp               *uint32                `protobuf:"varint,55,opt,name=nw_queue_drops_ip,json=nwQueueDropsIp" json:"nw_queue_drops_ip,omitempty"`
	NwQueueDropsIpv6             *uint32                `protobuf:"varint,56,opt,name=nw_queue_drops_ipv6,json=nwQueueDropsIpv6" json:"nw_queue_drops_ipv6,omitempty"`
	NwQueueDropsArp              *uint32                `protobuf:"varint,57,opt,name=nw_queue_drops_arp,json=nwQueueDropsArp" json:"nw_queue_drops_arp,omitempty"`
	NwQueueDropsBgp              *uint64                `protobuf:"varint,58,opt,name=nw_queue_drops_bgp,json=nwQueueDropsBgp" json:"nw_queue_drops_bgp,omitempty"`
	NwQueueDropsOspf             *uint64                `protobuf:"varint,59,opt,name=nw_queue_drops_ospf,json=nwQueueDropsOspf" json:"nw_queue_drops_ospf,omitempty"`
	NwQueueDropsRsvp             *uint64                `protobuf:"varint,60,opt,name=nw_queue_drops_rsvp,json=nwQueueDropsRsvp" json:"nw_queue_drops_rsvp,omitempty"`
	NwQueueDropsIsis             *uint64                `protobuf:"varint,61,opt,name=nw_queue_drops_isis,json=nwQueueDropsIsis" json:"nw_queue_drops_isis,omitempty"`
	NwQueueDropsMpls             *uint64                `protobuf:"varint,62,opt,name=nw_queue_drops_mpls,json=nwQueueDropsMpls" json:"nw_queue_drops_mpls,omitempty"`
	NwQueueDropsTcp              *uint64                `protobuf:"varint,63,opt,name=nw_queue_drops_tcp,json=nwQueueDropsTcp" json:"nw_queue_drops_tcp,omitempty"`
	NwQueueDropsUdp              *uint64                `protobuf:"varint,64,opt,name=nw_queue_drops_udp,json=nwQueueDropsUdp" json:"nw_queue_drops_udp,omitempty"`
	NwQueueDropsIcmp             *uint64                `protobuf:"varint,65,opt,name=nw_queue_drops_icmp,json=nwQueueDropsIcmp" json:"nw_queue_drops_icmp,omitempty"`
	NwQueueDropsIcmp6            *uint64                `protobuf:"varint,66,opt,name=nw_queue_drops_icmp6,json=nwQueueDropsIcmp6" json:"nw_queue_drops_icmp6,omitempty"`
	NwQueueDropsTtp              *uint64                `protobuf:"varint,67,opt,name=nw_queue_drops_ttp,json=nwQueueDropsTtp" json:"nw_queue_drops_ttp,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) Reset() {
	*x = JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType{}
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) ProtoMessage() {}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) ProtoReflect() protoreflect.Message {
	mi := &file_jkhmd_resiliency_render_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType.ProtoReflect.Descriptor instead.
func (*JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) Descriptor() ([]byte, []int) {
	return file_jkhmd_resiliency_render_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetIsrsLowOnMbufClusters() uint32 {
	if x != nil && x.IsrsLowOnMbufClusters != nil {
		return *x.IsrsLowOnMbufClusters
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetIsrsMbufAllocFailures() uint64 {
	if x != nil && x.IsrsMbufAllocFailures != nil {
		return *x.IsrsMbufAllocFailures
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetIsrsMbufClusterAllocFailures() uint64 {
	if x != nil && x.IsrsMbufClusterAllocFailures != nil {
		return *x.IsrsMbufClusterAllocFailures
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsEther() uint32 {
	if x != nil && x.NwQueueDropsEther != nil {
		return *x.NwQueueDropsEther
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsIp() uint32 {
	if x != nil && x.NwQueueDropsIp != nil {
		return *x.NwQueueDropsIp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsIpv6() uint32 {
	if x != nil && x.NwQueueDropsIpv6 != nil {
		return *x.NwQueueDropsIpv6
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsArp() uint32 {
	if x != nil && x.NwQueueDropsArp != nil {
		return *x.NwQueueDropsArp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsBgp() uint64 {
	if x != nil && x.NwQueueDropsBgp != nil {
		return *x.NwQueueDropsBgp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsOspf() uint64 {
	if x != nil && x.NwQueueDropsOspf != nil {
		return *x.NwQueueDropsOspf
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsRsvp() uint64 {
	if x != nil && x.NwQueueDropsRsvp != nil {
		return *x.NwQueueDropsRsvp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsIsis() uint64 {
	if x != nil && x.NwQueueDropsIsis != nil {
		return *x.NwQueueDropsIsis
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsMpls() uint64 {
	if x != nil && x.NwQueueDropsMpls != nil {
		return *x.NwQueueDropsMpls
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsTcp() uint64 {
	if x != nil && x.NwQueueDropsTcp != nil {
		return *x.NwQueueDropsTcp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsUdp() uint64 {
	if x != nil && x.NwQueueDropsUdp != nil {
		return *x.NwQueueDropsUdp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsIcmp() uint64 {
	if x != nil && x.NwQueueDropsIcmp != nil {
		return *x.NwQueueDropsIcmp
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsIcmp6() uint64 {
	if x != nil && x.NwQueueDropsIcmp6 != nil {
		return *x.NwQueueDropsIcmp6
	}
	return 0
}

func (x *JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType) GetNwQueueDropsTtp() uint64 {
	if x != nil && x.NwQueueDropsTtp != nil {
		return *x.NwQueueDropsTtp
	}
	return 0
}

var file_jkhmd_resiliency_render_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosKernel)(nil),
		Field:         120,
		Name:          "jnpr_junos_kernel_ext",
		Tag:           "bytes,120,opt,name=jnpr_junos_kernel_ext",
		Filename:      "jkhmd_resiliency_render.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_kernel jnpr_junos_kernel_ext = 120;
	E_JnprJunosKernelExt = &file_jkhmd_resiliency_render_proto_extTypes[0]
)

var File_jkhmd_resiliency_render_proto protoreflect.FileDescriptor

var file_jkhmd_resiliency_render_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x6a, 0x6b, 0x68, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x6c, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x0c, 0x0a, 0x0c, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x55, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x11, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0xe7, 0x0b, 0x0a,
	0x17, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a,
	0xf4, 0x0a, 0x0a, 0x0f, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x68, 0x0a, 0x0b, 0x6f, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6a,
	0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6f, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0xcb, 0x01, 0x0a, 0x18, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x38, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x1a, 0xd5,
	0x06, 0x0a, 0x10, 0x6f, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x19, 0x69, 0x73, 0x72, 0x73, 0x5f, 0x6c, 0x6f, 0x77, 0x5f,
	0x6f, 0x6e, 0x5f, 0x6d, 0x62, 0x75, 0x66, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x69, 0x73, 0x72, 0x73, 0x4c, 0x6f, 0x77, 0x4f,
	0x6e, 0x4d, 0x62, 0x75, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a,
	0x18, 0x69, 0x73, 0x72, 0x73, 0x5f, 0x6d, 0x62, 0x75, 0x66, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x15, 0x69, 0x73, 0x72, 0x73, 0x4d, 0x62, 0x75, 0x66, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x69, 0x73, 0x72, 0x73, 0x5f, 0x6d,
	0x62, 0x75, 0x66, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1c, 0x69, 0x73, 0x72, 0x73, 0x4d, 0x62, 0x75, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x14, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73,
	0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6e, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x45, 0x74, 0x68, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x11, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x5f, 0x69, 0x70, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x70, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x77,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x69, 0x70, 0x76,
	0x36, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x70, 0x76, 0x36, 0x12, 0x2b, 0x0a, 0x12, 0x6e, 0x77, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x61, 0x72, 0x70, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72,
	0x6f, 0x70, 0x73, 0x41, 0x72, 0x70, 0x12, 0x2b, 0x0a, 0x12, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x62, 0x67, 0x70, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73,
	0x42, 0x67, 0x70, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x6f, 0x73, 0x70, 0x66, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x4f, 0x73,
	0x70, 0x66, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64,
	0x72, 0x6f, 0x70, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x73, 0x76,
	0x70, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x73, 0x5f, 0x69, 0x73, 0x69, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x49, 0x73, 0x69, 0x73,
	0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x73, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6e,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x12,
	0x2b, 0x0a, 0x12, 0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x5f, 0x74, 0x63, 0x70, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6e, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x54, 0x63, 0x70, 0x12, 0x2b, 0x0a, 0x12,
	0x6e, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x75,
	0x64, 0x70, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x55, 0x64, 0x70, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x77, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x69, 0x63, 0x6d, 0x70,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x72, 0x6f, 0x70, 0x73, 0x49, 0x63, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x77, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x69, 0x63, 0x6d, 0x70, 0x36,
	0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x72, 0x6f, 0x70, 0x73, 0x49, 0x63, 0x6d, 0x70, 0x36, 0x12, 0x2b, 0x0a, 0x12, 0x6e, 0x77, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x74, 0x74, 0x70, 0x18,
	0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6e, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x72,
	0x6f, 0x70, 0x73, 0x54, 0x74, 0x70, 0x3a, 0x59, 0x0a, 0x15, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a,
	0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x12,
	0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x12, 0x6a,
	0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45, 0x78,
	0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_jkhmd_resiliency_render_proto_rawDescOnce sync.Once
	file_jkhmd_resiliency_render_proto_rawDescData []byte
)

func file_jkhmd_resiliency_render_proto_rawDescGZIP() []byte {
	file_jkhmd_resiliency_render_proto_rawDescOnce.Do(func() {
		file_jkhmd_resiliency_render_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jkhmd_resiliency_render_proto_rawDesc), len(file_jkhmd_resiliency_render_proto_rawDesc)))
	})
	return file_jkhmd_resiliency_render_proto_rawDescData
}

var file_jkhmd_resiliency_render_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_jkhmd_resiliency_render_proto_goTypes = []any{
	(*JunosKernel)(nil),                                                         // 0: junos_kernel
	(*JunosKernelExceptionProfilesType)(nil),                                    // 1: junos_kernel.exception_profiles_type
	(*JunosKernelExceptionProfilesTypeOsProfileType)(nil),                       // 2: junos_kernel.exception_profiles_type.os_profile_type
	(*JunosKernelExceptionProfilesTypeOsProfileTypeIncidentDescriptorType)(nil), // 3: junos_kernel.exception_profiles_type.os_profile_type.incident_descriptor_type
	(*JunosKernelExceptionProfilesTypeOsProfileTypeOsCountersType)(nil),         // 4: junos_kernel.exception_profiles_type.os_profile_type.os_counters_type
	(*JuniperNetworksSensors)(nil),                                              // 5: JuniperNetworksSensors
}
var file_jkhmd_resiliency_render_proto_depIdxs = []int32{
	1, // 0: junos_kernel.exception_profiles:type_name -> junos_kernel.exception_profiles_type
	2, // 1: junos_kernel.exception_profiles_type.os_profile:type_name -> junos_kernel.exception_profiles_type.os_profile_type
	3, // 2: junos_kernel.exception_profiles_type.os_profile_type.incident_descriptor:type_name -> junos_kernel.exception_profiles_type.os_profile_type.incident_descriptor_type
	4, // 3: junos_kernel.exception_profiles_type.os_profile_type.os_counters:type_name -> junos_kernel.exception_profiles_type.os_profile_type.os_counters_type
	5, // 4: jnpr_junos_kernel_ext:extendee -> JuniperNetworksSensors
	0, // 5: jnpr_junos_kernel_ext:type_name -> junos_kernel
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jkhmd_resiliency_render_proto_init() }
func file_jkhmd_resiliency_render_proto_init() {
	if File_jkhmd_resiliency_render_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jkhmd_resiliency_render_proto_rawDesc), len(file_jkhmd_resiliency_render_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_jkhmd_resiliency_render_proto_goTypes,
		DependencyIndexes: file_jkhmd_resiliency_render_proto_depIdxs,
		MessageInfos:      file_jkhmd_resiliency_render_proto_msgTypes,
		ExtensionInfos:    file_jkhmd_resiliency_render_proto_extTypes,
	}.Build()
	File_jkhmd_resiliency_render_proto = out.File
	file_jkhmd_resiliency_render_proto_goTypes = nil
	file_jkhmd_resiliency_render_proto_depIdxs = nil
}
