// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: mib2d_nd6_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Nd6InformationMibNd6 struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Ipv6          *Nd6InformationMibNd6Ipv6Type `protobuf:"bytes,151,opt,name=ipv6" json:"ipv6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nd6InformationMibNd6) Reset() {
	*x = Nd6InformationMibNd6{}
	mi := &file_mib2d_nd6_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nd6InformationMibNd6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nd6InformationMibNd6) ProtoMessage() {}

func (x *Nd6InformationMibNd6) ProtoReflect() protoreflect.Message {
	mi := &file_mib2d_nd6_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nd6InformationMibNd6.ProtoReflect.Descriptor instead.
func (*Nd6InformationMibNd6) Descriptor() ([]byte, []int) {
	return file_mib2d_nd6_oc_proto_rawDescGZIP(), []int{0}
}

func (x *Nd6InformationMibNd6) GetIpv6() *Nd6InformationMibNd6Ipv6Type {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

type Nd6InformationMibNd6Ipv6Type struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Neighbors     *Nd6InformationMibNd6Ipv6TypeNeighborsType `protobuf:"bytes,151,opt,name=neighbors" json:"neighbors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nd6InformationMibNd6Ipv6Type) Reset() {
	*x = Nd6InformationMibNd6Ipv6Type{}
	mi := &file_mib2d_nd6_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nd6InformationMibNd6Ipv6Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nd6InformationMibNd6Ipv6Type) ProtoMessage() {}

func (x *Nd6InformationMibNd6Ipv6Type) ProtoReflect() protoreflect.Message {
	mi := &file_mib2d_nd6_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nd6InformationMibNd6Ipv6Type.ProtoReflect.Descriptor instead.
func (*Nd6InformationMibNd6Ipv6Type) Descriptor() ([]byte, []int) {
	return file_mib2d_nd6_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Nd6InformationMibNd6Ipv6Type) GetNeighbors() *Nd6InformationMibNd6Ipv6TypeNeighborsType {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type Nd6InformationMibNd6Ipv6TypeNeighborsType struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Neighbor      []*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList `protobuf:"bytes,151,rep,name=neighbor" json:"neighbor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsType) Reset() {
	*x = Nd6InformationMibNd6Ipv6TypeNeighborsType{}
	mi := &file_mib2d_nd6_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nd6InformationMibNd6Ipv6TypeNeighborsType) ProtoMessage() {}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsType) ProtoReflect() protoreflect.Message {
	mi := &file_mib2d_nd6_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nd6InformationMibNd6Ipv6TypeNeighborsType.ProtoReflect.Descriptor instead.
func (*Nd6InformationMibNd6Ipv6TypeNeighborsType) Descriptor() ([]byte, []int) {
	return file_mib2d_nd6_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsType) GetNeighbor() []*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList struct {
	state         protoimpl.MessageState                                          `protogen:"open.v1"`
	Ip            *string                                                         `protobuf:"bytes,51,opt,name=ip" json:"ip,omitempty"`
	State         *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) Reset() {
	*x = Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList{}
	mi := &file_mib2d_nd6_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) ProtoMessage() {}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) ProtoReflect() protoreflect.Message {
	mi := &file_mib2d_nd6_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList.ProtoReflect.Descriptor instead.
func (*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return file_mib2d_nd6_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList) GetState() *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

type Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Ip               *string                `protobuf:"bytes,51,opt,name=ip" json:"ip,omitempty"`
	LinkLayerAddress *string                `protobuf:"bytes,52,opt,name=link_layer_address,json=linkLayerAddress" json:"link_layer_address,omitempty"`
	Origin           *string                `protobuf:"bytes,53,opt,name=origin" json:"origin,omitempty"`
	IsRouter         *bool                  `protobuf:"varint,54,opt,name=is_router,json=isRouter" json:"is_router,omitempty"`
	NeighborState    *string                `protobuf:"bytes,55,opt,name=neighbor_state,json=neighborState" json:"neighbor_state,omitempty"`
	TableId          *uint32                `protobuf:"varint,61,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	IsSecure         *bool                  `protobuf:"varint,62,opt,name=is_secure,json=isSecure" json:"is_secure,omitempty"`
	Expiry           *uint32                `protobuf:"varint,64,opt,name=expiry" json:"expiry,omitempty"`
	IsPublish        *bool                  `protobuf:"varint,63,opt,name=is_publish,json=isPublish" json:"is_publish,omitempty"`
	InterfaceName    *string                `protobuf:"bytes,65,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	LogicalRouterId  *uint32                `protobuf:"varint,66,opt,name=logical_router_id,json=logicalRouterId" json:"logical_router_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) Reset() {
	*x = Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType{}
	mi := &file_mib2d_nd6_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) ProtoMessage() {}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_mib2d_nd6_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType.ProtoReflect.Descriptor instead.
func (*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) Descriptor() ([]byte, []int) {
	return file_mib2d_nd6_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetLinkLayerAddress() string {
	if x != nil && x.LinkLayerAddress != nil {
		return *x.LinkLayerAddress
	}
	return ""
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetIsRouter() bool {
	if x != nil && x.IsRouter != nil {
		return *x.IsRouter
	}
	return false
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetNeighborState() string {
	if x != nil && x.NeighborState != nil {
		return *x.NeighborState
	}
	return ""
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetTableId() uint32 {
	if x != nil && x.TableId != nil {
		return *x.TableId
	}
	return 0
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetIsSecure() bool {
	if x != nil && x.IsSecure != nil {
		return *x.IsSecure
	}
	return false
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetExpiry() uint32 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetIsPublish() bool {
	if x != nil && x.IsPublish != nil {
		return *x.IsPublish
	}
	return false
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType) GetLogicalRouterId() uint32 {
	if x != nil && x.LogicalRouterId != nil {
		return *x.LogicalRouterId
	}
	return 0
}

var file_mib2d_nd6_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*Nd6InformationMibNd6)(nil),
		Field:         54,
		Name:          "jnpr_nd6_information_mib_nd6_ext",
		Tag:           "bytes,54,opt,name=jnpr_nd6_information_mib_nd6_ext",
		Filename:      "mib2d_nd6_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional nd6_information_mib_nd6 jnpr_nd6_information_mib_nd6_ext = 54;
	E_JnprNd6InformationMibNd6Ext = &file_mib2d_nd6_oc_proto_extTypes[0]
)

var File_mib2d_nd6_oc_proto protoreflect.FileDescriptor

var file_mib2d_nd6_oc_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x6d, 0x69, 0x62, 0x32, 0x64, 0x5f, 0x6e, 0x64, 0x36, 0x5f, 0x6f, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x06, 0x0a, 0x17, 0x6e, 0x64,
	0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69,
	0x62, 0x5f, 0x6e, 0x64, 0x36, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x64, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x62, 0x5f, 0x6e, 0x64, 0x36, 0x2e, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x1a, 0xc5,
	0x05, 0x0a, 0x09, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x09,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6e, 0x64, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x62, 0x5f, 0x6e, 0x64, 0x36, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x1a, 0xe5,
	0x04, 0x0a, 0x0e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x5c, 0x0a, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x18, 0x97, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6e, 0x64, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x62, 0x5f, 0x6e, 0x64, 0x36, 0x2e, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x1a,
	0xf4, 0x03, 0x0a, 0x0d, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82,
	0x40, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x70, 0x12, 0x61, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x6e, 0x64, 0x36, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x62, 0x5f, 0x6e,
	0x64, 0x36, 0x2e, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xe8, 0x02, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x3e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x42, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x78, 0x0a, 0x20, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6e,
	0x64, 0x36, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x69, 0x62, 0x5f, 0x6e, 0x64, 0x36, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x64, 0x36, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x62, 0x5f,
	0x6e, 0x64, 0x36, 0x52, 0x1b, 0x6a, 0x6e, 0x70, 0x72, 0x4e, 0x64, 0x36, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x62, 0x4e, 0x64, 0x36, 0x45, 0x78, 0x74,
	0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_mib2d_nd6_oc_proto_rawDescOnce sync.Once
	file_mib2d_nd6_oc_proto_rawDescData []byte
)

func file_mib2d_nd6_oc_proto_rawDescGZIP() []byte {
	file_mib2d_nd6_oc_proto_rawDescOnce.Do(func() {
		file_mib2d_nd6_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mib2d_nd6_oc_proto_rawDesc), len(file_mib2d_nd6_oc_proto_rawDesc)))
	})
	return file_mib2d_nd6_oc_proto_rawDescData
}

var file_mib2d_nd6_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_mib2d_nd6_oc_proto_goTypes = []any{
	(*Nd6InformationMibNd6)(nil),                                           // 0: nd6_information_mib_nd6
	(*Nd6InformationMibNd6Ipv6Type)(nil),                                   // 1: nd6_information_mib_nd6.ipv6_type
	(*Nd6InformationMibNd6Ipv6TypeNeighborsType)(nil),                      // 2: nd6_information_mib_nd6.ipv6_type.neighbors_type
	(*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborList)(nil),          // 3: nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list
	(*Nd6InformationMibNd6Ipv6TypeNeighborsTypeNeighborListStateType)(nil), // 4: nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list.state_type
	(*JuniperNetworksSensors)(nil),                                         // 5: JuniperNetworksSensors
}
var file_mib2d_nd6_oc_proto_depIdxs = []int32{
	1, // 0: nd6_information_mib_nd6.ipv6:type_name -> nd6_information_mib_nd6.ipv6_type
	2, // 1: nd6_information_mib_nd6.ipv6_type.neighbors:type_name -> nd6_information_mib_nd6.ipv6_type.neighbors_type
	3, // 2: nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor:type_name -> nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list
	4, // 3: nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list.state:type_name -> nd6_information_mib_nd6.ipv6_type.neighbors_type.neighbor_list.state_type
	5, // 4: jnpr_nd6_information_mib_nd6_ext:extendee -> JuniperNetworksSensors
	0, // 5: jnpr_nd6_information_mib_nd6_ext:type_name -> nd6_information_mib_nd6
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mib2d_nd6_oc_proto_init() }
func file_mib2d_nd6_oc_proto_init() {
	if File_mib2d_nd6_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mib2d_nd6_oc_proto_rawDesc), len(file_mib2d_nd6_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_mib2d_nd6_oc_proto_goTypes,
		DependencyIndexes: file_mib2d_nd6_oc_proto_depIdxs,
		MessageInfos:      file_mib2d_nd6_oc_proto_msgTypes,
		ExtensionInfos:    file_mib2d_nd6_oc_proto_extTypes,
	}.Build()
	File_mib2d_nd6_oc_proto = out.File
	file_mib2d_nd6_oc_proto_goTypes = nil
	file_mib2d_nd6_oc_proto_depIdxs = nil
}
