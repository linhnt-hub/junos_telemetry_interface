// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: spu_cpu_util.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosPfeSpuCpu struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Security      *JunosPfeSpuCpuSecurityType `protobuf:"bytes,151,opt,name=security" json:"security,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPfeSpuCpu) Reset() {
	*x = JunosPfeSpuCpu{}
	mi := &file_spu_cpu_util_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPfeSpuCpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPfeSpuCpu) ProtoMessage() {}

func (x *JunosPfeSpuCpu) ProtoReflect() protoreflect.Message {
	mi := &file_spu_cpu_util_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPfeSpuCpu.ProtoReflect.Descriptor instead.
func (*JunosPfeSpuCpu) Descriptor() ([]byte, []int) {
	return file_spu_cpu_util_proto_rawDescGZIP(), []int{0}
}

func (x *JunosPfeSpuCpu) GetSecurity() *JunosPfeSpuCpuSecurityType {
	if x != nil {
		return x.Security
	}
	return nil
}

type JunosPfeSpuCpuSecurityType struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Spu           *JunosPfeSpuCpuSecurityTypeSpuType `protobuf:"bytes,151,opt,name=spu" json:"spu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPfeSpuCpuSecurityType) Reset() {
	*x = JunosPfeSpuCpuSecurityType{}
	mi := &file_spu_cpu_util_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPfeSpuCpuSecurityType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPfeSpuCpuSecurityType) ProtoMessage() {}

func (x *JunosPfeSpuCpuSecurityType) ProtoReflect() protoreflect.Message {
	mi := &file_spu_cpu_util_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPfeSpuCpuSecurityType.ProtoReflect.Descriptor instead.
func (*JunosPfeSpuCpuSecurityType) Descriptor() ([]byte, []int) {
	return file_spu_cpu_util_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosPfeSpuCpuSecurityType) GetSpu() *JunosPfeSpuCpuSecurityTypeSpuType {
	if x != nil {
		return x.Spu
	}
	return nil
}

type JunosPfeSpuCpuSecurityTypeSpuType struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	SpuName       *string                                     `protobuf:"bytes,51,opt,name=spu_name,json=spuName" json:"spu_name,omitempty"`
	Cpu           []*JunosPfeSpuCpuSecurityTypeSpuTypeCpuList `protobuf:"bytes,151,rep,name=cpu" json:"cpu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPfeSpuCpuSecurityTypeSpuType) Reset() {
	*x = JunosPfeSpuCpuSecurityTypeSpuType{}
	mi := &file_spu_cpu_util_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPfeSpuCpuSecurityTypeSpuType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPfeSpuCpuSecurityTypeSpuType) ProtoMessage() {}

func (x *JunosPfeSpuCpuSecurityTypeSpuType) ProtoReflect() protoreflect.Message {
	mi := &file_spu_cpu_util_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPfeSpuCpuSecurityTypeSpuType.ProtoReflect.Descriptor instead.
func (*JunosPfeSpuCpuSecurityTypeSpuType) Descriptor() ([]byte, []int) {
	return file_spu_cpu_util_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosPfeSpuCpuSecurityTypeSpuType) GetSpuName() string {
	if x != nil && x.SpuName != nil {
		return *x.SpuName
	}
	return ""
}

func (x *JunosPfeSpuCpuSecurityTypeSpuType) GetCpu() []*JunosPfeSpuCpuSecurityTypeSpuTypeCpuList {
	if x != nil {
		return x.Cpu
	}
	return nil
}

type JunosPfeSpuCpuSecurityTypeSpuTypeCpuList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuName       *string                `protobuf:"bytes,52,opt,name=cpu_name,json=cpuName" json:"cpu_name,omitempty"`
	Utilization   *uint32                `protobuf:"varint,53,opt,name=utilization" json:"utilization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) Reset() {
	*x = JunosPfeSpuCpuSecurityTypeSpuTypeCpuList{}
	mi := &file_spu_cpu_util_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) ProtoMessage() {}

func (x *JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) ProtoReflect() protoreflect.Message {
	mi := &file_spu_cpu_util_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPfeSpuCpuSecurityTypeSpuTypeCpuList.ProtoReflect.Descriptor instead.
func (*JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) Descriptor() ([]byte, []int) {
	return file_spu_cpu_util_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) GetCpuName() string {
	if x != nil && x.CpuName != nil {
		return *x.CpuName
	}
	return ""
}

func (x *JunosPfeSpuCpuSecurityTypeSpuTypeCpuList) GetUtilization() uint32 {
	if x != nil && x.Utilization != nil {
		return *x.Utilization
	}
	return 0
}

var file_spu_cpu_util_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosPfeSpuCpu)(nil),
		Field:         130,
		Name:          "jnpr_junos_pfe_spu_cpu_ext",
		Tag:           "bytes,130,opt,name=jnpr_junos_pfe_spu_cpu_ext",
		Filename:      "spu_cpu_util.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_pfe_spu_cpu jnpr_junos_pfe_spu_cpu_ext = 130;
	E_JnprJunosPfeSpuCpuExt = &file_spu_cpu_util_proto_extTypes[0]
)

var File_spu_cpu_util_proto protoreflect.FileDescriptor

var file_spu_cpu_util_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x02, 0x0a, 0x11, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x70, 0x75, 0x12,
	0x3d, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x73,
	0x70, 0x75, 0x5f, 0x63, 0x70, 0x75, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x8c,
	0x02, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3c, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x73, 0x70, 0x75, 0x5f, 0x63,
	0x70, 0x75, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x73, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x03, 0x73, 0x70, 0x75, 0x1a, 0xbc,
	0x01, 0x0a, 0x08, 0x73, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x70, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x97, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65,
	0x5f, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x70, 0x75, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x63, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x03, 0x63, 0x70, 0x75, 0x1a, 0x4e, 0x0a,
	0x08, 0x63, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x08, 0x63, 0x70, 0x75,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x07, 0x63, 0x70, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x67, 0x0a,
	0x1a, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f,
	0x73, 0x70, 0x75, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x73, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x66, 0x65, 0x5f, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x70, 0x75, 0x52,
	0x15, 0x6a, 0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x50, 0x66, 0x65, 0x53, 0x70, 0x75,
	0x43, 0x70, 0x75, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f,
	0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_spu_cpu_util_proto_rawDescOnce sync.Once
	file_spu_cpu_util_proto_rawDescData []byte
)

func file_spu_cpu_util_proto_rawDescGZIP() []byte {
	file_spu_cpu_util_proto_rawDescOnce.Do(func() {
		file_spu_cpu_util_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spu_cpu_util_proto_rawDesc), len(file_spu_cpu_util_proto_rawDesc)))
	})
	return file_spu_cpu_util_proto_rawDescData
}

var file_spu_cpu_util_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_spu_cpu_util_proto_goTypes = []any{
	(*JunosPfeSpuCpu)(nil),                           // 0: junos_pfe_spu_cpu
	(*JunosPfeSpuCpuSecurityType)(nil),               // 1: junos_pfe_spu_cpu.security_type
	(*JunosPfeSpuCpuSecurityTypeSpuType)(nil),        // 2: junos_pfe_spu_cpu.security_type.spu_type
	(*JunosPfeSpuCpuSecurityTypeSpuTypeCpuList)(nil), // 3: junos_pfe_spu_cpu.security_type.spu_type.cpu_list
	(*JuniperNetworksSensors)(nil),                   // 4: JuniperNetworksSensors
}
var file_spu_cpu_util_proto_depIdxs = []int32{
	1, // 0: junos_pfe_spu_cpu.security:type_name -> junos_pfe_spu_cpu.security_type
	2, // 1: junos_pfe_spu_cpu.security_type.spu:type_name -> junos_pfe_spu_cpu.security_type.spu_type
	3, // 2: junos_pfe_spu_cpu.security_type.spu_type.cpu:type_name -> junos_pfe_spu_cpu.security_type.spu_type.cpu_list
	4, // 3: jnpr_junos_pfe_spu_cpu_ext:extendee -> JuniperNetworksSensors
	0, // 4: jnpr_junos_pfe_spu_cpu_ext:type_name -> junos_pfe_spu_cpu
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_spu_cpu_util_proto_init() }
func file_spu_cpu_util_proto_init() {
	if File_spu_cpu_util_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spu_cpu_util_proto_rawDesc), len(file_spu_cpu_util_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_spu_cpu_util_proto_goTypes,
		DependencyIndexes: file_spu_cpu_util_proto_depIdxs,
		MessageInfos:      file_spu_cpu_util_proto_msgTypes,
		ExtensionInfos:    file_spu_cpu_util_proto_extTypes,
	}.Build()
	File_spu_cpu_util_proto = out.File
	file_spu_cpu_util_proto_goTypes = nil
	file_spu_cpu_util_proto_depIdxs = nil
}
