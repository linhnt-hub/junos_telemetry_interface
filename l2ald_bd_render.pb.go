// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: l2ald_bd_render.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkInstancesBridgeDomain struct {
	state           protoimpl.MessageState                             `protogen:"open.v1"`
	NetworkInstance []*NetworkInstancesBridgeDomainNetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkInstancesBridgeDomain) Reset() {
	*x = NetworkInstancesBridgeDomain{}
	mi := &file_l2ald_bd_render_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesBridgeDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesBridgeDomain) ProtoMessage() {}

func (x *NetworkInstancesBridgeDomain) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_bd_render_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesBridgeDomain.ProtoReflect.Descriptor instead.
func (*NetworkInstancesBridgeDomain) Descriptor() ([]byte, []int) {
	return file_l2ald_bd_render_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkInstancesBridgeDomain) GetNetworkInstance() []*NetworkInstancesBridgeDomainNetworkInstanceList {
	if x != nil {
		return x.NetworkInstance
	}
	return nil
}

type NetworkInstancesBridgeDomainNetworkInstanceList struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Name          *string                                                    `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Vlan          []*NetworkInstancesBridgeDomainNetworkInstanceListVlanList `protobuf:"bytes,151,rep,name=vlan" json:"vlan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceList) Reset() {
	*x = NetworkInstancesBridgeDomainNetworkInstanceList{}
	mi := &file_l2ald_bd_render_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesBridgeDomainNetworkInstanceList) ProtoMessage() {}

func (x *NetworkInstancesBridgeDomainNetworkInstanceList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_bd_render_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesBridgeDomainNetworkInstanceList.ProtoReflect.Descriptor instead.
func (*NetworkInstancesBridgeDomainNetworkInstanceList) Descriptor() ([]byte, []int) {
	return file_l2ald_bd_render_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceList) GetVlan() []*NetworkInstancesBridgeDomainNetworkInstanceListVlanList {
	if x != nil {
		return x.Vlan
	}
	return nil
}

type NetworkInstancesBridgeDomainNetworkInstanceListVlanList struct {
	state                  protoimpl.MessageState                                               `protogen:"open.v1"`
	VlanName               *string                                                              `protobuf:"bytes,51,opt,name=vlan_name,json=vlanName" json:"vlan_name,omitempty"`
	VlanId                 *uint32                                                              `protobuf:"varint,52,opt,name=vlan_id,json=vlanId" json:"vlan_id,omitempty"`
	Status                 *string                                                              `protobuf:"bytes,53,opt,name=status" json:"status,omitempty"`
	Vni                    *uint32                                                              `protobuf:"varint,54,opt,name=vni" json:"vni,omitempty"`
	L3Interface            *string                                                              `protobuf:"bytes,55,opt,name=l3_interface,json=l3Interface" json:"l3_interface,omitempty"`
	NumLocalMacEntries     *uint32                                                              `protobuf:"varint,56,opt,name=num_local_mac_entries,json=numLocalMacEntries" json:"num_local_mac_entries,omitempty"`
	NumArReplicatorEntries *uint32                                                              `protobuf:"varint,57,opt,name=num_ar_replicator_entries,json=numArReplicatorEntries" json:"num_ar_replicator_entries,omitempty"`
	EthernetTagId          *uint32                                                              `protobuf:"varint,58,opt,name=ethernet_tag_id,json=ethernetTagId" json:"ethernet_tag_id,omitempty"`
	Member                 []*NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList `protobuf:"bytes,161,rep,name=member" json:"member,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) Reset() {
	*x = NetworkInstancesBridgeDomainNetworkInstanceListVlanList{}
	mi := &file_l2ald_bd_render_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesBridgeDomainNetworkInstanceListVlanList) ProtoMessage() {}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_bd_render_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesBridgeDomainNetworkInstanceListVlanList.ProtoReflect.Descriptor instead.
func (*NetworkInstancesBridgeDomainNetworkInstanceListVlanList) Descriptor() ([]byte, []int) {
	return file_l2ald_bd_render_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetVlanName() string {
	if x != nil && x.VlanName != nil {
		return *x.VlanName
	}
	return ""
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetVlanId() uint32 {
	if x != nil && x.VlanId != nil {
		return *x.VlanId
	}
	return 0
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetVni() uint32 {
	if x != nil && x.Vni != nil {
		return *x.Vni
	}
	return 0
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetL3Interface() string {
	if x != nil && x.L3Interface != nil {
		return *x.L3Interface
	}
	return ""
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetNumLocalMacEntries() uint32 {
	if x != nil && x.NumLocalMacEntries != nil {
		return *x.NumLocalMacEntries
	}
	return 0
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetNumArReplicatorEntries() uint32 {
	if x != nil && x.NumArReplicatorEntries != nil {
		return *x.NumArReplicatorEntries
	}
	return 0
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetEthernetTagId() uint32 {
	if x != nil && x.EthernetTagId != nil {
		return *x.EthernetTagId
	}
	return 0
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanList) GetMember() []*NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList {
	if x != nil {
		return x.Member
	}
	return nil
}

type NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *string                `protobuf:"bytes,61,opt,name=interface" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList) Reset() {
	*x = NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList{}
	mi := &file_l2ald_bd_render_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList) ProtoMessage() {}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_l2ald_bd_render_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList.ProtoReflect.Descriptor instead.
func (*NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList) Descriptor() ([]byte, []int) {
	return file_l2ald_bd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList) GetInterface() string {
	if x != nil && x.Interface != nil {
		return *x.Interface
	}
	return ""
}

var file_l2ald_bd_render_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*NetworkInstancesBridgeDomain)(nil),
		Field:         115,
		Name:          "jnpr_network_instances_bridge_domain_ext",
		Tag:           "bytes,115,opt,name=jnpr_network_instances_bridge_domain_ext",
		Filename:      "l2ald_bd_render.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional network_instances_bridge_domain jnpr_network_instances_bridge_domain_ext = 115;
	E_JnprNetworkInstancesBridgeDomainExt = &file_l2ald_bd_render_proto_extTypes[0]
)

var File_l2ald_bd_render_proto protoreflect.FileDescriptor

var file_l2ald_bd_render_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x6c, 0x32, 0x61, 0x6c, 0x64, 0x5f, 0x62, 0x64, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x05, 0x0a,
	0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x62, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x1a, 0xcb, 0x04, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40,
	0x02, 0x08, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x04, 0x76, 0x6c, 0x61,
	0x6e, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e,
	0x1a, 0xbf, 0x03, 0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x09, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x33, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x33, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x75, 0x6d, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x4d, 0x61, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x6e,
	0x75, 0x6d, 0x5f, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x6e, 0x75, 0x6d, 0x41, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x65,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0xa1, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x2b, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x3a, 0x90, 0x01, 0x0a, 0x28, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x12,
	0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x23, 0x6a, 0x6e, 0x70, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65,
})

var (
	file_l2ald_bd_render_proto_rawDescOnce sync.Once
	file_l2ald_bd_render_proto_rawDescData []byte
)

func file_l2ald_bd_render_proto_rawDescGZIP() []byte {
	file_l2ald_bd_render_proto_rawDescOnce.Do(func() {
		file_l2ald_bd_render_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_l2ald_bd_render_proto_rawDesc), len(file_l2ald_bd_render_proto_rawDesc)))
	})
	return file_l2ald_bd_render_proto_rawDescData
}

var file_l2ald_bd_render_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_l2ald_bd_render_proto_goTypes = []any{
	(*NetworkInstancesBridgeDomain)(nil),                                      // 0: network_instances_bridge_domain
	(*NetworkInstancesBridgeDomainNetworkInstanceList)(nil),                   // 1: network_instances_bridge_domain.network_instance_list
	(*NetworkInstancesBridgeDomainNetworkInstanceListVlanList)(nil),           // 2: network_instances_bridge_domain.network_instance_list.vlan_list
	(*NetworkInstancesBridgeDomainNetworkInstanceListVlanListMemberList)(nil), // 3: network_instances_bridge_domain.network_instance_list.vlan_list.member_list
	(*JuniperNetworksSensors)(nil),                                            // 4: JuniperNetworksSensors
}
var file_l2ald_bd_render_proto_depIdxs = []int32{
	1, // 0: network_instances_bridge_domain.network_instance:type_name -> network_instances_bridge_domain.network_instance_list
	2, // 1: network_instances_bridge_domain.network_instance_list.vlan:type_name -> network_instances_bridge_domain.network_instance_list.vlan_list
	3, // 2: network_instances_bridge_domain.network_instance_list.vlan_list.member:type_name -> network_instances_bridge_domain.network_instance_list.vlan_list.member_list
	4, // 3: jnpr_network_instances_bridge_domain_ext:extendee -> JuniperNetworksSensors
	0, // 4: jnpr_network_instances_bridge_domain_ext:type_name -> network_instances_bridge_domain
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_l2ald_bd_render_proto_init() }
func file_l2ald_bd_render_proto_init() {
	if File_l2ald_bd_render_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_l2ald_bd_render_proto_rawDesc), len(file_l2ald_bd_render_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_l2ald_bd_render_proto_goTypes,
		DependencyIndexes: file_l2ald_bd_render_proto_depIdxs,
		MessageInfos:      file_l2ald_bd_render_proto_msgTypes,
		ExtensionInfos:    file_l2ald_bd_render_proto_extTypes,
	}.Build()
	File_l2ald_bd_render_proto = out.File
	file_l2ald_bd_render_proto_goTypes = nil
	file_l2ald_bd_render_proto_depIdxs = nil
}
