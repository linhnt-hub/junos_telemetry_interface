// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: junos-xmlproxyd_junos-rsvp-interface.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosRsvpInterface struct {
	state                    protoimpl.MessageState                          `protogen:"open.v1"`
	RsvpInterfaceInformation *JunosRsvpInterfaceRsvpInterfaceInformationType `protobuf:"bytes,151,opt,name=rsvp_interface_information,json=rsvpInterfaceInformation" json:"rsvp_interface_information,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *JunosRsvpInterface) Reset() {
	*x = JunosRsvpInterface{}
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosRsvpInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosRsvpInterface) ProtoMessage() {}

func (x *JunosRsvpInterface) ProtoReflect() protoreflect.Message {
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosRsvpInterface.ProtoReflect.Descriptor instead.
func (*JunosRsvpInterface) Descriptor() ([]byte, []int) {
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP(), []int{0}
}

func (x *JunosRsvpInterface) GetRsvpInterfaceInformation() *JunosRsvpInterfaceRsvpInterfaceInformationType {
	if x != nil {
		return x.RsvpInterfaceInformation
	}
	return nil
}

type JunosRsvpInterfaceRsvpInterfaceInformationType struct {
	state         protoimpl.MessageState                                             `protogen:"open.v1"`
	ActiveCount   *uint32                                                            `protobuf:"varint,51,opt,name=active_count,json=activeCount" json:"active_count,omitempty"`
	RsvpInterface []*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList `protobuf:"bytes,151,rep,name=rsvp_interface,json=rsvpInterface" json:"rsvp_interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationType) Reset() {
	*x = JunosRsvpInterfaceRsvpInterfaceInformationType{}
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosRsvpInterfaceRsvpInterfaceInformationType) ProtoMessage() {}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationType) ProtoReflect() protoreflect.Message {
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosRsvpInterfaceRsvpInterfaceInformationType.ProtoReflect.Descriptor instead.
func (*JunosRsvpInterfaceRsvpInterfaceInformationType) Descriptor() ([]byte, []int) {
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationType) GetActiveCount() uint32 {
	if x != nil && x.ActiveCount != nil {
		return *x.ActiveCount
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationType) GetRsvpInterface() []*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList {
	if x != nil {
		return x.RsvpInterface
	}
	return nil
}

type JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList struct {
	state              protoimpl.MessageState                                                                  `protogen:"open.v1"`
	InterfaceName      *string                                                                                 `protobuf:"bytes,51,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	Index              *uint32                                                                                 `protobuf:"varint,52,opt,name=index" json:"index,omitempty"`
	RsvpStatus         *string                                                                                 `protobuf:"bytes,53,opt,name=rsvp_status,json=rsvpStatus" json:"rsvp_status,omitempty"`
	AuthenticationFlag *string                                                                                 `protobuf:"bytes,54,opt,name=authentication_flag,json=authenticationFlag" json:"authentication_flag,omitempty"`
	AggregateFlag      *string                                                                                 `protobuf:"bytes,55,opt,name=aggregate_flag,json=aggregateFlag" json:"aggregate_flag,omitempty"`
	AckFlag            *string                                                                                 `protobuf:"bytes,56,opt,name=ack_flag,json=ackFlag" json:"ack_flag,omitempty"`
	ProtectFlag        *string                                                                                 `protobuf:"bytes,57,opt,name=protect_flag,json=protectFlag" json:"protect_flag,omitempty"`
	HelloInterval      *uint32                                                                                 `protobuf:"varint,58,opt,name=hello_interval,json=helloInterval" json:"hello_interval,omitempty"`
	InterfaceAddress   *string                                                                                 `protobuf:"bytes,59,opt,name=interface_address,json=interfaceAddress" json:"interface_address,omitempty"`
	MessageStatistics  []*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList `protobuf:"bytes,151,rep,name=message_statistics,json=messageStatistics" json:"message_statistics,omitempty"`
	RsvpTelink         *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType          `protobuf:"bytes,152,opt,name=rsvp_telink,json=rsvpTelink" json:"rsvp_telink,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) Reset() {
	*x = JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList{}
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) ProtoMessage() {}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) ProtoReflect() protoreflect.Message {
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList.ProtoReflect.Descriptor instead.
func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) Descriptor() ([]byte, []int) {
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetRsvpStatus() string {
	if x != nil && x.RsvpStatus != nil {
		return *x.RsvpStatus
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetAuthenticationFlag() string {
	if x != nil && x.AuthenticationFlag != nil {
		return *x.AuthenticationFlag
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetAggregateFlag() string {
	if x != nil && x.AggregateFlag != nil {
		return *x.AggregateFlag
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetAckFlag() string {
	if x != nil && x.AckFlag != nil {
		return *x.AckFlag
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetProtectFlag() string {
	if x != nil && x.ProtectFlag != nil {
		return *x.ProtectFlag
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetHelloInterval() uint32 {
	if x != nil && x.HelloInterval != nil {
		return *x.HelloInterval
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetInterfaceAddress() string {
	if x != nil && x.InterfaceAddress != nil {
		return *x.InterfaceAddress
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetMessageStatistics() []*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList {
	if x != nil {
		return x.MessageStatistics
	}
	return nil
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList) GetRsvpTelink() *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType {
	if x != nil {
		return x.RsvpTelink
	}
	return nil
}

type JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	RsvpMessage               *string                `protobuf:"bytes,51,opt,name=rsvp_message,json=rsvpMessage" json:"rsvp_message,omitempty"`
	MessagesSent              *uint32                `protobuf:"varint,52,opt,name=messages_sent,json=messagesSent" json:"messages_sent,omitempty"`
	MessagesReceived          *uint32                `protobuf:"varint,53,opt,name=messages_received,json=messagesReceived" json:"messages_received,omitempty"`
	MessagesSent_5Seconds     *uint32                `protobuf:"varint,54,opt,name=messages_sent_5seconds,json=messagesSent5seconds" json:"messages_sent_5seconds,omitempty"`
	MessagesReceived_5Seconds *uint32                `protobuf:"varint,55,opt,name=messages_received_5seconds,json=messagesReceived5seconds" json:"messages_received_5seconds,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) Reset() {
	*x = JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList{}
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) ProtoMessage() {
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) ProtoReflect() protoreflect.Message {
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList.ProtoReflect.Descriptor instead.
func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) Descriptor() ([]byte, []int) {
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) GetRsvpMessage() string {
	if x != nil && x.RsvpMessage != nil {
		return *x.RsvpMessage
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) GetMessagesSent() uint32 {
	if x != nil && x.MessagesSent != nil {
		return *x.MessagesSent
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) GetMessagesReceived() uint32 {
	if x != nil && x.MessagesReceived != nil {
		return *x.MessagesReceived
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) GetMessagesSent_5Seconds() uint32 {
	if x != nil && x.MessagesSent_5Seconds != nil {
		return *x.MessagesSent_5Seconds
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList) GetMessagesReceived_5Seconds() uint32 {
	if x != nil && x.MessagesReceived_5Seconds != nil {
		return *x.MessagesReceived_5Seconds
	}
	return 0
}

type JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType struct {
	state              protoimpl.MessageState                                                                                `protogen:"open.v1"`
	ActiveReservation  *uint32                                                                                               `protobuf:"varint,51,opt,name=active_reservation,json=activeReservation" json:"active_reservation,omitempty"`
	PreemptionCount    *uint32                                                                                               `protobuf:"varint,52,opt,name=preemption_count,json=preemptionCount" json:"preemption_count,omitempty"`
	UpdateThreshold    *uint32                                                                                               `protobuf:"varint,53,opt,name=update_threshold,json=updateThreshold" json:"update_threshold,omitempty"`
	Subscription       *uint32                                                                                               `protobuf:"varint,54,opt,name=subscription" json:"subscription,omitempty"`
	StaticBandwidth    *string                                                                                               `protobuf:"bytes,55,opt,name=static_bandwidth,json=staticBandwidth" json:"static_bandwidth,omitempty"`
	AvailableBandwidth *string                                                                                               `protobuf:"bytes,56,opt,name=available_bandwidth,json=availableBandwidth" json:"available_bandwidth,omitempty"`
	ReservedBandwidth  []*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList `protobuf:"bytes,151,rep,name=reserved_bandwidth,json=reservedBandwidth" json:"reserved_bandwidth,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) Reset() {
	*x = JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType{}
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) ProtoMessage() {
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) ProtoReflect() protoreflect.Message {
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType.ProtoReflect.Descriptor instead.
func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) Descriptor() ([]byte, []int) {
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetActiveReservation() uint32 {
	if x != nil && x.ActiveReservation != nil {
		return *x.ActiveReservation
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetPreemptionCount() uint32 {
	if x != nil && x.PreemptionCount != nil {
		return *x.PreemptionCount
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetUpdateThreshold() uint32 {
	if x != nil && x.UpdateThreshold != nil {
		return *x.UpdateThreshold
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetSubscription() uint32 {
	if x != nil && x.Subscription != nil {
		return *x.Subscription
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetStaticBandwidth() string {
	if x != nil && x.StaticBandwidth != nil {
		return *x.StaticBandwidth
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetAvailableBandwidth() string {
	if x != nil && x.AvailableBandwidth != nil {
		return *x.AvailableBandwidth
	}
	return ""
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType) GetReservedBandwidth() []*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList {
	if x != nil {
		return x.ReservedBandwidth
	}
	return nil
}

type JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	BandwidthPriority      *uint32                `protobuf:"varint,51,opt,name=bandwidth_priority,json=bandwidthPriority" json:"bandwidth_priority,omitempty"`
	TotalReservedBandwidth *string                `protobuf:"bytes,52,opt,name=total_reserved_bandwidth,json=totalReservedBandwidth" json:"total_reserved_bandwidth,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) Reset() {
	*x = JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList{}
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) ProtoMessage() {
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) ProtoReflect() protoreflect.Message {
	mi := &file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList.ProtoReflect.Descriptor instead.
func (*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) Descriptor() ([]byte, []int) {
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0}
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) GetBandwidthPriority() uint32 {
	if x != nil && x.BandwidthPriority != nil {
		return *x.BandwidthPriority
	}
	return 0
}

func (x *JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList) GetTotalReservedBandwidth() string {
	if x != nil && x.TotalReservedBandwidth != nil {
		return *x.TotalReservedBandwidth
	}
	return ""
}

var file_junos_xmlproxyd_junos_rsvp_interface_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosRsvpInterface)(nil),
		Field:         46,
		Name:          "jnpr_junos_rsvp_interface_ext",
		Tag:           "bytes,46,opt,name=jnpr_junos_rsvp_interface_ext",
		Filename:      "junos-xmlproxyd_junos-rsvp-interface.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_rsvp_interface jnpr_junos_rsvp_interface_ext = 46;
	E_JnprJunosRsvpInterfaceExt = &file_junos_xmlproxyd_junos_rsvp_interface_proto_extTypes[0]
)

var File_junos_xmlproxyd_junos_rsvp_interface_proto protoreflect.FileDescriptor

var file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDesc = string([]byte{
	0x0a, 0x2a, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x2d, 0x78, 0x6d, 0x6c, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x64, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x2d, 0x72, 0x73, 0x76, 0x70, 0x2d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x96, 0x0e, 0x0a, 0x14, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x1a, 0x72, 0x73,
	0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x18, 0x72, 0x73, 0x76, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x87, 0x0d, 0x0a, 0x1f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x71, 0x0a, 0x0e, 0x72, 0x73, 0x76, 0x70, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x49, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x72, 0x73, 0x76,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0xcd, 0x0b, 0x0a, 0x13, 0x72,
	0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08,
	0x01, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x73, 0x76,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x61, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x7c, 0x0a, 0x0b, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x74, 0x65,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x74, 0x65, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x73, 0x76, 0x70, 0x54, 0x65, 0x6c,
	0x69, 0x6e, 0x6b, 0x1a, 0x89, 0x02, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x0c, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x72, 0x73,
	0x76, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x35, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x35, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x35, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x35, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a,
	0xc8, 0x04, 0x0a, 0x10, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70,
	0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0xa2, 0x01, 0x0a, 0x12, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x97, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x72, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x72,
	0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72,
	0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x1a, 0x89,
	0x01, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x12, 0x62, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x11, 0x62,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x34, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x3a, 0x70, 0x0a, 0x1d, 0x6a, 0x6e,
	0x70, 0x72, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x75, 0x6e,
	0x6f, 0x73, 0x5f, 0x72, 0x73, 0x76, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x19, 0x6a, 0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x52, 0x73, 0x76, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b,
	0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescOnce sync.Once
	file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescData []byte
)

func file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescGZIP() []byte {
	file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescOnce.Do(func() {
		file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDesc), len(file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDesc)))
	})
	return file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDescData
}

var file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_junos_xmlproxyd_junos_rsvp_interface_proto_goTypes = []any{
	(*JunosRsvpInterface)(nil),                                                                                 // 0: junos_rsvp_interface
	(*JunosRsvpInterfaceRsvpInterfaceInformationType)(nil),                                                     // 1: junos_rsvp_interface.rsvp_interface_information_type
	(*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceList)(nil),                                    // 2: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list
	(*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListMessageStatisticsList)(nil),               // 3: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.message_statistics_list
	(*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkType)(nil),                      // 4: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.rsvp_telink_type
	(*JunosRsvpInterfaceRsvpInterfaceInformationTypeRsvpInterfaceListRsvpTelinkTypeReservedBandwidthList)(nil), // 5: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.rsvp_telink_type.reserved_bandwidth_list
	(*JuniperNetworksSensors)(nil),                                                                             // 6: JuniperNetworksSensors
}
var file_junos_xmlproxyd_junos_rsvp_interface_proto_depIdxs = []int32{
	1, // 0: junos_rsvp_interface.rsvp_interface_information:type_name -> junos_rsvp_interface.rsvp_interface_information_type
	2, // 1: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface:type_name -> junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list
	3, // 2: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.message_statistics:type_name -> junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.message_statistics_list
	4, // 3: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.rsvp_telink:type_name -> junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.rsvp_telink_type
	5, // 4: junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.rsvp_telink_type.reserved_bandwidth:type_name -> junos_rsvp_interface.rsvp_interface_information_type.rsvp_interface_list.rsvp_telink_type.reserved_bandwidth_list
	6, // 5: jnpr_junos_rsvp_interface_ext:extendee -> JuniperNetworksSensors
	0, // 6: jnpr_junos_rsvp_interface_ext:type_name -> junos_rsvp_interface
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	6, // [6:7] is the sub-list for extension type_name
	5, // [5:6] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_junos_xmlproxyd_junos_rsvp_interface_proto_init() }
func file_junos_xmlproxyd_junos_rsvp_interface_proto_init() {
	if File_junos_xmlproxyd_junos_rsvp_interface_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDesc), len(file_junos_xmlproxyd_junos_rsvp_interface_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_junos_xmlproxyd_junos_rsvp_interface_proto_goTypes,
		DependencyIndexes: file_junos_xmlproxyd_junos_rsvp_interface_proto_depIdxs,
		MessageInfos:      file_junos_xmlproxyd_junos_rsvp_interface_proto_msgTypes,
		ExtensionInfos:    file_junos_xmlproxyd_junos_rsvp_interface_proto_extTypes,
	}.Build()
	File_junos_xmlproxyd_junos_rsvp_interface_proto = out.File
	file_junos_xmlproxyd_junos_rsvp_interface_proto_goTypes = nil
	file_junos_xmlproxyd_junos_rsvp_interface_proto_depIdxs = nil
}
