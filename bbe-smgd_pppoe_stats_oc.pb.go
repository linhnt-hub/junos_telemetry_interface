// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: bbe-smgd_pppoe_stats_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosPppoeStats struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	System        *JunosPppoeStatsSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPppoeStats) Reset() {
	*x = JunosPppoeStats{}
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppoeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppoeStats) ProtoMessage() {}

func (x *JunosPppoeStats) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppoeStats.ProtoReflect.Descriptor instead.
func (*JunosPppoeStats) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP(), []int{0}
}

func (x *JunosPppoeStats) GetSystem() *JunosPppoeStatsSystemType {
	if x != nil {
		return x.System
	}
	return nil
}

type JunosPppoeStatsSystemType struct {
	state                protoimpl.MessageState                             `protogen:"open.v1"`
	SubscriberManagement *JunosPppoeStatsSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JunosPppoeStatsSystemType) Reset() {
	*x = JunosPppoeStatsSystemType{}
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppoeStatsSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppoeStatsSystemType) ProtoMessage() {}

func (x *JunosPppoeStatsSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppoeStatsSystemType.ProtoReflect.Descriptor instead.
func (*JunosPppoeStatsSystemType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosPppoeStatsSystemType) GetSubscriberManagement() *JunosPppoeStatsSystemTypeSubscriberManagementType {
	if x != nil {
		return x.SubscriberManagement
	}
	return nil
}

type JunosPppoeStatsSystemTypeSubscriberManagementType struct {
	state           protoimpl.MessageState                                                `protogen:"open.v1"`
	ClientProtocols *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType `protobuf:"bytes,151,opt,name=client_protocols,json=clientProtocols" json:"client_protocols,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementType) Reset() {
	*x = JunosPppoeStatsSystemTypeSubscriberManagementType{}
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppoeStatsSystemTypeSubscriberManagementType) ProtoMessage() {}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppoeStatsSystemTypeSubscriberManagementType.ProtoReflect.Descriptor instead.
func (*JunosPppoeStatsSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementType) GetClientProtocols() *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType {
	if x != nil {
		return x.ClientProtocols
	}
	return nil
}

type JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType struct {
	state         protoimpl.MessageState                                                         `protogen:"open.v1"`
	Pppoe         *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType `protobuf:"bytes,151,opt,name=pppoe" json:"pppoe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType) Reset() {
	*x = JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType{}
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType) ProtoMessage() {}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType.ProtoReflect.Descriptor instead.
func (*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType) GetPppoe() *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType {
	if x != nil {
		return x.Pppoe
	}
	return nil
}

type JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType struct {
	state         protoimpl.MessageState                                                                       `protogen:"open.v1"`
	Statistics    *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType) Reset() {
	*x = JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType{}
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType) ProtoMessage() {
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType.ProtoReflect.Descriptor instead.
func (*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType) GetStatistics() *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	PadiPacketsSent          *uint32                `protobuf:"varint,51,opt,name=padi_packets_sent,json=padiPacketsSent" json:"padi_packets_sent,omitempty"`
	PadiPacketsReceived      *uint32                `protobuf:"varint,52,opt,name=padi_packets_received,json=padiPacketsReceived" json:"padi_packets_received,omitempty"`
	PadoPacketsSent          *uint32                `protobuf:"varint,53,opt,name=pado_packets_sent,json=padoPacketsSent" json:"pado_packets_sent,omitempty"`
	PadoPacketsReceived      *uint32                `protobuf:"varint,54,opt,name=pado_packets_received,json=padoPacketsReceived" json:"pado_packets_received,omitempty"`
	PadrPacketsSent          *uint32                `protobuf:"varint,55,opt,name=padr_packets_sent,json=padrPacketsSent" json:"padr_packets_sent,omitempty"`
	PadrPacketsReceived      *uint32                `protobuf:"varint,56,opt,name=padr_packets_received,json=padrPacketsReceived" json:"padr_packets_received,omitempty"`
	PadsPacketsSent          *uint32                `protobuf:"varint,57,opt,name=pads_packets_sent,json=padsPacketsSent" json:"pads_packets_sent,omitempty"`
	PadsPacketsReceived      *uint32                `protobuf:"varint,58,opt,name=pads_packets_received,json=padsPacketsReceived" json:"pads_packets_received,omitempty"`
	PadtPacketsSent          *uint32                `protobuf:"varint,59,opt,name=padt_packets_sent,json=padtPacketsSent" json:"padt_packets_sent,omitempty"`
	PadtPacketsReceived      *uint32                `protobuf:"varint,60,opt,name=padt_packets_received,json=padtPacketsReceived" json:"padt_packets_received,omitempty"`
	ServiceErrorSent         *uint32                `protobuf:"varint,61,opt,name=service_error_sent,json=serviceErrorSent" json:"service_error_sent,omitempty"`
	ServiceErrorReceived     *uint32                `protobuf:"varint,62,opt,name=service_error_received,json=serviceErrorReceived" json:"service_error_received,omitempty"`
	AcErrorSent              *uint32                `protobuf:"varint,63,opt,name=ac_error_sent,json=acErrorSent" json:"ac_error_sent,omitempty"`
	AcErrorReceived          *uint32                `protobuf:"varint,64,opt,name=ac_error_received,json=acErrorReceived" json:"ac_error_received,omitempty"`
	GenericErrorSent         *uint32                `protobuf:"varint,65,opt,name=generic_error_sent,json=genericErrorSent" json:"generic_error_sent,omitempty"`
	GenericErrorReceived     *uint32                `protobuf:"varint,66,opt,name=generic_error_received,json=genericErrorReceived" json:"generic_error_received,omitempty"`
	MalformedPacketsReceived *uint32                `protobuf:"varint,67,opt,name=malformed_packets_received,json=malformedPacketsReceived" json:"malformed_packets_received,omitempty"`
	UnknownPacketsReceived   *uint32                `protobuf:"varint,68,opt,name=unknown_packets_received,json=unknownPacketsReceived" json:"unknown_packets_received,omitempty"`
	EraInflightCount         *uint32                `protobuf:"varint,69,opt,name=era_inflight_count,json=eraInflightCount" json:"era_inflight_count,omitempty"`
	EraReportedSuccesses     *uint32                `protobuf:"varint,70,opt,name=era_reported_successes,json=eraReportedSuccesses" json:"era_reported_successes,omitempty"`
	EraReportedFailures      *uint32                `protobuf:"varint,71,opt,name=era_reported_failures,json=eraReportedFailures" json:"era_reported_failures,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) Reset() {
	*x = JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType{}
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) ProtoMessage() {
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_pppoe_stats_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0}
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadiPacketsSent() uint32 {
	if x != nil && x.PadiPacketsSent != nil {
		return *x.PadiPacketsSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadiPacketsReceived() uint32 {
	if x != nil && x.PadiPacketsReceived != nil {
		return *x.PadiPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadoPacketsSent() uint32 {
	if x != nil && x.PadoPacketsSent != nil {
		return *x.PadoPacketsSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadoPacketsReceived() uint32 {
	if x != nil && x.PadoPacketsReceived != nil {
		return *x.PadoPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadrPacketsSent() uint32 {
	if x != nil && x.PadrPacketsSent != nil {
		return *x.PadrPacketsSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadrPacketsReceived() uint32 {
	if x != nil && x.PadrPacketsReceived != nil {
		return *x.PadrPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadsPacketsSent() uint32 {
	if x != nil && x.PadsPacketsSent != nil {
		return *x.PadsPacketsSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadsPacketsReceived() uint32 {
	if x != nil && x.PadsPacketsReceived != nil {
		return *x.PadsPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadtPacketsSent() uint32 {
	if x != nil && x.PadtPacketsSent != nil {
		return *x.PadtPacketsSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetPadtPacketsReceived() uint32 {
	if x != nil && x.PadtPacketsReceived != nil {
		return *x.PadtPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetServiceErrorSent() uint32 {
	if x != nil && x.ServiceErrorSent != nil {
		return *x.ServiceErrorSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetServiceErrorReceived() uint32 {
	if x != nil && x.ServiceErrorReceived != nil {
		return *x.ServiceErrorReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetAcErrorSent() uint32 {
	if x != nil && x.AcErrorSent != nil {
		return *x.AcErrorSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetAcErrorReceived() uint32 {
	if x != nil && x.AcErrorReceived != nil {
		return *x.AcErrorReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetGenericErrorSent() uint32 {
	if x != nil && x.GenericErrorSent != nil {
		return *x.GenericErrorSent
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetGenericErrorReceived() uint32 {
	if x != nil && x.GenericErrorReceived != nil {
		return *x.GenericErrorReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetMalformedPacketsReceived() uint32 {
	if x != nil && x.MalformedPacketsReceived != nil {
		return *x.MalformedPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetUnknownPacketsReceived() uint32 {
	if x != nil && x.UnknownPacketsReceived != nil {
		return *x.UnknownPacketsReceived
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetEraInflightCount() uint32 {
	if x != nil && x.EraInflightCount != nil {
		return *x.EraInflightCount
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetEraReportedSuccesses() uint32 {
	if x != nil && x.EraReportedSuccesses != nil {
		return *x.EraReportedSuccesses
	}
	return 0
}

func (x *JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType) GetEraReportedFailures() uint32 {
	if x != nil && x.EraReportedFailures != nil {
		return *x.EraReportedFailures
	}
	return 0
}

var file_bbe_smgd_pppoe_stats_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosPppoeStats)(nil),
		Field:         35,
		Name:          "jnpr_junos_pppoe_stats_ext",
		Tag:           "bytes,35,opt,name=jnpr_junos_pppoe_stats_ext",
		Filename:      "bbe-smgd_pppoe_stats_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_pppoe_stats jnpr_junos_pppoe_stats_ext = 35;
	E_JnprJunosPppoeStatsExt = &file_bbe_smgd_pppoe_stats_oc_proto_extTypes[0]
)

var File_bbe_smgd_pppoe_stats_oc_proto protoreflect.FileDescriptor

var file_bbe_smgd_pppoe_stats_oc_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x62, 0x62, 0x65, 0x2d, 0x73, 0x6d, 0x67, 0x64, 0x5f, 0x70, 0x70, 0x70, 0x6f, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x0d, 0x0a, 0x11, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70,
	0x70, 0x70, 0x6f, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x1a, 0xe0, 0x0c, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x6f, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x14,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xdf, 0x0b, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f,
	0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x1a, 0xc3, 0x0a, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x71, 0x0a, 0x05, 0x70, 0x70,
	0x70, 0x6f, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x6a, 0x75, 0x6e,
	0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x70, 0x70, 0x6f,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x1a, 0xb6, 0x09,
	0x0a, 0x0a, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x8b, 0x01, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x99, 0x08, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x61, 0x64, 0x69, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x64, 0x69, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61,
	0x64, 0x69, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x64, 0x69, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x61, 0x64, 0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x64, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61,
	0x64, 0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x64, 0x6f, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x61, 0x64, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x64, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61,
	0x64, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x64, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x61, 0x64, 0x73, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x64, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61,
	0x64, 0x73, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x64, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x61, 0x64, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x64, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61,
	0x64, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x64, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x6e, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x61, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x6d, 0x61, 0x6c, 0x66, 0x6f, 0x72,
	0x6d, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6d, 0x61, 0x6c, 0x66,
	0x6f, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x65, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16,
	0x65, 0x72, 0x61, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x72,
	0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x72, 0x61, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x47, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x3a, 0x67, 0x0a, 0x1a, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a,
	0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x6f,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x52, 0x16, 0x6a, 0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e,
	0x6f, 0x73, 0x50, 0x70, 0x70, 0x6f, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x78, 0x74, 0x42,
	0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_bbe_smgd_pppoe_stats_oc_proto_rawDescOnce sync.Once
	file_bbe_smgd_pppoe_stats_oc_proto_rawDescData []byte
)

func file_bbe_smgd_pppoe_stats_oc_proto_rawDescGZIP() []byte {
	file_bbe_smgd_pppoe_stats_oc_proto_rawDescOnce.Do(func() {
		file_bbe_smgd_pppoe_stats_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bbe_smgd_pppoe_stats_oc_proto_rawDesc), len(file_bbe_smgd_pppoe_stats_oc_proto_rawDesc)))
	})
	return file_bbe_smgd_pppoe_stats_oc_proto_rawDescData
}

var file_bbe_smgd_pppoe_stats_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bbe_smgd_pppoe_stats_oc_proto_goTypes = []any{
	(*JunosPppoeStats)(nil),                                                                             // 0: junos_pppoe_stats
	(*JunosPppoeStatsSystemType)(nil),                                                                   // 1: junos_pppoe_stats.system_type
	(*JunosPppoeStatsSystemTypeSubscriberManagementType)(nil),                                           // 2: junos_pppoe_stats.system_type.subscriber_management_type
	(*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsType)(nil),                        // 3: junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type
	(*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeType)(nil),               // 4: junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type.pppoe_type
	(*JunosPppoeStatsSystemTypeSubscriberManagementTypeClientProtocolsTypePppoeTypeStatisticsType)(nil), // 5: junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type.pppoe_type.statistics_type
	(*JuniperNetworksSensors)(nil),                                                                      // 6: JuniperNetworksSensors
}
var file_bbe_smgd_pppoe_stats_oc_proto_depIdxs = []int32{
	1, // 0: junos_pppoe_stats.system:type_name -> junos_pppoe_stats.system_type
	2, // 1: junos_pppoe_stats.system_type.subscriber_management:type_name -> junos_pppoe_stats.system_type.subscriber_management_type
	3, // 2: junos_pppoe_stats.system_type.subscriber_management_type.client_protocols:type_name -> junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type
	4, // 3: junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type.pppoe:type_name -> junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type.pppoe_type
	5, // 4: junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type.pppoe_type.statistics:type_name -> junos_pppoe_stats.system_type.subscriber_management_type.client_protocols_type.pppoe_type.statistics_type
	6, // 5: jnpr_junos_pppoe_stats_ext:extendee -> JuniperNetworksSensors
	0, // 6: jnpr_junos_pppoe_stats_ext:type_name -> junos_pppoe_stats
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	6, // [6:7] is the sub-list for extension type_name
	5, // [5:6] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_bbe_smgd_pppoe_stats_oc_proto_init() }
func file_bbe_smgd_pppoe_stats_oc_proto_init() {
	if File_bbe_smgd_pppoe_stats_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bbe_smgd_pppoe_stats_oc_proto_rawDesc), len(file_bbe_smgd_pppoe_stats_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_bbe_smgd_pppoe_stats_oc_proto_goTypes,
		DependencyIndexes: file_bbe_smgd_pppoe_stats_oc_proto_depIdxs,
		MessageInfos:      file_bbe_smgd_pppoe_stats_oc_proto_msgTypes,
		ExtensionInfos:    file_bbe_smgd_pppoe_stats_oc_proto_extTypes,
	}.Build()
	File_bbe_smgd_pppoe_stats_oc_proto = out.File
	file_bbe_smgd_pppoe_stats_oc_proto_goTypes = nil
	file_bbe_smgd_pppoe_stats_oc_proto_depIdxs = nil
}
