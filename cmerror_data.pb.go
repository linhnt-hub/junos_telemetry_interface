//
// Copyrights (c)  2016, Juniper Networks, Inc.
// All rights reserved.
//

//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless optional by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

//
// Balagopal Ambalakkat,Sumanth Kamatala, 2016
//
// This defines the gpb message format used exporting
// cmerror data information.
//
// The top level message is CmerrorData
// The message is a collection of ErrorData  items.
//
//
// Version 1.0
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: cmerror_data.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Juniper Error Item information
type ErrorData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier that uniquely identifies the source of
	// the error.
	Identifier  *string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Count       *uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	LastUpdated *uint64 `protobuf:"varint,3,opt,name=last_updated,json=lastUpdated" json:"last_updated,omitempty"`
	IsEnabled   *bool   `protobuf:"varint,4,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	// Additional Metadata for error processing
	ModuleId    *uint32 `protobuf:"varint,5,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	ComponentId *uint32 `protobuf:"varint,6,opt,name=component_id,json=componentId" json:"component_id,omitempty"`
	ErrorCode   *uint32 `protobuf:"varint,7,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	// Additional stats for each of the error
	OccurCount        *uint32 `protobuf:"varint,8,opt,name=occur_count,json=occurCount" json:"occur_count,omitempty"`
	ClearedCount      *uint32 `protobuf:"varint,9,opt,name=cleared_count,json=clearedCount" json:"cleared_count,omitempty"`
	LastClearedAt     *uint64 `protobuf:"varint,10,opt,name=last_cleared_at,json=lastClearedAt" json:"last_cleared_at,omitempty"`
	ActionCount       *uint32 `protobuf:"varint,11,opt,name=action_count,json=actionCount" json:"action_count,omitempty"`
	LastActionTakenAt *uint64 `protobuf:"varint,12,opt,name=last_action_taken_at,json=lastActionTakenAt" json:"last_action_taken_at,omitempty"`
	// Fru information
	FruType *string `protobuf:"bytes,13,opt,name=fru_type,json=fruType" json:"fru_type,omitempty"`
	FruSlot *uint32 `protobuf:"varint,14,opt,name=fru_slot,json=fruSlot" json:"fru_slot,omitempty"`
	// Help information regarding the error.
	Description   *string `protobuf:"bytes,15,opt,name=description" json:"description,omitempty"`
	Help          *string `protobuf:"bytes,16,opt,name=help" json:"help,omitempty"`
	Name          *string `protobuf:"bytes,17,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorData) Reset() {
	*x = ErrorData{}
	mi := &file_cmerror_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorData) ProtoMessage() {}

func (x *ErrorData) ProtoReflect() protoreflect.Message {
	mi := &file_cmerror_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorData.ProtoReflect.Descriptor instead.
func (*ErrorData) Descriptor() ([]byte, []int) {
	return file_cmerror_data_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorData) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *ErrorData) GetCount() uint64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ErrorData) GetLastUpdated() uint64 {
	if x != nil && x.LastUpdated != nil {
		return *x.LastUpdated
	}
	return 0
}

func (x *ErrorData) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *ErrorData) GetModuleId() uint32 {
	if x != nil && x.ModuleId != nil {
		return *x.ModuleId
	}
	return 0
}

func (x *ErrorData) GetComponentId() uint32 {
	if x != nil && x.ComponentId != nil {
		return *x.ComponentId
	}
	return 0
}

func (x *ErrorData) GetErrorCode() uint32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *ErrorData) GetOccurCount() uint32 {
	if x != nil && x.OccurCount != nil {
		return *x.OccurCount
	}
	return 0
}

func (x *ErrorData) GetClearedCount() uint32 {
	if x != nil && x.ClearedCount != nil {
		return *x.ClearedCount
	}
	return 0
}

func (x *ErrorData) GetLastClearedAt() uint64 {
	if x != nil && x.LastClearedAt != nil {
		return *x.LastClearedAt
	}
	return 0
}

func (x *ErrorData) GetActionCount() uint32 {
	if x != nil && x.ActionCount != nil {
		return *x.ActionCount
	}
	return 0
}

func (x *ErrorData) GetLastActionTakenAt() uint64 {
	if x != nil && x.LastActionTakenAt != nil {
		return *x.LastActionTakenAt
	}
	return 0
}

func (x *ErrorData) GetFruType() string {
	if x != nil && x.FruType != nil {
		return *x.FruType
	}
	return ""
}

func (x *ErrorData) GetFruSlot() uint32 {
	if x != nil && x.FruSlot != nil {
		return *x.FruSlot
	}
	return 0
}

func (x *ErrorData) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ErrorData) GetHelp() string {
	if x != nil && x.Help != nil {
		return *x.Help
	}
	return ""
}

func (x *ErrorData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ErrorResourceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource id e.g pfe identifier
	Id *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// resource type e.g pfe/pic
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// resource state e.g enabled /disabled
	State         *uint32 `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResourceInfo) Reset() {
	*x = ErrorResourceInfo{}
	mi := &file_cmerror_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResourceInfo) ProtoMessage() {}

func (x *ErrorResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmerror_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResourceInfo.ProtoReflect.Descriptor instead.
func (*ErrorResourceInfo) Descriptor() ([]byte, []int) {
	return file_cmerror_data_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorResourceInfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ErrorResourceInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ErrorResourceInfo) GetState() uint32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

// Top-level CmerrorData message
type CmerrorData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// collection of error items
	ErrorItem []*ErrorData `protobuf:"bytes,1,rep,name=error_item,json=errorItem" json:"error_item,omitempty"`
	// Fru slot identifier
	FruSlot *uint32 `protobuf:"varint,2,opt,name=fru_slot,json=fruSlot" json:"fru_slot,omitempty"`
	FruType *string `protobuf:"bytes,3,opt,name=fru_type,json=fruType" json:"fru_type,omitempty"`
	// collection of resource states from fru
	ResourceItem  []*ErrorResourceInfo `protobuf:"bytes,4,rep,name=resource_item,json=resourceItem" json:"resource_item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmerrorData) Reset() {
	*x = CmerrorData{}
	mi := &file_cmerror_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmerrorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmerrorData) ProtoMessage() {}

func (x *CmerrorData) ProtoReflect() protoreflect.Message {
	mi := &file_cmerror_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmerrorData.ProtoReflect.Descriptor instead.
func (*CmerrorData) Descriptor() ([]byte, []int) {
	return file_cmerror_data_proto_rawDescGZIP(), []int{2}
}

func (x *CmerrorData) GetErrorItem() []*ErrorData {
	if x != nil {
		return x.ErrorItem
	}
	return nil
}

func (x *CmerrorData) GetFruSlot() uint32 {
	if x != nil && x.FruSlot != nil {
		return *x.FruSlot
	}
	return 0
}

func (x *CmerrorData) GetFruType() string {
	if x != nil && x.FruType != nil {
		return *x.FruType
	}
	return ""
}

func (x *CmerrorData) GetResourceItem() []*ErrorResourceInfo {
	if x != nil {
		return x.ResourceItem
	}
	return nil
}

var file_cmerror_data_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*CmerrorData)(nil),
		Field:         21,
		Name:          "jnpr_cmerror_data_ext",
		Tag:           "bytes,21,opt,name=jnpr_cmerror_data_ext",
		Filename:      "cmerror_data.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional CmerrorData jnpr_cmerror_data_ext = 21;
	E_JnprCmerrorDataExt = &file_cmerror_data_proto_extTypes[0]
)

var File_cmerror_data_proto protoreflect.FileDescriptor

var file_cmerror_data_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x63, 0x6d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x04, 0x0a, 0x09, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02,
	0x08, 0x01, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0x82,
	0x40, 0x02, 0x18, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x05, 0x82, 0x40, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52,
	0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x0d, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x05, 0x82, 0x40, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x05, 0x82, 0x40, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x05, 0x82, 0x40,
	0x02, 0x18, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x36, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05,
	0x82, 0x40, 0x02, 0x10, 0x01, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x75, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x75, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x75, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x65, 0x6c, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x43, 0x6d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x75, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x72, 0x75, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x72, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x72, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x3a, 0x58, 0x0a, 0x15, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x63, 0x6d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x6a, 0x6e, 0x70, 0x72, 0x43, 0x6d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e,
	0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_cmerror_data_proto_rawDescOnce sync.Once
	file_cmerror_data_proto_rawDescData []byte
)

func file_cmerror_data_proto_rawDescGZIP() []byte {
	file_cmerror_data_proto_rawDescOnce.Do(func() {
		file_cmerror_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cmerror_data_proto_rawDesc), len(file_cmerror_data_proto_rawDesc)))
	})
	return file_cmerror_data_proto_rawDescData
}

var file_cmerror_data_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cmerror_data_proto_goTypes = []any{
	(*ErrorData)(nil),              // 0: ErrorData
	(*ErrorResourceInfo)(nil),      // 1: ErrorResourceInfo
	(*CmerrorData)(nil),            // 2: CmerrorData
	(*JuniperNetworksSensors)(nil), // 3: JuniperNetworksSensors
}
var file_cmerror_data_proto_depIdxs = []int32{
	0, // 0: CmerrorData.error_item:type_name -> ErrorData
	1, // 1: CmerrorData.resource_item:type_name -> ErrorResourceInfo
	3, // 2: jnpr_cmerror_data_ext:extendee -> JuniperNetworksSensors
	2, // 3: jnpr_cmerror_data_ext:type_name -> CmerrorData
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	3, // [3:4] is the sub-list for extension type_name
	2, // [2:3] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cmerror_data_proto_init() }
func file_cmerror_data_proto_init() {
	if File_cmerror_data_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cmerror_data_proto_rawDesc), len(file_cmerror_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_cmerror_data_proto_goTypes,
		DependencyIndexes: file_cmerror_data_proto_depIdxs,
		MessageInfos:      file_cmerror_data_proto_msgTypes,
		ExtensionInfos:    file_cmerror_data_proto_extTypes,
	}.Build()
	File_cmerror_data_proto = out.File
	file_cmerror_data_proto_goTypes = nil
	file_cmerror_data_proto_depIdxs = nil
}
