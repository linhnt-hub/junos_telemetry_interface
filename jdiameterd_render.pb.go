// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: jdiameterd_render.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosDiameter struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	System        *JunosDiameterSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameter) Reset() {
	*x = JunosDiameter{}
	mi := &file_jdiameterd_render_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameter) ProtoMessage() {}

func (x *JunosDiameter) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameter.ProtoReflect.Descriptor instead.
func (*JunosDiameter) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0}
}

func (x *JunosDiameter) GetSystem() *JunosDiameterSystemType {
	if x != nil {
		return x.System
	}
	return nil
}

type JunosDiameterSystemType struct {
	state                protoimpl.MessageState                           `protogen:"open.v1"`
	SubscriberManagement *JunosDiameterSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JunosDiameterSystemType) Reset() {
	*x = JunosDiameterSystemType{}
	mi := &file_jdiameterd_render_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemType) ProtoMessage() {}

func (x *JunosDiameterSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosDiameterSystemType) GetSubscriberManagement() *JunosDiameterSystemTypeSubscriberManagementType {
	if x != nil {
		return x.SubscriberManagement
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementType struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	Aaa           *JunosDiameterSystemTypeSubscriberManagementTypeAaaType `protobuf:"bytes,151,opt,name=aaa" json:"aaa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementType{}
	mi := &file_jdiameterd_render_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementType) ProtoMessage() {}

func (x *JunosDiameterSystemTypeSubscriberManagementType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementType) GetAaa() *JunosDiameterSystemTypeSubscriberManagementTypeAaaType {
	if x != nil {
		return x.Aaa
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaType struct {
	state         protoimpl.MessageState                                              `protogen:"open.v1"`
	Diameter      *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType `protobuf:"bytes,151,opt,name=diameter" json:"diameter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaType{}
	mi := &file_jdiameterd_render_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaType) ProtoMessage() {}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaType) GetDiameter() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType {
	if x != nil {
		return x.Diameter
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType struct {
	state         protoimpl.MessageState                                                       `protogen:"open.v1"`
	Peers         *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType `protobuf:"bytes,151,opt,name=peers" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType{}
	mi := &file_jdiameterd_render_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType) ProtoMessage() {}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType) GetPeers() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType {
	if x != nil {
		return x.Peers
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType struct {
	state         protoimpl.MessageState                                                                 `protogen:"open.v1"`
	Peer          []*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList `protobuf:"bytes,151,rep,name=peer" json:"peer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType{}
	mi := &file_jdiameterd_render_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType) ProtoMessage() {}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType) GetPeer() []*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList {
	if x != nil {
		return x.Peer
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList struct {
	state         protoimpl.MessageState                                                                         `protogen:"open.v1"`
	PeerName      *string                                                                                        `protobuf:"bytes,52,opt,name=peer_name,json=peerName" json:"peer_name,omitempty"`
	Nasreq        *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType `protobuf:"bytes,151,opt,name=nasreq" json:"nasreq,omitempty"`
	Gx            *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType     `protobuf:"bytes,152,opt,name=gx" json:"gx,omitempty"`
	Gy            *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType     `protobuf:"bytes,153,opt,name=gy" json:"gy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList{}
	mi := &file_jdiameterd_render_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) GetPeerName() string {
	if x != nil && x.PeerName != nil {
		return *x.PeerName
	}
	return ""
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) GetNasreq() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType {
	if x != nil {
		return x.Nasreq
	}
	return nil
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) GetGx() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType {
	if x != nil {
		return x.Gx
	}
	return nil
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList) GetGy() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType {
	if x != nil {
		return x.Gy
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType struct {
	state         protoimpl.MessageState                                                                                         `protogen:"open.v1"`
	ResponseTime  *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType `protobuf:"bytes,151,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType{}
	mi := &file_jdiameterd_render_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType) GetResponseTime() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType struct {
	state         protoimpl.MessageState                                                                                     `protogen:"open.v1"`
	ResponseTime  *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType `protobuf:"bytes,151,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType{}
	mi := &file_jdiameterd_render_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 1}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType) GetResponseTime() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType struct {
	state         protoimpl.MessageState                                                                                     `protogen:"open.v1"`
	ResponseTime  *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType `protobuf:"bytes,151,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType{}
	mi := &file_jdiameterd_render_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 2}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType) GetResponseTime() *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	OneMinuteMinimumResponseTime *uint64                `protobuf:"varint,51,opt,name=one_minute_minimum_response_time,json=oneMinuteMinimumResponseTime" json:"one_minute_minimum_response_time,omitempty"`
	OneMinuteAverageResponseTime *uint64                `protobuf:"varint,52,opt,name=one_minute_average_response_time,json=oneMinuteAverageResponseTime" json:"one_minute_average_response_time,omitempty"`
	OneMinuteMaximumResponseTime *uint64                `protobuf:"varint,53,opt,name=one_minute_maximum_response_time,json=oneMinuteMaximumResponseTime" json:"one_minute_maximum_response_time,omitempty"`
	OneMinuteMessagesSent        *uint64                `protobuf:"varint,54,opt,name=one_minute_messages_sent,json=oneMinuteMessagesSent" json:"one_minute_messages_sent,omitempty"`
	OneMinuteMessagesReceived    *uint64                `protobuf:"varint,55,opt,name=one_minute_messages_received,json=oneMinuteMessagesReceived" json:"one_minute_messages_received,omitempty"`
	OneMinuteMessagesNoResponse  *uint64                `protobuf:"varint,56,opt,name=one_minute_messages_no_response,json=oneMinuteMessagesNoResponse" json:"one_minute_messages_no_response,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType{}
	mi := &file_jdiameterd_render_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 0, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) GetOneMinuteMinimumResponseTime() uint64 {
	if x != nil && x.OneMinuteMinimumResponseTime != nil {
		return *x.OneMinuteMinimumResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) GetOneMinuteAverageResponseTime() uint64 {
	if x != nil && x.OneMinuteAverageResponseTime != nil {
		return *x.OneMinuteAverageResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) GetOneMinuteMaximumResponseTime() uint64 {
	if x != nil && x.OneMinuteMaximumResponseTime != nil {
		return *x.OneMinuteMaximumResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) GetOneMinuteMessagesSent() uint64 {
	if x != nil && x.OneMinuteMessagesSent != nil {
		return *x.OneMinuteMessagesSent
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) GetOneMinuteMessagesReceived() uint64 {
	if x != nil && x.OneMinuteMessagesReceived != nil {
		return *x.OneMinuteMessagesReceived
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType) GetOneMinuteMessagesNoResponse() uint64 {
	if x != nil && x.OneMinuteMessagesNoResponse != nil {
		return *x.OneMinuteMessagesNoResponse
	}
	return 0
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	OneMinuteMinimumResponseTime *uint64                `protobuf:"varint,51,opt,name=one_minute_minimum_response_time,json=oneMinuteMinimumResponseTime" json:"one_minute_minimum_response_time,omitempty"`
	OneMinuteAverageResponseTime *uint64                `protobuf:"varint,52,opt,name=one_minute_average_response_time,json=oneMinuteAverageResponseTime" json:"one_minute_average_response_time,omitempty"`
	OneMinuteMaximumResponseTime *uint64                `protobuf:"varint,53,opt,name=one_minute_maximum_response_time,json=oneMinuteMaximumResponseTime" json:"one_minute_maximum_response_time,omitempty"`
	OneMinuteMessagesSent        *uint64                `protobuf:"varint,54,opt,name=one_minute_messages_sent,json=oneMinuteMessagesSent" json:"one_minute_messages_sent,omitempty"`
	OneMinuteMessagesReceived    *uint64                `protobuf:"varint,55,opt,name=one_minute_messages_received,json=oneMinuteMessagesReceived" json:"one_minute_messages_received,omitempty"`
	OneMinuteMessagesNoResponse  *uint64                `protobuf:"varint,56,opt,name=one_minute_messages_no_response,json=oneMinuteMessagesNoResponse" json:"one_minute_messages_no_response,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType{}
	mi := &file_jdiameterd_render_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 1, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) GetOneMinuteMinimumResponseTime() uint64 {
	if x != nil && x.OneMinuteMinimumResponseTime != nil {
		return *x.OneMinuteMinimumResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) GetOneMinuteAverageResponseTime() uint64 {
	if x != nil && x.OneMinuteAverageResponseTime != nil {
		return *x.OneMinuteAverageResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) GetOneMinuteMaximumResponseTime() uint64 {
	if x != nil && x.OneMinuteMaximumResponseTime != nil {
		return *x.OneMinuteMaximumResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) GetOneMinuteMessagesSent() uint64 {
	if x != nil && x.OneMinuteMessagesSent != nil {
		return *x.OneMinuteMessagesSent
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) GetOneMinuteMessagesReceived() uint64 {
	if x != nil && x.OneMinuteMessagesReceived != nil {
		return *x.OneMinuteMessagesReceived
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType) GetOneMinuteMessagesNoResponse() uint64 {
	if x != nil && x.OneMinuteMessagesNoResponse != nil {
		return *x.OneMinuteMessagesNoResponse
	}
	return 0
}

type JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	OneMinuteMinimumResponseTime *uint64                `protobuf:"varint,51,opt,name=one_minute_minimum_response_time,json=oneMinuteMinimumResponseTime" json:"one_minute_minimum_response_time,omitempty"`
	OneMinuteAverageResponseTime *uint64                `protobuf:"varint,52,opt,name=one_minute_average_response_time,json=oneMinuteAverageResponseTime" json:"one_minute_average_response_time,omitempty"`
	OneMinuteMaximumResponseTime *uint64                `protobuf:"varint,53,opt,name=one_minute_maximum_response_time,json=oneMinuteMaximumResponseTime" json:"one_minute_maximum_response_time,omitempty"`
	OneMinuteMessagesSent        *uint64                `protobuf:"varint,54,opt,name=one_minute_messages_sent,json=oneMinuteMessagesSent" json:"one_minute_messages_sent,omitempty"`
	OneMinuteMessagesReceived    *uint64                `protobuf:"varint,55,opt,name=one_minute_messages_received,json=oneMinuteMessagesReceived" json:"one_minute_messages_received,omitempty"`
	OneMinuteMessagesNoResponse  *uint64                `protobuf:"varint,56,opt,name=one_minute_messages_no_response,json=oneMinuteMessagesNoResponse" json:"one_minute_messages_no_response,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) Reset() {
	*x = JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType{}
	mi := &file_jdiameterd_render_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) ProtoMessage() {
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) ProtoReflect() protoreflect.Message {
	mi := &file_jdiameterd_render_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType.ProtoReflect.Descriptor instead.
func (*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) Descriptor() ([]byte, []int) {
	return file_jdiameterd_render_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0, 0, 2, 0}
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) GetOneMinuteMinimumResponseTime() uint64 {
	if x != nil && x.OneMinuteMinimumResponseTime != nil {
		return *x.OneMinuteMinimumResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) GetOneMinuteAverageResponseTime() uint64 {
	if x != nil && x.OneMinuteAverageResponseTime != nil {
		return *x.OneMinuteAverageResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) GetOneMinuteMaximumResponseTime() uint64 {
	if x != nil && x.OneMinuteMaximumResponseTime != nil {
		return *x.OneMinuteMaximumResponseTime
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) GetOneMinuteMessagesSent() uint64 {
	if x != nil && x.OneMinuteMessagesSent != nil {
		return *x.OneMinuteMessagesSent
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) GetOneMinuteMessagesReceived() uint64 {
	if x != nil && x.OneMinuteMessagesReceived != nil {
		return *x.OneMinuteMessagesReceived
	}
	return 0
}

func (x *JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType) GetOneMinuteMessagesNoResponse() uint64 {
	if x != nil && x.OneMinuteMessagesNoResponse != nil {
		return *x.OneMinuteMessagesNoResponse
	}
	return 0
}

var file_jdiameterd_render_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosDiameter)(nil),
		Field:         103,
		Name:          "jnpr_junos_diameter_ext",
		Tag:           "bytes,103,opt,name=jnpr_junos_diameter_ext",
		Filename:      "jdiameterd_render.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_diameter jnpr_junos_diameter_ext = 103;
	E_JnprJunosDiameterExt = &file_jdiameterd_render_proto_extTypes[0]
)

var File_jdiameterd_render_proto protoreflect.FileDescriptor

var file_jdiameterd_render_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x6a, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d,
	0x17, 0x0a, 0x0e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0xd4, 0x16, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xd6, 0x15, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x03, 0x61, 0x61, 0x61, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x03, 0x61, 0x61, 0x61, 0x1a, 0xe3, 0x14, 0x0a, 0x08, 0x61, 0x61, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x1a, 0xea, 0x13, 0x0a, 0x0d, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x6f, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x70,
	0x65, 0x65, 0x72, 0x73, 0x1a, 0xe7, 0x12, 0x0a, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x77, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x97, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x62, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x1a, 0xdf, 0x11, 0x0a,
	0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82,
	0x40, 0x02, 0x08, 0x01, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x87,
	0x01, 0x0a, 0x06, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x6e, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x12, 0x7b, 0x0a, 0x02, 0x67, 0x78, 0x18, 0x98,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x67, 0x78, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x02, 0x67, 0x78, 0x12, 0x7b, 0x0a, 0x02, 0x67, 0x79, 0x18, 0x99, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x02,
	0x67, 0x79, 0x1a, 0xe7, 0x04, 0x0a, 0x0b, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x81, 0x01, 0x2e, 0x6a,
	0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x64, 0x69,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x6e, 0x61, 0x73, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xac, 0x03,
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c,
	0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x20,
	0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c,
	0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18,
	0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15,
	0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6f, 0x6e, 0x65,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x6e, 0x6f,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1b, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xde, 0x04, 0x0a,
	0x07, 0x67, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x7d, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x67, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xac,
	0x03, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a,
	0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x18, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x15, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6f, 0x6e,
	0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x6f, 0x6e, 0x65, 0x5f, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x6e,
	0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1b, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xde, 0x04,
	0x0a, 0x07, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x7d, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x61, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0xac, 0x03, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46,
	0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1c, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x15, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x6f, 0x6e, 0x65, 0x5f, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6f,
	0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x6f, 0x6e, 0x65, 0x5f,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1b, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x5f,
	0x0a, 0x17, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x64, 0x69, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69,
	0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x14, 0x6a, 0x6e, 0x70, 0x72, 0x4a,
	0x75, 0x6e, 0x6f, 0x73, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x42,
	0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_jdiameterd_render_proto_rawDescOnce sync.Once
	file_jdiameterd_render_proto_rawDescData []byte
)

func file_jdiameterd_render_proto_rawDescGZIP() []byte {
	file_jdiameterd_render_proto_rawDescOnce.Do(func() {
		file_jdiameterd_render_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jdiameterd_render_proto_rawDesc), len(file_jdiameterd_render_proto_rawDesc)))
	})
	return file_jdiameterd_render_proto_rawDescData
}

var file_jdiameterd_render_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_jdiameterd_render_proto_goTypes = []any{
	(*JunosDiameter)(nil),                                                                                                 // 0: junos_diameter
	(*JunosDiameterSystemType)(nil),                                                                                       // 1: junos_diameter.system_type
	(*JunosDiameterSystemTypeSubscriberManagementType)(nil),                                                               // 2: junos_diameter.system_type.subscriber_management_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaType)(nil),                                                        // 3: junos_diameter.system_type.subscriber_management_type.aaa_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterType)(nil),                                            // 4: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersType)(nil),                                   // 5: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerList)(nil),                           // 6: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqType)(nil),                 // 7: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.nasreq_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxType)(nil),                     // 8: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gx_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyType)(nil),                     // 9: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gy_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListNasreqTypeResponseTimeType)(nil), // 10: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.nasreq_type.response_time_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGxTypeResponseTimeType)(nil),     // 11: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gx_type.response_time_type
	(*JunosDiameterSystemTypeSubscriberManagementTypeAaaTypeDiameterTypePeersTypePeerListGyTypeResponseTimeType)(nil),     // 12: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gy_type.response_time_type
	(*JuniperNetworksSensors)(nil),                                                                                        // 13: JuniperNetworksSensors
}
var file_jdiameterd_render_proto_depIdxs = []int32{
	1,  // 0: junos_diameter.system:type_name -> junos_diameter.system_type
	2,  // 1: junos_diameter.system_type.subscriber_management:type_name -> junos_diameter.system_type.subscriber_management_type
	3,  // 2: junos_diameter.system_type.subscriber_management_type.aaa:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type
	4,  // 3: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type
	5,  // 4: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type
	6,  // 5: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list
	7,  // 6: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.nasreq:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.nasreq_type
	8,  // 7: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gx:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gx_type
	9,  // 8: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gy:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gy_type
	10, // 9: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.nasreq_type.response_time:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.nasreq_type.response_time_type
	11, // 10: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gx_type.response_time:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gx_type.response_time_type
	12, // 11: junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gy_type.response_time:type_name -> junos_diameter.system_type.subscriber_management_type.aaa_type.diameter_type.peers_type.peer_list.gy_type.response_time_type
	13, // 12: jnpr_junos_diameter_ext:extendee -> JuniperNetworksSensors
	0,  // 13: jnpr_junos_diameter_ext:type_name -> junos_diameter
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	13, // [13:14] is the sub-list for extension type_name
	12, // [12:13] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_jdiameterd_render_proto_init() }
func file_jdiameterd_render_proto_init() {
	if File_jdiameterd_render_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jdiameterd_render_proto_rawDesc), len(file_jdiameterd_render_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_jdiameterd_render_proto_goTypes,
		DependencyIndexes: file_jdiameterd_render_proto_depIdxs,
		MessageInfos:      file_jdiameterd_render_proto_msgTypes,
		ExtensionInfos:    file_jdiameterd_render_proto_extTypes,
	}.Build()
	File_jdiameterd_render_proto = out.File
	file_jdiameterd_render_proto_goTypes = nil
	file_jdiameterd_render_proto_depIdxs = nil
}
