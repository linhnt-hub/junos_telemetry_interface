// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: bbe-smgd_ancp_stats_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosAncpStats struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	System        *JunosAncpStatsSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAncpStats) Reset() {
	*x = JunosAncpStats{}
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAncpStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAncpStats) ProtoMessage() {}

func (x *JunosAncpStats) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAncpStats.ProtoReflect.Descriptor instead.
func (*JunosAncpStats) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP(), []int{0}
}

func (x *JunosAncpStats) GetSystem() *JunosAncpStatsSystemType {
	if x != nil {
		return x.System
	}
	return nil
}

type JunosAncpStatsSystemType struct {
	state                protoimpl.MessageState                            `protogen:"open.v1"`
	SubscriberManagement *JunosAncpStatsSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JunosAncpStatsSystemType) Reset() {
	*x = JunosAncpStatsSystemType{}
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAncpStatsSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAncpStatsSystemType) ProtoMessage() {}

func (x *JunosAncpStatsSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAncpStatsSystemType.ProtoReflect.Descriptor instead.
func (*JunosAncpStatsSystemType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosAncpStatsSystemType) GetSubscriberManagement() *JunosAncpStatsSystemTypeSubscriberManagementType {
	if x != nil {
		return x.SubscriberManagement
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementType struct {
	state         protoimpl.MessageState                                             `protogen:"open.v1"`
	AccessNetwork *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType `protobuf:"bytes,151,opt,name=access_network,json=accessNetwork" json:"access_network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementType) Reset() {
	*x = JunosAncpStatsSystemTypeSubscriberManagementType{}
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAncpStatsSystemTypeSubscriberManagementType) ProtoMessage() {}

func (x *JunosAncpStatsSystemTypeSubscriberManagementType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAncpStatsSystemTypeSubscriberManagementType.ProtoReflect.Descriptor instead.
func (*JunosAncpStatsSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementType) GetAccessNetwork() *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType {
	if x != nil {
		return x.AccessNetwork
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType struct {
	state         protoimpl.MessageState                                                     `protogen:"open.v1"`
	Ancp          *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType `protobuf:"bytes,151,opt,name=ancp" json:"ancp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Reset() {
	*x = JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType{}
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) ProtoMessage() {}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType.ProtoReflect.Descriptor instead.
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) GetAncp() *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType {
	if x != nil {
		return x.Ancp
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType struct {
	state         protoimpl.MessageState                                                                `protogen:"open.v1"`
	Adapter       *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType `protobuf:"bytes,151,opt,name=adapter" json:"adapter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Reset() {
	*x = JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType{}
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) ProtoMessage() {}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType.ProtoReflect.Descriptor instead.
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) GetAdapter() *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType {
	if x != nil {
		return x.Adapter
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	MappedDynamicSubscriberCount *uint32                `protobuf:"varint,51,opt,name=mapped_dynamic_subscriber_count,json=mappedDynamicSubscriberCount" json:"mapped_dynamic_subscriber_count,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Reset() {
	*x = JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType{}
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) ProtoMessage() {
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) ProtoReflect() protoreflect.Message {
	mi := &file_bbe_smgd_ancp_stats_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType.ProtoReflect.Descriptor instead.
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Descriptor() ([]byte, []int) {
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0}
}

func (x *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) GetMappedDynamicSubscriberCount() uint32 {
	if x != nil && x.MappedDynamicSubscriberCount != nil {
		return *x.MappedDynamicSubscriberCount
	}
	return 0
}

var file_bbe_smgd_ancp_stats_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosAncpStats)(nil),
		Field:         34,
		Name:          "jnpr_junos_ancp_stats_ext",
		Tag:           "bytes,34,opt,name=jnpr_junos_ancp_stats_ext",
		Filename:      "bbe-smgd_ancp_stats_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_ancp_stats jnpr_junos_ancp_stats_ext = 34;
	E_JnprJunosAncpStatsExt = &file_bbe_smgd_ancp_stats_oc_proto_extTypes[0]
)

var File_bbe_smgd_ancp_stats_oc_proto protoreflect.FileDescriptor

var file_bbe_smgd_ancp_stats_oc_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x62, 0x62, 0x65, 0x2d, 0x73, 0x6d, 0x67, 0x64, 0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x05, 0x0a, 0x10, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x6e,
	0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x6f,
	0x73, 0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x1a, 0xfc, 0x04, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x6e, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0xfc, 0x03, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x74, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x1a, 0xe7, 0x02, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6b, 0x0a,
	0x04, 0x61, 0x6e, 0x63, 0x70, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x6a,
	0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x6e, 0x63, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x61, 0x6e, 0x63, 0x70, 0x1a, 0xe2, 0x01, 0x0a, 0x09, 0x61,
	0x6e, 0x63, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x7e, 0x0a, 0x07, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x6a, 0x75, 0x6e,
	0x6f, 0x73, 0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x1a, 0x55, 0x0a, 0x0c, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x1c, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3a,
	0x64, 0x0a, 0x19, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x6e,
	0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a,
	0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x75,
	0x6e, 0x6f, 0x73, 0x5f, 0x61, 0x6e, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x52, 0x15,
	0x6a, 0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x41, 0x6e, 0x63, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73,
	0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65,
})

var (
	file_bbe_smgd_ancp_stats_oc_proto_rawDescOnce sync.Once
	file_bbe_smgd_ancp_stats_oc_proto_rawDescData []byte
)

func file_bbe_smgd_ancp_stats_oc_proto_rawDescGZIP() []byte {
	file_bbe_smgd_ancp_stats_oc_proto_rawDescOnce.Do(func() {
		file_bbe_smgd_ancp_stats_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bbe_smgd_ancp_stats_oc_proto_rawDesc), len(file_bbe_smgd_ancp_stats_oc_proto_rawDesc)))
	})
	return file_bbe_smgd_ancp_stats_oc_proto_rawDescData
}

var file_bbe_smgd_ancp_stats_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bbe_smgd_ancp_stats_oc_proto_goTypes = []any{
	(*JunosAncpStats)(nil),                                                                       // 0: junos_ancp_stats
	(*JunosAncpStatsSystemType)(nil),                                                             // 1: junos_ancp_stats.system_type
	(*JunosAncpStatsSystemTypeSubscriberManagementType)(nil),                                     // 2: junos_ancp_stats.system_type.subscriber_management_type
	(*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType)(nil),                    // 3: junos_ancp_stats.system_type.subscriber_management_type.access_network_type
	(*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType)(nil),            // 4: junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type
	(*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType)(nil), // 5: junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type.adapter_type
	(*JuniperNetworksSensors)(nil),                                                               // 6: JuniperNetworksSensors
}
var file_bbe_smgd_ancp_stats_oc_proto_depIdxs = []int32{
	1, // 0: junos_ancp_stats.system:type_name -> junos_ancp_stats.system_type
	2, // 1: junos_ancp_stats.system_type.subscriber_management:type_name -> junos_ancp_stats.system_type.subscriber_management_type
	3, // 2: junos_ancp_stats.system_type.subscriber_management_type.access_network:type_name -> junos_ancp_stats.system_type.subscriber_management_type.access_network_type
	4, // 3: junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp:type_name -> junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type
	5, // 4: junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type.adapter:type_name -> junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type.adapter_type
	6, // 5: jnpr_junos_ancp_stats_ext:extendee -> JuniperNetworksSensors
	0, // 6: jnpr_junos_ancp_stats_ext:type_name -> junos_ancp_stats
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	6, // [6:7] is the sub-list for extension type_name
	5, // [5:6] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_bbe_smgd_ancp_stats_oc_proto_init() }
func file_bbe_smgd_ancp_stats_oc_proto_init() {
	if File_bbe_smgd_ancp_stats_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bbe_smgd_ancp_stats_oc_proto_rawDesc), len(file_bbe_smgd_ancp_stats_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_bbe_smgd_ancp_stats_oc_proto_goTypes,
		DependencyIndexes: file_bbe_smgd_ancp_stats_oc_proto_depIdxs,
		MessageInfos:      file_bbe_smgd_ancp_stats_oc_proto_msgTypes,
		ExtensionInfos:    file_bbe_smgd_ancp_stats_oc_proto_extTypes,
	}.Build()
	File_bbe_smgd_ancp_stats_oc_proto = out.File
	file_bbe_smgd_ancp_stats_oc_proto_goTypes = nil
	file_bbe_smgd_ancp_stats_oc_proto_depIdxs = nil
}
