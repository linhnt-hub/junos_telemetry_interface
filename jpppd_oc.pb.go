// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: jpppd_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JunosPpp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        *JunosPppSystemType    `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPpp) Reset() {
	*x = JunosPpp{}
	mi := &file_jpppd_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPpp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPpp) ProtoMessage() {}

func (x *JunosPpp) ProtoReflect() protoreflect.Message {
	mi := &file_jpppd_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPpp.ProtoReflect.Descriptor instead.
func (*JunosPpp) Descriptor() ([]byte, []int) {
	return file_jpppd_oc_proto_rawDescGZIP(), []int{0}
}

func (x *JunosPpp) GetSystem() *JunosPppSystemType {
	if x != nil {
		return x.System
	}
	return nil
}

type JunosPppSystemType struct {
	state                protoimpl.MessageState                      `protogen:"open.v1"`
	SubscriberManagement *JunosPppSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JunosPppSystemType) Reset() {
	*x = JunosPppSystemType{}
	mi := &file_jpppd_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppSystemType) ProtoMessage() {}

func (x *JunosPppSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_jpppd_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppSystemType.ProtoReflect.Descriptor instead.
func (*JunosPppSystemType) Descriptor() ([]byte, []int) {
	return file_jpppd_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JunosPppSystemType) GetSubscriberManagement() *JunosPppSystemTypeSubscriberManagementType {
	if x != nil {
		return x.SubscriberManagement
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementType struct {
	state           protoimpl.MessageState                                         `protogen:"open.v1"`
	ClientProtocols *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType `protobuf:"bytes,151,opt,name=client_protocols,json=clientProtocols" json:"client_protocols,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JunosPppSystemTypeSubscriberManagementType) Reset() {
	*x = JunosPppSystemTypeSubscriberManagementType{}
	mi := &file_jpppd_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppSystemTypeSubscriberManagementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppSystemTypeSubscriberManagementType) ProtoMessage() {}

func (x *JunosPppSystemTypeSubscriberManagementType) ProtoReflect() protoreflect.Message {
	mi := &file_jpppd_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppSystemTypeSubscriberManagementType.ProtoReflect.Descriptor instead.
func (*JunosPppSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return file_jpppd_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JunosPppSystemTypeSubscriberManagementType) GetClientProtocols() *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType {
	if x != nil {
		return x.ClientProtocols
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType struct {
	state         protoimpl.MessageState                                                `protogen:"open.v1"`
	Ppp           *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType `protobuf:"bytes,151,opt,name=ppp" json:"ppp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Reset() {
	*x = JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType{}
	mi := &file_jpppd_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) ProtoMessage() {}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) ProtoReflect() protoreflect.Message {
	mi := &file_jpppd_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType.ProtoReflect.Descriptor instead.
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Descriptor() ([]byte, []int) {
	return file_jpppd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) GetPpp() *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType {
	if x != nil {
		return x.Ppp
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType struct {
	state         protoimpl.MessageState                                                              `protogen:"open.v1"`
	Statistics    *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Reset() {
	*x = JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType{}
	mi := &file_jpppd_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) ProtoMessage() {}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) ProtoReflect() protoreflect.Message {
	mi := &file_jpppd_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType.ProtoReflect.Descriptor instead.
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Descriptor() ([]byte, []int) {
	return file_jpppd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) GetStatistics() *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	PppStatsTotalSubscriberSessions   *uint32                `protobuf:"varint,51,opt,name=ppp_stats_total_subscriber_sessions,json=pppStatsTotalSubscriberSessions" json:"ppp_stats_total_subscriber_sessions,omitempty"`
	PppStatsSessionsDisablePhase      *uint32                `protobuf:"varint,52,opt,name=ppp_stats_sessions_disable_phase,json=pppStatsSessionsDisablePhase" json:"ppp_stats_sessions_disable_phase,omitempty"`
	PppStatsSessionsEstablishPhase    *uint32                `protobuf:"varint,53,opt,name=ppp_stats_sessions_establish_phase,json=pppStatsSessionsEstablishPhase" json:"ppp_stats_sessions_establish_phase,omitempty"`
	PppStatsSessionsNetworkPhase      *uint32                `protobuf:"varint,54,opt,name=ppp_stats_sessions_network_phase,json=pppStatsSessionsNetworkPhase" json:"ppp_stats_sessions_network_phase,omitempty"`
	PppStatsSessionsAuthenticatePhase *uint32                `protobuf:"varint,55,opt,name=ppp_stats_sessions_authenticate_phase,json=pppStatsSessionsAuthenticatePhase" json:"ppp_stats_sessions_authenticate_phase,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Reset() {
	*x = JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType{}
	mi := &file_jpppd_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) ProtoMessage() {
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) ProtoReflect() protoreflect.Message {
	mi := &file_jpppd_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType.ProtoReflect.Descriptor instead.
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Descriptor() ([]byte, []int) {
	return file_jpppd_oc_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0, 0}
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsTotalSubscriberSessions() uint32 {
	if x != nil && x.PppStatsTotalSubscriberSessions != nil {
		return *x.PppStatsTotalSubscriberSessions
	}
	return 0
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsDisablePhase() uint32 {
	if x != nil && x.PppStatsSessionsDisablePhase != nil {
		return *x.PppStatsSessionsDisablePhase
	}
	return 0
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsEstablishPhase() uint32 {
	if x != nil && x.PppStatsSessionsEstablishPhase != nil {
		return *x.PppStatsSessionsEstablishPhase
	}
	return 0
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsNetworkPhase() uint32 {
	if x != nil && x.PppStatsSessionsNetworkPhase != nil {
		return *x.PppStatsSessionsNetworkPhase
	}
	return 0
}

func (x *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsAuthenticatePhase() uint32 {
	if x != nil && x.PppStatsSessionsAuthenticatePhase != nil {
		return *x.PppStatsSessionsAuthenticatePhase
	}
	return 0
}

var file_jpppd_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*JunosPpp)(nil),
		Field:         45,
		Name:          "jnpr_junos_ppp_ext",
		Tag:           "bytes,45,opt,name=jnpr_junos_ppp_ext",
		Filename:      "jpppd_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional junos_ppp jnpr_junos_ppp_ext = 45;
	E_JnprJunosPppExt = &file_jpppd_oc_proto_extTypes[0]
)

var File_jpppd_oc_proto protoreflect.FileDescriptor

var file_jpppd_oc_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x6a, 0x70, 0x70, 0x70, 0x64, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x07, 0x0a, 0x09, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x70, 0x70, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x1a, 0xaa, 0x07, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x67, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x97, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xb1, 0x06,
	0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x73, 0x0a, 0x10,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x70, 0x70, 0x70, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x1a, 0x9d, 0x05, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x03, 0x70,
	0x70, 0x70, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x6a, 0x75, 0x6e, 0x6f,
	0x73, 0x5f, 0x70, 0x70, 0x70, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x70, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x03, 0x70, 0x70, 0x70,
	0x1a, 0x9e, 0x04, 0x0a, 0x08, 0x70, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x81, 0x01,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70, 0x70, 0x70, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x70, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x1a, 0x8d, 0x03, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x23, 0x70, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x1f, 0x70, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x70, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x70,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x70,
	0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x70, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x70, 0x70, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x1c, 0x70, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x25, 0x70, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x21,
	0x70, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x3a, 0x50, 0x0a, 0x12, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f,
	0x70, 0x70, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x70,
	0x70, 0x70, 0x52, 0x0f, 0x6a, 0x6e, 0x70, 0x72, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x50, 0x70, 0x70,
	0x45, 0x78, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65,
})

var (
	file_jpppd_oc_proto_rawDescOnce sync.Once
	file_jpppd_oc_proto_rawDescData []byte
)

func file_jpppd_oc_proto_rawDescGZIP() []byte {
	file_jpppd_oc_proto_rawDescOnce.Do(func() {
		file_jpppd_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jpppd_oc_proto_rawDesc), len(file_jpppd_oc_proto_rawDesc)))
	})
	return file_jpppd_oc_proto_rawDescData
}

var file_jpppd_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_jpppd_oc_proto_goTypes = []any{
	(*JunosPpp)(nil),                                   // 0: junos_ppp
	(*JunosPppSystemType)(nil),                         // 1: junos_ppp.system_type
	(*JunosPppSystemTypeSubscriberManagementType)(nil), // 2: junos_ppp.system_type.subscriber_management_type
	(*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType)(nil),                      // 3: junos_ppp.system_type.subscriber_management_type.client_protocols_type
	(*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType)(nil),               // 4: junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type
	(*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType)(nil), // 5: junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type.statistics_type
	(*JuniperNetworksSensors)(nil), // 6: JuniperNetworksSensors
}
var file_jpppd_oc_proto_depIdxs = []int32{
	1, // 0: junos_ppp.system:type_name -> junos_ppp.system_type
	2, // 1: junos_ppp.system_type.subscriber_management:type_name -> junos_ppp.system_type.subscriber_management_type
	3, // 2: junos_ppp.system_type.subscriber_management_type.client_protocols:type_name -> junos_ppp.system_type.subscriber_management_type.client_protocols_type
	4, // 3: junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp:type_name -> junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type
	5, // 4: junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type.statistics:type_name -> junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type.statistics_type
	6, // 5: jnpr_junos_ppp_ext:extendee -> JuniperNetworksSensors
	0, // 6: jnpr_junos_ppp_ext:type_name -> junos_ppp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	6, // [6:7] is the sub-list for extension type_name
	5, // [5:6] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_jpppd_oc_proto_init() }
func file_jpppd_oc_proto_init() {
	if File_jpppd_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jpppd_oc_proto_rawDesc), len(file_jpppd_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_jpppd_oc_proto_goTypes,
		DependencyIndexes: file_jpppd_oc_proto_depIdxs,
		MessageInfos:      file_jpppd_oc_proto_msgTypes,
		ExtensionInfos:    file_jpppd_oc_proto_extTypes,
	}.Build()
	File_jpppd_oc_proto = out.File
	file_jpppd_oc_proto_goTypes = nil
	file_jpppd_oc_proto_depIdxs = nil
}
