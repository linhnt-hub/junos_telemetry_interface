// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: l2cpd_oc.proto

package junos_telemetry_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LldpL2Cp struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	State         *LldpL2CpStateType      `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Interfaces    *LldpL2CpInterfacesType `protobuf:"bytes,152,opt,name=interfaces" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2Cp) Reset() {
	*x = LldpL2Cp{}
	mi := &file_l2cpd_oc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2Cp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2Cp) ProtoMessage() {}

func (x *LldpL2Cp) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2Cp.ProtoReflect.Descriptor instead.
func (*LldpL2Cp) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0}
}

func (x *LldpL2Cp) GetState() *LldpL2CpStateType {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *LldpL2Cp) GetInterfaces() *LldpL2CpInterfacesType {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type LldpL2CpStateType struct {
	state                    protoimpl.MessageState         `protogen:"open.v1"`
	Enabled                  *bool                          `protobuf:"varint,91,opt,name=enabled" json:"enabled,omitempty"`
	HelloTimer               *uint64                        `protobuf:"varint,92,opt,name=hello_timer,json=helloTimer" json:"hello_timer,omitempty"`
	SuppressTlvAdvertisement []string                       `protobuf:"bytes,93,rep,name=suppress_tlv_advertisement,json=suppressTlvAdvertisement" json:"suppress_tlv_advertisement,omitempty"`
	SystemName               *string                        `protobuf:"bytes,51,opt,name=system_name,json=systemName" json:"system_name,omitempty"`
	SystemDescription        *string                        `protobuf:"bytes,52,opt,name=system_description,json=systemDescription" json:"system_description,omitempty"`
	ChassisId                *string                        `protobuf:"bytes,53,opt,name=chassis_id,json=chassisId" json:"chassis_id,omitempty"`
	ChassisIdType            *string                        `protobuf:"bytes,54,opt,name=chassis_id_type,json=chassisIdType" json:"chassis_id_type,omitempty"`
	Counters                 *LldpL2CpStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	LocPortIdType            *string                        `protobuf:"bytes,101,opt,name=loc_port_id_type,json=locPortIdType" json:"loc_port_id_type,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *LldpL2CpStateType) Reset() {
	*x = LldpL2CpStateType{}
	mi := &file_l2cpd_oc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpStateType) ProtoMessage() {}

func (x *LldpL2CpStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpStateType.ProtoReflect.Descriptor instead.
func (*LldpL2CpStateType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LldpL2CpStateType) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *LldpL2CpStateType) GetHelloTimer() uint64 {
	if x != nil && x.HelloTimer != nil {
		return *x.HelloTimer
	}
	return 0
}

func (x *LldpL2CpStateType) GetSuppressTlvAdvertisement() []string {
	if x != nil {
		return x.SuppressTlvAdvertisement
	}
	return nil
}

func (x *LldpL2CpStateType) GetSystemName() string {
	if x != nil && x.SystemName != nil {
		return *x.SystemName
	}
	return ""
}

func (x *LldpL2CpStateType) GetSystemDescription() string {
	if x != nil && x.SystemDescription != nil {
		return *x.SystemDescription
	}
	return ""
}

func (x *LldpL2CpStateType) GetChassisId() string {
	if x != nil && x.ChassisId != nil {
		return *x.ChassisId
	}
	return ""
}

func (x *LldpL2CpStateType) GetChassisIdType() string {
	if x != nil && x.ChassisIdType != nil {
		return *x.ChassisIdType
	}
	return ""
}

func (x *LldpL2CpStateType) GetCounters() *LldpL2CpStateTypeCountersType {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *LldpL2CpStateType) GetLocPortIdType() string {
	if x != nil && x.LocPortIdType != nil {
		return *x.LocPortIdType
	}
	return ""
}

type LldpL2CpInterfacesType struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Interface     []*LldpL2CpInterfacesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesType) Reset() {
	*x = LldpL2CpInterfacesType{}
	mi := &file_l2cpd_oc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesType) ProtoMessage() {}

func (x *LldpL2CpInterfacesType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1}
}

func (x *LldpL2CpInterfacesType) GetInterface() []*LldpL2CpInterfacesTypeInterfaceList {
	if x != nil {
		return x.Interface
	}
	return nil
}

type LldpL2CpStateTypeCountersType struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FrameIn        *uint64                `protobuf:"varint,51,opt,name=frame_in,json=frameIn" json:"frame_in,omitempty"`
	FrameOut       *uint64                `protobuf:"varint,52,opt,name=frame_out,json=frameOut" json:"frame_out,omitempty"`
	FrameErrorIn   *uint64                `protobuf:"varint,53,opt,name=frame_error_in,json=frameErrorIn" json:"frame_error_in,omitempty"`
	FrameDiscard   *uint64                `protobuf:"varint,54,opt,name=frame_discard,json=frameDiscard" json:"frame_discard,omitempty"`
	TlvDiscard     *uint64                `protobuf:"varint,55,opt,name=tlv_discard,json=tlvDiscard" json:"tlv_discard,omitempty"`
	TlvUnknown     *uint64                `protobuf:"varint,56,opt,name=tlv_unknown,json=tlvUnknown" json:"tlv_unknown,omitempty"`
	LastClear      *string                `protobuf:"bytes,57,opt,name=last_clear,json=lastClear" json:"last_clear,omitempty"`
	TlvAccepted    *uint64                `protobuf:"varint,58,opt,name=tlv_accepted,json=tlvAccepted" json:"tlv_accepted,omitempty"`
	EntriesAgedOut *uint64                `protobuf:"varint,59,opt,name=entries_aged_out,json=entriesAgedOut" json:"entries_aged_out,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LldpL2CpStateTypeCountersType) Reset() {
	*x = LldpL2CpStateTypeCountersType{}
	mi := &file_l2cpd_oc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpStateTypeCountersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpStateTypeCountersType) ProtoMessage() {}

func (x *LldpL2CpStateTypeCountersType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpStateTypeCountersType.ProtoReflect.Descriptor instead.
func (*LldpL2CpStateTypeCountersType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *LldpL2CpStateTypeCountersType) GetFrameIn() uint64 {
	if x != nil && x.FrameIn != nil {
		return *x.FrameIn
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetFrameOut() uint64 {
	if x != nil && x.FrameOut != nil {
		return *x.FrameOut
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetFrameErrorIn() uint64 {
	if x != nil && x.FrameErrorIn != nil {
		return *x.FrameErrorIn
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetFrameDiscard() uint64 {
	if x != nil && x.FrameDiscard != nil {
		return *x.FrameDiscard
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetTlvDiscard() uint64 {
	if x != nil && x.TlvDiscard != nil {
		return *x.TlvDiscard
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetTlvUnknown() uint64 {
	if x != nil && x.TlvUnknown != nil {
		return *x.TlvUnknown
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetLastClear() string {
	if x != nil && x.LastClear != nil {
		return *x.LastClear
	}
	return ""
}

func (x *LldpL2CpStateTypeCountersType) GetTlvAccepted() uint64 {
	if x != nil && x.TlvAccepted != nil {
		return *x.TlvAccepted
	}
	return 0
}

func (x *LldpL2CpStateTypeCountersType) GetEntriesAgedOut() uint64 {
	if x != nil && x.EntriesAgedOut != nil {
		return *x.EntriesAgedOut
	}
	return 0
}

type LldpL2CpInterfacesTypeInterfaceList struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Name          *string                                           `protobuf:"bytes,52,opt,name=name" json:"name,omitempty"`
	State         *LldpL2CpInterfacesTypeInterfaceListStateType     `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Neighbors     *LldpL2CpInterfacesTypeInterfaceListNeighborsType `protobuf:"bytes,152,opt,name=neighbors" json:"neighbors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceList) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceList{}
	mi := &file_l2cpd_oc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceList) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceList) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceList.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceList) GetState() *LldpL2CpInterfacesTypeInterfaceListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *LldpL2CpInterfacesTypeInterfaceList) GetNeighbors() *LldpL2CpInterfacesTypeInterfaceListNeighborsType {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListStateType struct {
	state              protoimpl.MessageState                                    `protogen:"open.v1"`
	Name               *string                                                   `protobuf:"bytes,53,opt,name=name" json:"name,omitempty"`
	Enabled            *bool                                                     `protobuf:"varint,54,opt,name=enabled" json:"enabled,omitempty"`
	Counters           *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	LocPortId          *string                                                   `protobuf:"bytes,55,opt,name=loc_port_id,json=locPortId" json:"loc_port_id,omitempty"`
	LocPortDescription *string                                                   `protobuf:"bytes,56,opt,name=loc_port_description,json=locPortDescription" json:"loc_port_description,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListStateType{}
	mi := &file_l2cpd_oc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListStateType) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListStateType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) GetCounters() *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) GetLocPortId() string {
	if x != nil && x.LocPortId != nil {
		return *x.LocPortId
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateType) GetLocPortDescription() string {
	if x != nil && x.LocPortDescription != nil {
		return *x.LocPortDescription
	}
	return ""
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsType struct {
	state         protoimpl.MessageState                                          `protogen:"open.v1"`
	Neighbor      []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList `protobuf:"bytes,151,rep,name=neighbor" json:"neighbor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsType{}
	mi := &file_l2cpd_oc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsType) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsType) GetNeighbor() []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList {
	if x != nil {
		return x.Neighbor
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameIn       *uint64                `protobuf:"varint,57,opt,name=frame_in,json=frameIn" json:"frame_in,omitempty"`
	FrameOut      *uint64                `protobuf:"varint,58,opt,name=frame_out,json=frameOut" json:"frame_out,omitempty"`
	FrameErrorIn  *uint64                `protobuf:"varint,59,opt,name=frame_error_in,json=frameErrorIn" json:"frame_error_in,omitempty"`
	FrameDiscard  *uint64                `protobuf:"varint,60,opt,name=frame_discard,json=frameDiscard" json:"frame_discard,omitempty"`
	TlvDiscard    *uint64                `protobuf:"varint,61,opt,name=tlv_discard,json=tlvDiscard" json:"tlv_discard,omitempty"`
	TlvUnknown    *uint64                `protobuf:"varint,62,opt,name=tlv_unknown,json=tlvUnknown" json:"tlv_unknown,omitempty"`
	LastClear     *string                `protobuf:"bytes,63,opt,name=last_clear,json=lastClear" json:"last_clear,omitempty"`
	FrameErrorOut *uint64                `protobuf:"varint,64,opt,name=frame_error_out,json=frameErrorOut" json:"frame_error_out,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType{}
	mi := &file_l2cpd_oc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 0, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameIn() uint64 {
	if x != nil && x.FrameIn != nil {
		return *x.FrameIn
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameOut() uint64 {
	if x != nil && x.FrameOut != nil {
		return *x.FrameOut
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameErrorIn() uint64 {
	if x != nil && x.FrameErrorIn != nil {
		return *x.FrameErrorIn
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameDiscard() uint64 {
	if x != nil && x.FrameDiscard != nil {
		return *x.FrameDiscard
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetTlvDiscard() uint64 {
	if x != nil && x.TlvDiscard != nil {
		return *x.TlvDiscard
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetTlvUnknown() uint64 {
	if x != nil && x.TlvUnknown != nil {
		return *x.TlvUnknown
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetLastClear() string {
	if x != nil && x.LastClear != nil {
		return *x.LastClear
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameErrorOut() uint64 {
	if x != nil && x.FrameErrorOut != nil {
		return *x.FrameErrorOut
	}
	return 0
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList struct {
	state         protoimpl.MessageState                                                        `protogen:"open.v1"`
	Id            *string                                                                       `protobuf:"bytes,66,opt,name=id" json:"id,omitempty"`
	State         *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType        `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	CustomTlvs    *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType   `protobuf:"bytes,152,opt,name=custom_tlvs,json=customTlvs" json:"custom_tlvs,omitempty"`
	Capabilities  *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType `protobuf:"bytes,153,opt,name=capabilities" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList{}
	mi := &file_l2cpd_oc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetState() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetCustomTlvs() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType {
	if x != nil {
		return x.CustomTlvs
	}
	return nil
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetCapabilities() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	SystemName            *string                `protobuf:"bytes,67,opt,name=system_name,json=systemName" json:"system_name,omitempty"`
	SystemDescription     *string                `protobuf:"bytes,68,opt,name=system_description,json=systemDescription" json:"system_description,omitempty"`
	ChassisId             *string                `protobuf:"bytes,69,opt,name=chassis_id,json=chassisId" json:"chassis_id,omitempty"`
	ChassisIdType         *string                `protobuf:"bytes,70,opt,name=chassis_id_type,json=chassisIdType" json:"chassis_id_type,omitempty"`
	Id                    *string                `protobuf:"bytes,71,opt,name=id" json:"id,omitempty"`
	Age                   *uint64                `protobuf:"varint,72,opt,name=age" json:"age,omitempty"`
	LastUpdate            *int64                 `protobuf:"varint,73,opt,name=last_update,json=lastUpdate" json:"last_update,omitempty"`
	Ttl                   *uint32                `protobuf:"varint,79,opt,name=ttl" json:"ttl,omitempty"`
	PortId                *string                `protobuf:"bytes,74,opt,name=port_id,json=portId" json:"port_id,omitempty"`
	PortIdType            *string                `protobuf:"bytes,75,opt,name=port_id_type,json=portIdType" json:"port_id_type,omitempty"`
	PortDescription       *string                `protobuf:"bytes,76,opt,name=port_description,json=portDescription" json:"port_description,omitempty"`
	ManagementAddress     *string                `protobuf:"bytes,77,opt,name=management_address,json=managementAddress" json:"management_address,omitempty"`
	ManagementAddressType *string                `protobuf:"bytes,78,opt,name=management_address_type,json=managementAddressType" json:"management_address_type,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType{}
	mi := &file_l2cpd_oc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetSystemName() string {
	if x != nil && x.SystemName != nil {
		return *x.SystemName
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetSystemDescription() string {
	if x != nil && x.SystemDescription != nil {
		return *x.SystemDescription
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetChassisId() string {
	if x != nil && x.ChassisId != nil {
		return *x.ChassisId
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetChassisIdType() string {
	if x != nil && x.ChassisIdType != nil {
		return *x.ChassisIdType
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetAge() uint64 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetLastUpdate() int64 {
	if x != nil && x.LastUpdate != nil {
		return *x.LastUpdate
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetTtl() uint32 {
	if x != nil && x.Ttl != nil {
		return *x.Ttl
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetPortId() string {
	if x != nil && x.PortId != nil {
		return *x.PortId
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetPortIdType() string {
	if x != nil && x.PortIdType != nil {
		return *x.PortIdType
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetPortDescription() string {
	if x != nil && x.PortDescription != nil {
		return *x.PortDescription
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetManagementAddress() string {
	if x != nil && x.ManagementAddress != nil {
		return *x.ManagementAddress
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetManagementAddressType() string {
	if x != nil && x.ManagementAddressType != nil {
		return *x.ManagementAddressType
	}
	return ""
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType struct {
	state         protoimpl.MessageState                                                               `protogen:"open.v1"`
	Tlv           []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList `protobuf:"bytes,79,rep,name=tlv" json:"tlv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType{}
	mi := &file_l2cpd_oc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 1}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) GetTlv() []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList {
	if x != nil {
		return x.Tlv
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType struct {
	state         protoimpl.MessageState                                                                        `protogen:"open.v1"`
	Capability    []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList `protobuf:"bytes,151,rep,name=capability" json:"capability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType{}
	mi := &file_l2cpd_oc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) ProtoMessage() {}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 2}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) GetCapability() []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList {
	if x != nil {
		return x.Capability
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList struct {
	state         protoimpl.MessageState                                                                      `protogen:"open.v1"`
	Type          *int32                                                                                      `protobuf:"varint,80,opt,name=type" json:"type,omitempty"`
	Oui           *string                                                                                     `protobuf:"bytes,81,opt,name=oui" json:"oui,omitempty"`
	OuiSubtype    *string                                                                                     `protobuf:"bytes,82,opt,name=oui_subtype,json=ouiSubtype" json:"oui_subtype,omitempty"`
	State         *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList{}
	mi := &file_l2cpd_oc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) ProtoMessage() {
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 1, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetOui() string {
	if x != nil && x.Oui != nil {
		return *x.Oui
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetOuiSubtype() string {
	if x != nil && x.OuiSubtype != nil {
		return *x.OuiSubtype
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetState() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,83,opt,name=type" json:"type,omitempty"`
	Oui           *string                `protobuf:"bytes,84,opt,name=oui" json:"oui,omitempty"`
	OuiSubtype    *string                `protobuf:"bytes,85,opt,name=oui_subtype,json=ouiSubtype" json:"oui_subtype,omitempty"`
	Value         *string                `protobuf:"bytes,86,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType{}
	mi := &file_l2cpd_oc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) ProtoMessage() {
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 1, 0, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetOui() string {
	if x != nil && x.Oui != nil {
		return *x.Oui
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetOuiSubtype() string {
	if x != nil && x.OuiSubtype != nil {
		return *x.OuiSubtype
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList struct {
	state         protoimpl.MessageState                                                                               `protogen:"open.v1"`
	Name          *string                                                                                              `protobuf:"bytes,88,opt,name=name" json:"name,omitempty"`
	State         *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList{}
	mi := &file_l2cpd_oc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) ProtoMessage() {
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 2, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) GetState() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType {
	if x != nil {
		return x.State
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,89,opt,name=name" json:"name,omitempty"`
	Enabled       *bool                  `protobuf:"varint,90,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Reset() {
	*x = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType{}
	mi := &file_l2cpd_oc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) ProtoMessage() {
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) ProtoReflect() protoreflect.Message {
	mi := &file_l2cpd_oc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType.ProtoReflect.Descriptor instead.
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Descriptor() ([]byte, []int) {
	return file_l2cpd_oc_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 2, 0, 0}
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

var file_l2cpd_oc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*JuniperNetworksSensors)(nil),
		ExtensionType: (*LldpL2Cp)(nil),
		Field:         51,
		Name:          "jnpr_lldp_l2cp_ext",
		Tag:           "bytes,51,opt,name=jnpr_lldp_l2cp_ext",
		Filename:      "l2cpd_oc.proto",
	},
}

// Extension fields to JuniperNetworksSensors.
var (
	// optional lldp_l2cp jnpr_lldp_l2cp_ext = 51;
	E_JnprLldpL2CpExt = &file_l2cpd_oc_proto_extTypes[0]
)

var File_l2cpd_oc_proto protoreflect.FileDescriptor

var file_l2cpd_oc_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x6c, 0x32, 0x63, 0x70, 0x64, 0x5f, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x1b, 0x0a, 0x09, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c,
	0x32, 0x63, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32,
	0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x1a, 0xca,
	0x05, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6c, 0x76, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x5d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x73, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x6c, 0x76, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x5f, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a,
	0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x27, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x50, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xc0, 0x02, 0x0a, 0x0d, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4f,
	0x75, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x69, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6c, 0x76, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x6c, 0x76, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6c, 0x76, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x38, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6c, 0x76, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6c, 0x76, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6c, 0x76, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x61, 0x67, 0x65,
	0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x41, 0x67, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x1a, 0xf1, 0x14, 0x0a, 0x0f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x48, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x97, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x93, 0x14, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c,
	0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f,
	0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x1a, 0x8b, 0x04,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x08, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x6c,
	0x6f, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c,
	0x6f, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x50, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9b, 0x02,
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x39, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6c, 0x76, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6c, 0x76, 0x44, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6c, 0x76, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6c, 0x76, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x1a, 0xb1, 0x0e, 0x0a, 0x0e,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x63,
	0x0a, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x1a, 0xb9, 0x0d, 0x0a, 0x0d, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x68, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x6c,
	0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x79, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x74, 0x6c, 0x76, 0x73, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x6c,
	0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x6c, 0x76, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6c, 0x76,
	0x73, 0x12, 0x7d, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f,
	0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0xc5, 0x03, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x43,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x45, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x47, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x48, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x49, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x4f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x4e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xca, 0x03, 0x0a, 0x10, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x6c, 0x76, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x72, 0x0a,
	0x03, 0x74, 0x6c, 0x76, 0x18, 0x4f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x6c, 0x6c, 0x64,
	0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x6c, 0x76, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x74, 0x6c, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x03, 0x74, 0x6c,
	0x76, 0x1a, 0xc1, 0x02, 0x0a, 0x08, 0x74, 0x6c, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x69, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6f, 0x75, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x69, 0x5f, 0x73, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x52, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x69, 0x53, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32,
	0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x6c, 0x76, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x74, 0x6c, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x69, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x53, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x75, 0x69, 0x18, 0x54, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x69, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x75, 0x69, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x55, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x69, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x56, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x97, 0x03, 0x0a, 0x11, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x0a,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x97, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x68, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xf5, 0x01, 0x0a, 0x0f, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x58, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x40, 0x02, 0x08, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x73, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c,
	0x32, 0x63, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x1a, 0x3a, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x59, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x3a,
	0x50, 0x0a, 0x12, 0x6a, 0x6e, 0x70, 0x72, 0x5f, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63,
	0x70, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x17, 0x2e, 0x4a, 0x75, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x6c, 0x64, 0x70, 0x5f, 0x6c, 0x32, 0x63, 0x70,
	0x52, 0x0f, 0x6a, 0x6e, 0x70, 0x72, 0x4c, 0x6c, 0x64, 0x70, 0x4c, 0x32, 0x63, 0x70, 0x45, 0x78,
	0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
})

var (
	file_l2cpd_oc_proto_rawDescOnce sync.Once
	file_l2cpd_oc_proto_rawDescData []byte
)

func file_l2cpd_oc_proto_rawDescGZIP() []byte {
	file_l2cpd_oc_proto_rawDescOnce.Do(func() {
		file_l2cpd_oc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_l2cpd_oc_proto_rawDesc), len(file_l2cpd_oc_proto_rawDesc)))
	})
	return file_l2cpd_oc_proto_rawDescData
}

var file_l2cpd_oc_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_l2cpd_oc_proto_goTypes = []any{
	(*LldpL2Cp)(nil),                                                                                            // 0: lldp_l2cp
	(*LldpL2CpStateType)(nil),                                                                                   // 1: lldp_l2cp.state_type
	(*LldpL2CpInterfacesType)(nil),                                                                              // 2: lldp_l2cp.interfaces_type
	(*LldpL2CpStateTypeCountersType)(nil),                                                                       // 3: lldp_l2cp.state_type.counters_type
	(*LldpL2CpInterfacesTypeInterfaceList)(nil),                                                                 // 4: lldp_l2cp.interfaces_type.interface_list
	(*LldpL2CpInterfacesTypeInterfaceListStateType)(nil),                                                        // 5: lldp_l2cp.interfaces_type.interface_list.state_type
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsType)(nil),                                                    // 6: lldp_l2cp.interfaces_type.interface_list.neighbors_type
	(*LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType)(nil),                                            // 7: lldp_l2cp.interfaces_type.interface_list.state_type.counters_type
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList)(nil),                                        // 8: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType)(nil),                               // 9: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.state_type
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType)(nil),                          // 10: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType)(nil),                        // 11: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList)(nil),                   // 12: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType)(nil),          // 13: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list.state_type
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList)(nil),          // 14: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list
	(*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType)(nil), // 15: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list.state_type
	(*JuniperNetworksSensors)(nil),                                                                              // 16: JuniperNetworksSensors
}
var file_l2cpd_oc_proto_depIdxs = []int32{
	1,  // 0: lldp_l2cp.state:type_name -> lldp_l2cp.state_type
	2,  // 1: lldp_l2cp.interfaces:type_name -> lldp_l2cp.interfaces_type
	3,  // 2: lldp_l2cp.state_type.counters:type_name -> lldp_l2cp.state_type.counters_type
	4,  // 3: lldp_l2cp.interfaces_type.interface:type_name -> lldp_l2cp.interfaces_type.interface_list
	5,  // 4: lldp_l2cp.interfaces_type.interface_list.state:type_name -> lldp_l2cp.interfaces_type.interface_list.state_type
	6,  // 5: lldp_l2cp.interfaces_type.interface_list.neighbors:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type
	7,  // 6: lldp_l2cp.interfaces_type.interface_list.state_type.counters:type_name -> lldp_l2cp.interfaces_type.interface_list.state_type.counters_type
	8,  // 7: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list
	9,  // 8: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.state:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.state_type
	10, // 9: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type
	11, // 10: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type
	12, // 11: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list
	14, // 12: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list
	13, // 13: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list.state:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list.state_type
	15, // 14: lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list.state:type_name -> lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list.state_type
	16, // 15: jnpr_lldp_l2cp_ext:extendee -> JuniperNetworksSensors
	0,  // 16: jnpr_lldp_l2cp_ext:type_name -> lldp_l2cp
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	16, // [16:17] is the sub-list for extension type_name
	15, // [15:16] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_l2cpd_oc_proto_init() }
func file_l2cpd_oc_proto_init() {
	if File_l2cpd_oc_proto != nil {
		return
	}
	file_telemetry_top_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_l2cpd_oc_proto_rawDesc), len(file_l2cpd_oc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_l2cpd_oc_proto_goTypes,
		DependencyIndexes: file_l2cpd_oc_proto_depIdxs,
		MessageInfos:      file_l2cpd_oc_proto_msgTypes,
		ExtensionInfos:    file_l2cpd_oc_proto_extTypes,
	}.Build()
	File_l2cpd_oc_proto = out.File
	file_l2cpd_oc_proto_goTypes = nil
	file_l2cpd_oc_proto_depIdxs = nil
}
